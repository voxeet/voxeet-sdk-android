{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Android Client SDK Overview \u00b6 This guide will help you learn more about how to use the Dolby.io Communications Client SDKs with some common scenarios. Initializing the SDK - initialize and integrate the Client SDKs into your application Conferencing - creating and joining a conference Presenting - sharing screen, files, or other media in a conference Inviting Participants - invite participants to a conference Using Notifications - allows application users to receive notifications related to conference events Client SDK Reference Documentation \u00b6 Reference","title":"Index"},{"location":"#android-client-sdk-overview","text":"This guide will help you learn more about how to use the Dolby.io Communications Client SDKs with some common scenarios. Initializing the SDK - initialize and integrate the Client SDKs into your application Conferencing - creating and joining a conference Presenting - sharing screen, files, or other media in a conference Inviting Participants - invite participants to a conference Using Notifications - allows application users to receive notifications related to conference events","title":"Android Client SDK Overview"},{"location":"#client-sdk-reference-documentation","text":"Reference","title":"Client SDK Reference Documentation"},{"location":"android-getting-started/","text":"This guide details how to create a basic audio conference application for Android. It starts with importing the Dolby.io Communications Client SDKs and guides through the next steps to launch the first conference call. Prerequisites \u00b6 Make sure that you have: A Dolby.io account A working webcam and a microphone Android Studio For reference, see the GitHub sample repository .","title":"Index"},{"location":"android-getting-started/#prerequisites","text":"Make sure that you have: A Dolby.io account A working webcam and a microphone Android Studio For reference, see the GitHub sample repository .","title":"Prerequisites"},{"location":"android-getting-started/android-create-basic-audio-conference/","text":"Prerequisites \u00b6 Make sure that you have: A Dolby.io account A working webcam and a microphone Android Studio For reference, see the GitHub sample repository . Procedure \u00b6 Create your project \u00b6 Open Android Studio and create a new Java project. Select the \u201cEmpty activity\u201d template. In this example, only default options are included. 1. Add the repository dependency to the Gradle script. Add the following lines to the build.gradle file for the project (not the module) at the root of the repository: allprojects { repositories { maven { url \"https://android-sdk.voxeet.com/release\" content { includeGroup \"com.voxeet.sdk\" } } } } 2. Add the SDK dependency. Include the Dolby.io Communications SDK for Android as a dependency in the app/build.gradle file, in the dependencies section: implementation \"com.voxeet.sdk:sdk:3.6.0\" 3. Use viewBinding to facilitate the integration of the SDK and manage injection, in the app/build.gradle file, in the android section: buildFeatures { viewBinding = true } 4. Make sure to not use Android SDK version older than 21. The SDK is only compatible with android 21+ . This change is for the android section in the file app/build.gradle . compileSdkVersion 31 buildToolsVersion \"31.0.0\" defaultConfig { minSdkVersion 21 targetSdkVersion 31 } 5. Make sure that a compilation toolchain uses the Java 11. This change is for the android section in the file app/build.gradle . compileOptions { sourceCompatibility JavaVersion.VERSION_1_11 targetCompatibility JavaVersion.VERSION_1_11 } 6. Android Studio displays a banner above the text editor that informs that the Gradle files have changed. Click the \u201cSync Now\u201d link. 7. To update the layout, edit the activity_main.xml file from the app/src/main/res/layout/ folder. In Android Studio, this file is found in app/res/layout . Modify its content as in the following example: <?xml version=\"1.0\" encoding=\"utf-8\"?> <ScrollView xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:orientation= \"vertical\" tools:context= \".MainActivity\" > <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:orientation= \"vertical\" > <!-- Step 1. Put the layout changes for the open/close session step here --> <!-- Step 2. Put the layout changes for the join conference step here --> <!-- Step 3. Put the layout changes for the video step here --> <!-- Step 4. Put the layout changes for the view participants step here --> <!-- Step 5. Put the layout changes for the screen sharing step here --> <!-- Step 6. Put the layout changes for the recording step here --> </LinearLayout> </ScrollView> 8. Edit the MainActivity.java file and add the following imports: import android.Manifest ; import android.content.Intent ; import android.content.pm.PackageManager ; import android.os.Bundle ; import android.text.TextUtils ; import android.view.View ; import android.widget.Toast ; import androidx.annotation.NonNull ; import androidx.appcompat.app.AppCompatActivity ; import androidx.core.app.ActivityCompat ; import com.example.myapplication.databinding.ActivityMainBinding ; import com.voxeet.VoxeetSDK ; import com.voxeet.android.media.MediaStream ; import com.voxeet.android.media.stream.MediaStreamType ; import com.voxeet.promise.solve.ErrorPromise ; import com.voxeet.promise.solve.ThenPromise ; import com.voxeet.sdk.events.promises.ServerErrorException ; import com.voxeet.sdk.events.v2.ParticipantAddedEvent ; import com.voxeet.sdk.events.v2.ParticipantUpdatedEvent ; import com.voxeet.sdk.events.v2.StreamAddedEvent ; import com.voxeet.sdk.events.v2.StreamRemovedEvent ; import com.voxeet.sdk.events.v2.StreamUpdatedEvent ; import com.voxeet.sdk.json.ParticipantInfo ; import com.voxeet.sdk.json.RecordingStatusUpdatedEvent ; import com.voxeet.sdk.json.internal.ParamsHolder ; import com.voxeet.sdk.models.Conference ; import com.voxeet.sdk.models.Participant ; import com.voxeet.sdk.services.builders.ConferenceCreateOptions ; import com.voxeet.sdk.services.builders.ConferenceJoinOptions ; import com.voxeet.sdk.services.conference.information.ConferenceInformation ; import com.voxeet.sdk.services.screenshare.RequestScreenSharePermissionEvent ; import com.voxeet.sdk.services.screenshare.ScreenCapturerService ; import com.voxeet.sdk.views.VideoView ; import org.greenrobot.eventbus.Subscribe ; import org.greenrobot.eventbus.ThreadMode ; import java.util.ArrayList ; import java.util.List ; import java.util.Random ; 9. To prepare events and logic integration, create a list of views responsible for keeping the views enabled in the following modes: when there are no connected sessions when a session is connected when a conference is connected when there are no connected conferences when your video is not started when your video is started when you are sharing your screen when you are not sharing your screen Edit the MainActivity class in MainActivity.java and add the following values: public class MainActivity extends AppCompatActivity { protected List < View > views = new ArrayList <> (); protected List < View > buttonsNotLoggedIn = new ArrayList <> (); protected List < View > buttonsInConference = new ArrayList <> (); protected List < View > buttonsNotInConference = new ArrayList <> (); protected List < View > buttonsInOwnVideo = new ArrayList <> (); protected List < View > buttonsNotInOwnVideo = new ArrayList <> (); protected List < View > buttonsInOwnScreenShare = new ArrayList <> (); protected List < View > buttonsNotInOwnScreenShare = new ArrayList <> (); ... } 10. To simplify creating conferences, add the following code to the MainActivity class. The onCreate method created with the project is replaced. Overridden onResume method to update views. A method for views updates and management. The default error management method. Two methods for managing contextual lists of views. public class MainActivity extends AppCompatActivity { ... private ActivityMainBinding binding ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); binding = ActivityMainBinding . inflate ( getLayoutInflater ()); View view = binding . getRoot (); setContentView ( view ); // All the logic of the onCreate will be put after this comment } @Override protected void onResume () { super . onResume (); // Here will be put the permission check // We update the various views to enable or disable the ones we want to updateViews (); } private void updateViews () { // This method will be updated step by step } private ErrorPromise error () { return error -> { Toast . makeText ( MainActivity . this , \"ERROR...\" , Toast . LENGTH_SHORT ). show (); error . printStackTrace (); updateViews (); }; } private void setEnabled ( List < View > views , boolean enabled ) { for ( View view : views ) view . setEnabled ( enabled ); } private MainActivity add ( List < View > list , int id ) { list . add ( findViewById ( id )); return this ; } } Initialize the SDK with your Dolby.io credentials \u00b6 Initialize the SDK using the secure authentication method that uses a token in the application. For more information, see the Initializing the SDK document. For the purpose of this example, we are using a client access token generated from the Dolby.io dashboard. It is recommended that you create a new Sample application for this tutorial. 1. Add the following code to the onCreate method from the MainActivity.java file. Replace the TestClientAccessToken string with the token generated from the Dolby.io dashboard. @Override protected void onCreate ( Bundle savedInstanceState ) { ... // Generate a client access token from the Dolby.io dashboard and insert into accessToken variable String accessToken = \"<ClientAccessToken>\" ; VoxeetSDK . initialize ( accessToken , ( b , tokenCallback ) -> { tokenCallback . ok ( accessToken ); }); } 2. Add the following lines at the end of onResume : @Override protected void onResume () { super . onResume (); ... // Register the current activity in the SDK VoxeetSDK . instance (). register ( this ); } 3. Unregister from the SDK when the MainActivity is in the background by adding onPause . @Override protected void onPause () { // Register the current activity in the SDK VoxeetSDK . instance (). unregister ( this ); super . onPause (); } Open and close a session \u00b6 To allow creating and joining conferences, log in with a user name. In this tutorial, random user names are assigned. 1. To modify the layout, edit the main_activity.xml file, adding the following content for Step 1: <LinearLayout ... > <!-- Step 1. Put the layout changes for the open/close session step here --> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"user session\" /> <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:orientation= \"horizontal\" > <EditText android:id= \"@+id/user_name\" android:layout_width= \"0dp\" android:layout_height= \"wrap_content\" android:layout_weight= \"1\" /> <LinearLayout android:layout_width= \"0dp\" android:layout_height= \"wrap_content\" android:layout_weight= \"1\" android:orientation= \"horizontal\" > <Button android:id= \"@+id/login\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"log in\" /> <Button android:id= \"@+id/logout\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"logout\" /> </LinearLayout> </LinearLayout> <!-- Step 2. ... --> </LinearLayout> 2. Modify the interface linking in the MainActivity class in MainActivity.java : New methods for MainActivity : public void onLogin () { } public void onLogout () { } @Override protected void onCreate ( Bundle savedInstanceState ) { ... // Add onClickListeners for onLogin() and onLogout() binding . login . setOnClickListener ( new View . OnClickListener () { @Override public void onClick ( View view ) { onLogin (); } }); binding . logout . setOnClickListener ( new View . OnClickListener () { @Override public void onClick ( View view ) { onLogout (); } }); Add the following code to the onCreate method: @Override protected void onCreate ( Bundle savedInstanceState ) { ... // Adding the user_name, login and logout views related to the open/close and conference flow add ( views , R . id . login ); add ( views , R . id . logout ); add ( buttonsNotLoggedIn , R . id . login ); add ( buttonsNotLoggedIn , R . id . user_name ); add ( buttonsInConference , R . id . logout ); add ( buttonsNotInConference , R . id . logout ); // Set a random user name String [] avengersNames = { \"Thor\" , \"Cap\" , \"Tony Stark\" , \"Black Panther\" , \"Black Widow\" , \"Hulk\" , \"Spider-Man\" , }; Random r = new Random (); binding . userName . setText ( avengersNames [ r . nextInt ( avengersNames . length ) ] ); } 3. Add the following logic to the application: Use the following implementation for onLogin : public void onLogin () { VoxeetSDK . session (). open ( new ParticipantInfo ( binding . userName . getText (). toString (), \"\" , \"\" )) . then (( result , solver ) -> { Toast . makeText ( MainActivity . this , \"log in successful\" , Toast . LENGTH_SHORT ). show (); updateViews (); }) . error ( error ()); } Use the following implementation for onLogout : public void onLogout () { VoxeetSDK . session (). close () . then (( result , solver ) -> { Toast . makeText ( MainActivity . this , \"logout done\" , Toast . LENGTH_SHORT ). show (); updateViews (); }) . error ( error ()); } Use the following implementation for updateViews : private void updateViews () { // Disable every view setEnabled ( views , false ); // If the user is not connected, we will only enabled the not logged in buttons if ( ! VoxeetSDK . session (). isOpen ()) { setEnabled ( buttonsNotLoggedIn , true ); return ; } } Add a joining option \u00b6 1. To modify the layout, edit the main_activity.xml file with the following content for Step 2: <LinearLayout ... > ... <!-- Step 2. Put the layout changes for the join conference step here --> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"conference name :\" /> <EditText android:id= \"@+id/conference_name\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" /> <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:orientation= \"horizontal\" > <Button android:id= \"@+id/join\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"start\" /> <!-- Step 2.2. The layout will be upgraded in the leave conference step --> </LinearLayout> <!-- Step 3. ... --> </LinearLayout> 2. Modify the interface linking in the MainActivity class in MainActivity.java : New method for MainActivity : public void onJoin () { } @Override protected void onCreate ( Bundle savedInstanceState ) { ... // Add onClickListeners for onJoin() binding . join . setOnClickListener ( new View . OnClickListener () { @Override public void onClick ( View view ) { onJoin (); } }); Add the following code to the onCreate method: @Override protected void onCreate ( Bundle savedInstanceState ) { ... // Add the join button and enable it only when not in a conference add ( views , R . id . join ); add ( buttonsNotInConference , R . id . join ); // Set a default conference name binding . conferenceName . setText ( \"Avengers meeting\" ); } 3. Add the following logic to the application: Configure permission management in MainActivity onResume . Simplify the permission flow to ask for microphone and camera permissions when the application resumes. @Override protected void onResume () { ... if ( ActivityCompat . checkSelfPermission ( this , Manifest . permission . RECORD_AUDIO ) != PackageManager . PERMISSION_GRANTED || ActivityCompat . checkSelfPermission ( this , Manifest . permission . CAMERA ) != PackageManager . PERMISSION_GRANTED ) { ActivityCompat . requestPermissions ( this , new String [] { Manifest . permission . RECORD_AUDIO , Manifest . permission . CAMERA }, 0x20 ); } } Bind the join flow implementation in the onJoin method created previously. The method creates and joins the conference. public void onJoin () { ParamsHolder paramsHolder = new ParamsHolder (); paramsHolder . setDolbyVoice ( true ); ConferenceCreateOptions conferenceCreateOptions = new ConferenceCreateOptions . Builder () . setConferenceAlias ( binding . conferenceName . getText (). toString ()) . setParamsHolder ( paramsHolder ) . build (); VoxeetSDK . conference (). create ( conferenceCreateOptions ) . then (( ThenPromise < Conference , Conference > ) conference -> { ConferenceJoinOptions conferenceJoinOptions = new ConferenceJoinOptions . Builder ( conference ) . build (); return VoxeetSDK . conference (). join ( conferenceJoinOptions ); }) . then ( conference -> { Toast . makeText ( MainActivity . this , \"started...\" , Toast . LENGTH_SHORT ). show (); updateViews (); }) . error (( error_in ) -> { Toast . makeText ( MainActivity . this , \"Could not create conference\" , Toast . LENGTH_SHORT ). show (); }); } In updateViews , enable and disable buttons based on the conference state. private void updateViews () { ... ConferenceInformation current = VoxeetSDK . conference (). getCurrentConference (); // We can now add the logic to manage our basic state if ( null != current && VoxeetSDK . conference (). isLive ()) { setEnabled ( buttonsInConference , true ); } else { setEnabled ( buttonsNotInConference , true ); } } Add a leaving option \u00b6 1. To modify the layout, edit the main_activity.xml file, adding the following content for Step 2.2: <LinearLayout ... > ... <LinearLayout ... > <!-- Step 2.2. The layout will be upgraded in the leave conference step --> <Button android:id= \"@+id/leave\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"leave\" /> </LinearLayout> <!-- Step 3. ... --> </LinearLayout> 2. Modify the interface linking in the MainActivity class in MainActivity.java : New method for MainActivity : public void onLeave () { } @Override protected void onCreate ( Bundle savedInstanceState ) { ... // Add onClickListeners for onLeave() binding . leave . setOnClickListener ( new View . OnClickListener () { @Override public void onClick ( View view ) { onLeave (); } }); Add the following code to the onCreate method: @Override protected void onCreate ( Bundle savedInstanceState ) { ... // Add the leave button and enable it only while in a conference add ( views , R . id . leave ); add ( buttonsInConference , R . id . leave ); } 3. Add the following logic to the application: Use the following implementation for onLeave : public void onLeave () { VoxeetSDK . conference (). leave () . then (( result , solver ) -> { updateViews (); Toast . makeText ( MainActivity . this , \"left...\" , Toast . LENGTH_SHORT ). show (); }) . error ( error ()); } Run your application \u00b6 On Android Studio, click on run . Make sure that you have: a configured Android Virtual Device (AVD) available on your machine a connected Android Debug Bridge (ADB) ready to use with an Android device","title":"Create a Basic Audio Conference Application for Android"},{"location":"android-getting-started/android-create-basic-audio-conference/#prerequisites","text":"Make sure that you have: A Dolby.io account A working webcam and a microphone Android Studio For reference, see the GitHub sample repository .","title":"Prerequisites"},{"location":"android-getting-started/android-create-basic-audio-conference/#procedure","text":"","title":"Procedure"},{"location":"android-getting-started/android-create-basic-audio-conference/#create-your-project","text":"Open Android Studio and create a new Java project. Select the \u201cEmpty activity\u201d template. In this example, only default options are included. 1. Add the repository dependency to the Gradle script. Add the following lines to the build.gradle file for the project (not the module) at the root of the repository: allprojects { repositories { maven { url \"https://android-sdk.voxeet.com/release\" content { includeGroup \"com.voxeet.sdk\" } } } } 2. Add the SDK dependency. Include the Dolby.io Communications SDK for Android as a dependency in the app/build.gradle file, in the dependencies section: implementation \"com.voxeet.sdk:sdk:3.6.0\" 3. Use viewBinding to facilitate the integration of the SDK and manage injection, in the app/build.gradle file, in the android section: buildFeatures { viewBinding = true } 4. Make sure to not use Android SDK version older than 21. The SDK is only compatible with android 21+ . This change is for the android section in the file app/build.gradle . compileSdkVersion 31 buildToolsVersion \"31.0.0\" defaultConfig { minSdkVersion 21 targetSdkVersion 31 } 5. Make sure that a compilation toolchain uses the Java 11. This change is for the android section in the file app/build.gradle . compileOptions { sourceCompatibility JavaVersion.VERSION_1_11 targetCompatibility JavaVersion.VERSION_1_11 } 6. Android Studio displays a banner above the text editor that informs that the Gradle files have changed. Click the \u201cSync Now\u201d link. 7. To update the layout, edit the activity_main.xml file from the app/src/main/res/layout/ folder. In Android Studio, this file is found in app/res/layout . Modify its content as in the following example: <?xml version=\"1.0\" encoding=\"utf-8\"?> <ScrollView xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:orientation= \"vertical\" tools:context= \".MainActivity\" > <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:orientation= \"vertical\" > <!-- Step 1. Put the layout changes for the open/close session step here --> <!-- Step 2. Put the layout changes for the join conference step here --> <!-- Step 3. Put the layout changes for the video step here --> <!-- Step 4. Put the layout changes for the view participants step here --> <!-- Step 5. Put the layout changes for the screen sharing step here --> <!-- Step 6. Put the layout changes for the recording step here --> </LinearLayout> </ScrollView> 8. Edit the MainActivity.java file and add the following imports: import android.Manifest ; import android.content.Intent ; import android.content.pm.PackageManager ; import android.os.Bundle ; import android.text.TextUtils ; import android.view.View ; import android.widget.Toast ; import androidx.annotation.NonNull ; import androidx.appcompat.app.AppCompatActivity ; import androidx.core.app.ActivityCompat ; import com.example.myapplication.databinding.ActivityMainBinding ; import com.voxeet.VoxeetSDK ; import com.voxeet.android.media.MediaStream ; import com.voxeet.android.media.stream.MediaStreamType ; import com.voxeet.promise.solve.ErrorPromise ; import com.voxeet.promise.solve.ThenPromise ; import com.voxeet.sdk.events.promises.ServerErrorException ; import com.voxeet.sdk.events.v2.ParticipantAddedEvent ; import com.voxeet.sdk.events.v2.ParticipantUpdatedEvent ; import com.voxeet.sdk.events.v2.StreamAddedEvent ; import com.voxeet.sdk.events.v2.StreamRemovedEvent ; import com.voxeet.sdk.events.v2.StreamUpdatedEvent ; import com.voxeet.sdk.json.ParticipantInfo ; import com.voxeet.sdk.json.RecordingStatusUpdatedEvent ; import com.voxeet.sdk.json.internal.ParamsHolder ; import com.voxeet.sdk.models.Conference ; import com.voxeet.sdk.models.Participant ; import com.voxeet.sdk.services.builders.ConferenceCreateOptions ; import com.voxeet.sdk.services.builders.ConferenceJoinOptions ; import com.voxeet.sdk.services.conference.information.ConferenceInformation ; import com.voxeet.sdk.services.screenshare.RequestScreenSharePermissionEvent ; import com.voxeet.sdk.services.screenshare.ScreenCapturerService ; import com.voxeet.sdk.views.VideoView ; import org.greenrobot.eventbus.Subscribe ; import org.greenrobot.eventbus.ThreadMode ; import java.util.ArrayList ; import java.util.List ; import java.util.Random ; 9. To prepare events and logic integration, create a list of views responsible for keeping the views enabled in the following modes: when there are no connected sessions when a session is connected when a conference is connected when there are no connected conferences when your video is not started when your video is started when you are sharing your screen when you are not sharing your screen Edit the MainActivity class in MainActivity.java and add the following values: public class MainActivity extends AppCompatActivity { protected List < View > views = new ArrayList <> (); protected List < View > buttonsNotLoggedIn = new ArrayList <> (); protected List < View > buttonsInConference = new ArrayList <> (); protected List < View > buttonsNotInConference = new ArrayList <> (); protected List < View > buttonsInOwnVideo = new ArrayList <> (); protected List < View > buttonsNotInOwnVideo = new ArrayList <> (); protected List < View > buttonsInOwnScreenShare = new ArrayList <> (); protected List < View > buttonsNotInOwnScreenShare = new ArrayList <> (); ... } 10. To simplify creating conferences, add the following code to the MainActivity class. The onCreate method created with the project is replaced. Overridden onResume method to update views. A method for views updates and management. The default error management method. Two methods for managing contextual lists of views. public class MainActivity extends AppCompatActivity { ... private ActivityMainBinding binding ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); binding = ActivityMainBinding . inflate ( getLayoutInflater ()); View view = binding . getRoot (); setContentView ( view ); // All the logic of the onCreate will be put after this comment } @Override protected void onResume () { super . onResume (); // Here will be put the permission check // We update the various views to enable or disable the ones we want to updateViews (); } private void updateViews () { // This method will be updated step by step } private ErrorPromise error () { return error -> { Toast . makeText ( MainActivity . this , \"ERROR...\" , Toast . LENGTH_SHORT ). show (); error . printStackTrace (); updateViews (); }; } private void setEnabled ( List < View > views , boolean enabled ) { for ( View view : views ) view . setEnabled ( enabled ); } private MainActivity add ( List < View > list , int id ) { list . add ( findViewById ( id )); return this ; } }","title":"Create your project"},{"location":"android-getting-started/android-create-basic-audio-conference/#initialize-the-sdk-with-your-dolbyio-credentials","text":"Initialize the SDK using the secure authentication method that uses a token in the application. For more information, see the Initializing the SDK document. For the purpose of this example, we are using a client access token generated from the Dolby.io dashboard. It is recommended that you create a new Sample application for this tutorial. 1. Add the following code to the onCreate method from the MainActivity.java file. Replace the TestClientAccessToken string with the token generated from the Dolby.io dashboard. @Override protected void onCreate ( Bundle savedInstanceState ) { ... // Generate a client access token from the Dolby.io dashboard and insert into accessToken variable String accessToken = \"<ClientAccessToken>\" ; VoxeetSDK . initialize ( accessToken , ( b , tokenCallback ) -> { tokenCallback . ok ( accessToken ); }); } 2. Add the following lines at the end of onResume : @Override protected void onResume () { super . onResume (); ... // Register the current activity in the SDK VoxeetSDK . instance (). register ( this ); } 3. Unregister from the SDK when the MainActivity is in the background by adding onPause . @Override protected void onPause () { // Register the current activity in the SDK VoxeetSDK . instance (). unregister ( this ); super . onPause (); }","title":"Initialize the SDK with your Dolby.io credentials"},{"location":"android-getting-started/android-create-basic-audio-conference/#open-and-close-a-session","text":"To allow creating and joining conferences, log in with a user name. In this tutorial, random user names are assigned. 1. To modify the layout, edit the main_activity.xml file, adding the following content for Step 1: <LinearLayout ... > <!-- Step 1. Put the layout changes for the open/close session step here --> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"user session\" /> <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:orientation= \"horizontal\" > <EditText android:id= \"@+id/user_name\" android:layout_width= \"0dp\" android:layout_height= \"wrap_content\" android:layout_weight= \"1\" /> <LinearLayout android:layout_width= \"0dp\" android:layout_height= \"wrap_content\" android:layout_weight= \"1\" android:orientation= \"horizontal\" > <Button android:id= \"@+id/login\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"log in\" /> <Button android:id= \"@+id/logout\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"logout\" /> </LinearLayout> </LinearLayout> <!-- Step 2. ... --> </LinearLayout> 2. Modify the interface linking in the MainActivity class in MainActivity.java : New methods for MainActivity : public void onLogin () { } public void onLogout () { } @Override protected void onCreate ( Bundle savedInstanceState ) { ... // Add onClickListeners for onLogin() and onLogout() binding . login . setOnClickListener ( new View . OnClickListener () { @Override public void onClick ( View view ) { onLogin (); } }); binding . logout . setOnClickListener ( new View . OnClickListener () { @Override public void onClick ( View view ) { onLogout (); } }); Add the following code to the onCreate method: @Override protected void onCreate ( Bundle savedInstanceState ) { ... // Adding the user_name, login and logout views related to the open/close and conference flow add ( views , R . id . login ); add ( views , R . id . logout ); add ( buttonsNotLoggedIn , R . id . login ); add ( buttonsNotLoggedIn , R . id . user_name ); add ( buttonsInConference , R . id . logout ); add ( buttonsNotInConference , R . id . logout ); // Set a random user name String [] avengersNames = { \"Thor\" , \"Cap\" , \"Tony Stark\" , \"Black Panther\" , \"Black Widow\" , \"Hulk\" , \"Spider-Man\" , }; Random r = new Random (); binding . userName . setText ( avengersNames [ r . nextInt ( avengersNames . length ) ] ); } 3. Add the following logic to the application: Use the following implementation for onLogin : public void onLogin () { VoxeetSDK . session (). open ( new ParticipantInfo ( binding . userName . getText (). toString (), \"\" , \"\" )) . then (( result , solver ) -> { Toast . makeText ( MainActivity . this , \"log in successful\" , Toast . LENGTH_SHORT ). show (); updateViews (); }) . error ( error ()); } Use the following implementation for onLogout : public void onLogout () { VoxeetSDK . session (). close () . then (( result , solver ) -> { Toast . makeText ( MainActivity . this , \"logout done\" , Toast . LENGTH_SHORT ). show (); updateViews (); }) . error ( error ()); } Use the following implementation for updateViews : private void updateViews () { // Disable every view setEnabled ( views , false ); // If the user is not connected, we will only enabled the not logged in buttons if ( ! VoxeetSDK . session (). isOpen ()) { setEnabled ( buttonsNotLoggedIn , true ); return ; } }","title":"Open and close a session"},{"location":"android-getting-started/android-create-basic-audio-conference/#add-a-joining-option","text":"1. To modify the layout, edit the main_activity.xml file with the following content for Step 2: <LinearLayout ... > ... <!-- Step 2. Put the layout changes for the join conference step here --> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"conference name :\" /> <EditText android:id= \"@+id/conference_name\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" /> <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:orientation= \"horizontal\" > <Button android:id= \"@+id/join\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"start\" /> <!-- Step 2.2. The layout will be upgraded in the leave conference step --> </LinearLayout> <!-- Step 3. ... --> </LinearLayout> 2. Modify the interface linking in the MainActivity class in MainActivity.java : New method for MainActivity : public void onJoin () { } @Override protected void onCreate ( Bundle savedInstanceState ) { ... // Add onClickListeners for onJoin() binding . join . setOnClickListener ( new View . OnClickListener () { @Override public void onClick ( View view ) { onJoin (); } }); Add the following code to the onCreate method: @Override protected void onCreate ( Bundle savedInstanceState ) { ... // Add the join button and enable it only when not in a conference add ( views , R . id . join ); add ( buttonsNotInConference , R . id . join ); // Set a default conference name binding . conferenceName . setText ( \"Avengers meeting\" ); } 3. Add the following logic to the application: Configure permission management in MainActivity onResume . Simplify the permission flow to ask for microphone and camera permissions when the application resumes. @Override protected void onResume () { ... if ( ActivityCompat . checkSelfPermission ( this , Manifest . permission . RECORD_AUDIO ) != PackageManager . PERMISSION_GRANTED || ActivityCompat . checkSelfPermission ( this , Manifest . permission . CAMERA ) != PackageManager . PERMISSION_GRANTED ) { ActivityCompat . requestPermissions ( this , new String [] { Manifest . permission . RECORD_AUDIO , Manifest . permission . CAMERA }, 0x20 ); } } Bind the join flow implementation in the onJoin method created previously. The method creates and joins the conference. public void onJoin () { ParamsHolder paramsHolder = new ParamsHolder (); paramsHolder . setDolbyVoice ( true ); ConferenceCreateOptions conferenceCreateOptions = new ConferenceCreateOptions . Builder () . setConferenceAlias ( binding . conferenceName . getText (). toString ()) . setParamsHolder ( paramsHolder ) . build (); VoxeetSDK . conference (). create ( conferenceCreateOptions ) . then (( ThenPromise < Conference , Conference > ) conference -> { ConferenceJoinOptions conferenceJoinOptions = new ConferenceJoinOptions . Builder ( conference ) . build (); return VoxeetSDK . conference (). join ( conferenceJoinOptions ); }) . then ( conference -> { Toast . makeText ( MainActivity . this , \"started...\" , Toast . LENGTH_SHORT ). show (); updateViews (); }) . error (( error_in ) -> { Toast . makeText ( MainActivity . this , \"Could not create conference\" , Toast . LENGTH_SHORT ). show (); }); } In updateViews , enable and disable buttons based on the conference state. private void updateViews () { ... ConferenceInformation current = VoxeetSDK . conference (). getCurrentConference (); // We can now add the logic to manage our basic state if ( null != current && VoxeetSDK . conference (). isLive ()) { setEnabled ( buttonsInConference , true ); } else { setEnabled ( buttonsNotInConference , true ); } }","title":"Add a joining option"},{"location":"android-getting-started/android-create-basic-audio-conference/#add-a-leaving-option","text":"1. To modify the layout, edit the main_activity.xml file, adding the following content for Step 2.2: <LinearLayout ... > ... <LinearLayout ... > <!-- Step 2.2. The layout will be upgraded in the leave conference step --> <Button android:id= \"@+id/leave\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"leave\" /> </LinearLayout> <!-- Step 3. ... --> </LinearLayout> 2. Modify the interface linking in the MainActivity class in MainActivity.java : New method for MainActivity : public void onLeave () { } @Override protected void onCreate ( Bundle savedInstanceState ) { ... // Add onClickListeners for onLeave() binding . leave . setOnClickListener ( new View . OnClickListener () { @Override public void onClick ( View view ) { onLeave (); } }); Add the following code to the onCreate method: @Override protected void onCreate ( Bundle savedInstanceState ) { ... // Add the leave button and enable it only while in a conference add ( views , R . id . leave ); add ( buttonsInConference , R . id . leave ); } 3. Add the following logic to the application: Use the following implementation for onLeave : public void onLeave () { VoxeetSDK . conference (). leave () . then (( result , solver ) -> { updateViews (); Toast . makeText ( MainActivity . this , \"left...\" , Toast . LENGTH_SHORT ). show (); }) . error ( error ()); }","title":"Add a leaving option"},{"location":"android-getting-started/android-create-basic-audio-conference/#run-your-application","text":"On Android Studio, click on run . Make sure that you have: a configured Android Virtual Device (AVD) available on your machine a connected Android Debug Bridge (ADB) ready to use with an Android device","title":"Run your application"},{"location":"android-getting-started/implement-screen-sharing-for-android/","text":"This tutorial guides how to implement a screen sharing feature to the conference application. Start sharing a screen \u00b6 Layout modification \u00b6 1. To modify the layout, edit the main_activity.xml file, adding the following content for Step 5: <LinearLayout ... > ... <!-- Step 5. Put the layout changes for the screen sharing step here --> <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:orientation= \"horizontal\" > <Button android:id= \"@+id/startScreenShare\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"start screenshare\" /> <!-- Step 5.2. This layout will be upgraded in the stop screen sharing step --> </LinearLayout> <!-- Step 6. ... </LinearLayout> 2. Modify the interface linking in the MainActivity class in MainActivity.java : New method for MainActivity : public void onStartScreenShare () { } // add onClickListener for onStartScreenShare() @Override protected void onCreate ( Bundle savedInstanceState ) { // ... binding . startScreenShare . setOnClickListener ( new View . OnClickListener () { @Override public void onClick ( View view ) { onStartScreenShare (); } }); // ... } Add the following code to the onCreate method: @Override protected void onCreate ( Bundle savedInstanceState ) { ... //adding the startScreenShare in the flow add ( views , R . id . startScreenShare ); add ( buttonsInConference , R . id . startScreenShare ); add ( buttonsNotInOwnScreenShare , R . id . startScreenShare ); } 3. Add the following logic to the application: In updateViews , enable and disable buttons based on the own video state. private void updateViews () { ... if ( null != current ) { if ( current . isScreenShareOn ()) { setEnabled ( buttonsInOwnScreenShare , true ); setEnabled ( buttonsNotInOwnScreenShare , false ); } else { setEnabled ( buttonsInOwnScreenShare , false ); setEnabled ( buttonsNotInOwnScreenShare , true ); } } } In updateStreams , use a screen share stream in preference to a video stream: private void updateStreams () { ... // Screen shares take precedence over videos for ( Participant user : VoxeetSDK . conference (). getParticipants ()) { boolean isLocal = user . getId (). equals ( VoxeetSDK . session (). getParticipantId ()); MediaStream stream = user . streamsHandler (). getFirst ( MediaStreamType . ScreenShare ); VideoView video = isLocal ? this . binding . video : this . binding . videoOther ; if ( null != stream && ! stream . videoTracks (). isEmpty ()) { video . setVisibility ( View . VISIBLE ); video . attach ( user . getId (), stream ); } } } Use the following implementation onStartScreenShare : public void onStartScreenShare () { VoxeetSDK . screenShare (). sendRequestStartScreenShare (); } Add a handler for the RequestScreenSharePermissionEvent . @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( RequestScreenSharePermissionEvent event ) { VoxeetSDK . screenShare (). sendUserPermissionRequest ( this ); } Add a handler for activity results with an override of onActivityResult . @Override protected void onActivityResult ( int requestCode , int resultCode , Intent data ) { boolean managed = false ; if ( null != VoxeetSDK . screenShare ()) { managed = VoxeetSDK . screenShare (). onActivityResult ( requestCode , resultCode , data ); } if ( ! managed ) { super . onActivityResult ( requestCode , resultCode , data ); } } Add the following import: import com.voxeet.sdk.services.screenshare.ScreenCapturerService ; Modify onResume to consuming the result of the screen sharing request. @Override protected void onResume () { ... ScreenCapturerService . register ( this ); VoxeetSDK . screenShare (). consumeRightsToScreenShare (); } - Add the onDestroy function. @Override protected void onDestroy () { ScreenCapturerService . unregisterActivity (); super . onDestroy (); } After the screenshare is started, UserStreamUpdated is triggered. Stop sharing a screen \u00b6 Layout modification \u00b6 1. To modify the layout, edit the main_activity.xml file, adding the following content for Step 5.2: <LinearLayout ... > ... <LinearLayout ... > ... <!-- Step 5.2. This layout will be upgraded in the stop screen sharing step --> <Button android:id= \"@+id/stopScreenShare\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"stop screenshare\" /> </LinearLayout> <!-- Step 6. ... </LinearLayout> 2. Modify the interface linking in the MainActivity class in MainActivity.java : New method for MainActivity : public void onStopScreenShare () { } // add onClickListener for onStopScreenShare() @Override protected void onCreate ( Bundle savedInstanceState ) { // ... binding . stopScreenShare . setOnClickListener ( new View . OnClickListener () { @Override public void onClick ( View view ) { onStopScreenShare (); } }); // ... } Add the following code to the onCreate method: @Override protected void onCreate ( Bundle savedInstanceState ) { ... //adding the stopScreenShare in the flow add ( views , R . id . stopScreenShare ); add ( buttonsInConference , R . id . stopScreenShare ); add ( buttonsInOwnScreenShare , R . id . stopScreenShare ); } 3. Add the following logic to the application: Use the following implementation for onStopScreenShare : public void onStopScreenShare () { VoxeetSDK . screenShare (). stopScreenShare () . then (( result , solver ) -> { // screenshare has been stopped locally and remotely updateViews (); }). error ( error -> { // screenshare has been stopped locally but a network error occurred }); } After the screenshare is stopped, UserStreamUpdated is triggered.","title":"Implement Screen Sharing for Android"},{"location":"android-getting-started/implement-screen-sharing-for-android/#start-sharing-a-screen","text":"","title":"Start sharing a screen"},{"location":"android-getting-started/implement-screen-sharing-for-android/#layout-modification","text":"1. To modify the layout, edit the main_activity.xml file, adding the following content for Step 5: <LinearLayout ... > ... <!-- Step 5. Put the layout changes for the screen sharing step here --> <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:orientation= \"horizontal\" > <Button android:id= \"@+id/startScreenShare\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"start screenshare\" /> <!-- Step 5.2. This layout will be upgraded in the stop screen sharing step --> </LinearLayout> <!-- Step 6. ... </LinearLayout> 2. Modify the interface linking in the MainActivity class in MainActivity.java : New method for MainActivity : public void onStartScreenShare () { } // add onClickListener for onStartScreenShare() @Override protected void onCreate ( Bundle savedInstanceState ) { // ... binding . startScreenShare . setOnClickListener ( new View . OnClickListener () { @Override public void onClick ( View view ) { onStartScreenShare (); } }); // ... } Add the following code to the onCreate method: @Override protected void onCreate ( Bundle savedInstanceState ) { ... //adding the startScreenShare in the flow add ( views , R . id . startScreenShare ); add ( buttonsInConference , R . id . startScreenShare ); add ( buttonsNotInOwnScreenShare , R . id . startScreenShare ); } 3. Add the following logic to the application: In updateViews , enable and disable buttons based on the own video state. private void updateViews () { ... if ( null != current ) { if ( current . isScreenShareOn ()) { setEnabled ( buttonsInOwnScreenShare , true ); setEnabled ( buttonsNotInOwnScreenShare , false ); } else { setEnabled ( buttonsInOwnScreenShare , false ); setEnabled ( buttonsNotInOwnScreenShare , true ); } } } In updateStreams , use a screen share stream in preference to a video stream: private void updateStreams () { ... // Screen shares take precedence over videos for ( Participant user : VoxeetSDK . conference (). getParticipants ()) { boolean isLocal = user . getId (). equals ( VoxeetSDK . session (). getParticipantId ()); MediaStream stream = user . streamsHandler (). getFirst ( MediaStreamType . ScreenShare ); VideoView video = isLocal ? this . binding . video : this . binding . videoOther ; if ( null != stream && ! stream . videoTracks (). isEmpty ()) { video . setVisibility ( View . VISIBLE ); video . attach ( user . getId (), stream ); } } } Use the following implementation onStartScreenShare : public void onStartScreenShare () { VoxeetSDK . screenShare (). sendRequestStartScreenShare (); } Add a handler for the RequestScreenSharePermissionEvent . @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( RequestScreenSharePermissionEvent event ) { VoxeetSDK . screenShare (). sendUserPermissionRequest ( this ); } Add a handler for activity results with an override of onActivityResult . @Override protected void onActivityResult ( int requestCode , int resultCode , Intent data ) { boolean managed = false ; if ( null != VoxeetSDK . screenShare ()) { managed = VoxeetSDK . screenShare (). onActivityResult ( requestCode , resultCode , data ); } if ( ! managed ) { super . onActivityResult ( requestCode , resultCode , data ); } } Add the following import: import com.voxeet.sdk.services.screenshare.ScreenCapturerService ; Modify onResume to consuming the result of the screen sharing request. @Override protected void onResume () { ... ScreenCapturerService . register ( this ); VoxeetSDK . screenShare (). consumeRightsToScreenShare (); } - Add the onDestroy function. @Override protected void onDestroy () { ScreenCapturerService . unregisterActivity (); super . onDestroy (); } After the screenshare is started, UserStreamUpdated is triggered.","title":"Layout modification"},{"location":"android-getting-started/implement-screen-sharing-for-android/#stop-sharing-a-screen","text":"","title":"Stop sharing a screen"},{"location":"android-getting-started/implement-screen-sharing-for-android/#layout-modification_1","text":"1. To modify the layout, edit the main_activity.xml file, adding the following content for Step 5.2: <LinearLayout ... > ... <LinearLayout ... > ... <!-- Step 5.2. This layout will be upgraded in the stop screen sharing step --> <Button android:id= \"@+id/stopScreenShare\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"stop screenshare\" /> </LinearLayout> <!-- Step 6. ... </LinearLayout> 2. Modify the interface linking in the MainActivity class in MainActivity.java : New method for MainActivity : public void onStopScreenShare () { } // add onClickListener for onStopScreenShare() @Override protected void onCreate ( Bundle savedInstanceState ) { // ... binding . stopScreenShare . setOnClickListener ( new View . OnClickListener () { @Override public void onClick ( View view ) { onStopScreenShare (); } }); // ... } Add the following code to the onCreate method: @Override protected void onCreate ( Bundle savedInstanceState ) { ... //adding the stopScreenShare in the flow add ( views , R . id . stopScreenShare ); add ( buttonsInConference , R . id . stopScreenShare ); add ( buttonsInOwnScreenShare , R . id . stopScreenShare ); } 3. Add the following logic to the application: Use the following implementation for onStopScreenShare : public void onStopScreenShare () { VoxeetSDK . screenShare (). stopScreenShare () . then (( result , solver ) -> { // screenshare has been stopped locally and remotely updateViews (); }). error ( error -> { // screenshare has been stopped locally but a network error occurred }); } After the screenshare is stopped, UserStreamUpdated is triggered.","title":"Layout modification"},{"location":"android-getting-started/integrate-video-for-android/","text":"This tutorial guides how to add video features to a conference. Start the video \u00b6 Layout modification \u00b6 Edit the main_activity.xml with the following items: <LinearLayout ... > ... <!-- Step 3. Put the layout changes for the video step here --> <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:orientation= \"horizontal\" > <Button android:id= \"@+id/startVideo\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"start video\" /> <!-- Step 3.2. This layout will be upgraded in the stop video step --> </LinearLayout> <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"300dp\" > <LinearLayout android:layout_width= \"0dp\" android:layout_height= \"match_parent\" android:layout_weight= \"1\" > <com.voxeet.sdk.views.VideoView android:id= \"@+id/video\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" /> </LinearLayout> <LinearLayout android:layout_width= \"0dp\" android:layout_height= \"match_parent\" android:layout_weight= \"1\" > <com.voxeet.sdk.views.VideoView android:id= \"@+id/videoOther\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" /> </LinearLayout> </LinearLayout> <!-- Step 4. ... </LinearLayout> 2. Modify the interface linking in the MainActivity class in MainActivity.java : New methods for MainActivity : public void onStartVideo () { } private void updateStreams () { } // add onClickListener for onStartVideo() @Override protected void onCreate ( Bundle savedInstanceState ) { ... binding . startVideo . setOnClickListener ( new View . OnClickListener () { @Override public void onClick ( View view ) { onStartVideo (); } }); Add the following code to the onCreate method: @Override protected void onCreate ( Bundle savedInstanceState ) { ... //adding the startVideo in the flow add ( views , R . id . startVideo ); add ( buttonsInConference , R . id . startVideo ); add ( buttonsNotInOwnVideo , R . id . startVideo ); } 3. Add the following logic to the application: In updateViews enable and disable buttons based on the own video state. private void updateViews () { ... if ( null != current ) { if ( current . isOwnVideoStarted ()) { setEnabled ( buttonsInOwnVideo , true ); setEnabled ( buttonsNotInOwnVideo , false ); } else { setEnabled ( buttonsInOwnVideo , false ); setEnabled ( buttonsNotInOwnVideo , true ); } } } Use the following implementation for onStartVideo : public void onStartVideo () { VoxeetSDK . conference (). startVideo () . then (( result , solver ) -> updateViews ()) . error ( error ()); } Use the following implementation for updateStreams : private void updateStreams () { for ( Participant user : VoxeetSDK . conference (). getParticipants ()) { boolean isLocal = user . getId (). equals ( VoxeetSDK . session (). getParticipantId ()); MediaStream stream = user . streamsHandler (). getFirst ( MediaStreamType . Camera ); VideoView video = isLocal ? this . binding . video : this . binding . videoOther ; if ( null != stream && ! stream . videoTracks (). isEmpty ()) { video . setVisibility ( View . VISIBLE ); video . attach ( user . getId (), stream ); } } } Add handlers for StreamAddedEvent and StreamUpdatedEvent . @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( StreamAddedEvent event ) { updateStreams (); updateViews (); } @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( StreamUpdatedEvent event ) { updateStreams (); updateViews (); } Stop the video \u00b6 1. To modify the layout, edit the main_activity.xml file, adding the following content for Step 3.2: <LinearLayout ... > ... <LinearLayout ... > ... <!-- Step 3.2. This layout will be upgraded in the stop video step --> <Button android:id= \"@+id/stopVideo\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"stop video\" /> </LinearLayout> ... </LinearLayout> 2. Modify the interface linking in the MainActivity class in MainActivity.java : New method for MainActivity : public void onStopVideo () { } // add onClickListener for onStopVideo() @Override protected void onCreate ( Bundle savedInstanceState ) { ... binding . stopVideo . setOnClickListener ( new View . OnClickListener () { @Override public void onClick ( View view ) { onStopVideo (); } }); } - Add the following code to the onCreate method: @Override protected void onCreate ( Bundle savedInstanceState ) { ... //adding the stopVideo in the flow add ( views , R . id . stopVideo ); add ( buttonsInConference , R . id . stopVideo ); add ( buttonsInOwnVideo , R . id . stopVideo ); } 3. Add the following logic to the application: Use the following implementation for onLogin : public void onStopVideo () { VoxeetSDK . conference (). stopVideo () . then (( result , solver ) -> updateViews ()) . error ( error ()); } Add a handler for the StreamRemovedEvent : @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( StreamRemovedEvent event ) { updateStreams (); updateViews (); }","title":"Integrate Video for Android"},{"location":"android-getting-started/integrate-video-for-android/#start-the-video","text":"","title":"Start the video"},{"location":"android-getting-started/integrate-video-for-android/#layout-modification","text":"Edit the main_activity.xml with the following items: <LinearLayout ... > ... <!-- Step 3. Put the layout changes for the video step here --> <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:orientation= \"horizontal\" > <Button android:id= \"@+id/startVideo\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"start video\" /> <!-- Step 3.2. This layout will be upgraded in the stop video step --> </LinearLayout> <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"300dp\" > <LinearLayout android:layout_width= \"0dp\" android:layout_height= \"match_parent\" android:layout_weight= \"1\" > <com.voxeet.sdk.views.VideoView android:id= \"@+id/video\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" /> </LinearLayout> <LinearLayout android:layout_width= \"0dp\" android:layout_height= \"match_parent\" android:layout_weight= \"1\" > <com.voxeet.sdk.views.VideoView android:id= \"@+id/videoOther\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" /> </LinearLayout> </LinearLayout> <!-- Step 4. ... </LinearLayout> 2. Modify the interface linking in the MainActivity class in MainActivity.java : New methods for MainActivity : public void onStartVideo () { } private void updateStreams () { } // add onClickListener for onStartVideo() @Override protected void onCreate ( Bundle savedInstanceState ) { ... binding . startVideo . setOnClickListener ( new View . OnClickListener () { @Override public void onClick ( View view ) { onStartVideo (); } }); Add the following code to the onCreate method: @Override protected void onCreate ( Bundle savedInstanceState ) { ... //adding the startVideo in the flow add ( views , R . id . startVideo ); add ( buttonsInConference , R . id . startVideo ); add ( buttonsNotInOwnVideo , R . id . startVideo ); } 3. Add the following logic to the application: In updateViews enable and disable buttons based on the own video state. private void updateViews () { ... if ( null != current ) { if ( current . isOwnVideoStarted ()) { setEnabled ( buttonsInOwnVideo , true ); setEnabled ( buttonsNotInOwnVideo , false ); } else { setEnabled ( buttonsInOwnVideo , false ); setEnabled ( buttonsNotInOwnVideo , true ); } } } Use the following implementation for onStartVideo : public void onStartVideo () { VoxeetSDK . conference (). startVideo () . then (( result , solver ) -> updateViews ()) . error ( error ()); } Use the following implementation for updateStreams : private void updateStreams () { for ( Participant user : VoxeetSDK . conference (). getParticipants ()) { boolean isLocal = user . getId (). equals ( VoxeetSDK . session (). getParticipantId ()); MediaStream stream = user . streamsHandler (). getFirst ( MediaStreamType . Camera ); VideoView video = isLocal ? this . binding . video : this . binding . videoOther ; if ( null != stream && ! stream . videoTracks (). isEmpty ()) { video . setVisibility ( View . VISIBLE ); video . attach ( user . getId (), stream ); } } } Add handlers for StreamAddedEvent and StreamUpdatedEvent . @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( StreamAddedEvent event ) { updateStreams (); updateViews (); } @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( StreamUpdatedEvent event ) { updateStreams (); updateViews (); }","title":"Layout modification"},{"location":"android-getting-started/integrate-video-for-android/#stop-the-video","text":"1. To modify the layout, edit the main_activity.xml file, adding the following content for Step 3.2: <LinearLayout ... > ... <LinearLayout ... > ... <!-- Step 3.2. This layout will be upgraded in the stop video step --> <Button android:id= \"@+id/stopVideo\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"stop video\" /> </LinearLayout> ... </LinearLayout> 2. Modify the interface linking in the MainActivity class in MainActivity.java : New method for MainActivity : public void onStopVideo () { } // add onClickListener for onStopVideo() @Override protected void onCreate ( Bundle savedInstanceState ) { ... binding . stopVideo . setOnClickListener ( new View . OnClickListener () { @Override public void onClick ( View view ) { onStopVideo (); } }); } - Add the following code to the onCreate method: @Override protected void onCreate ( Bundle savedInstanceState ) { ... //adding the stopVideo in the flow add ( views , R . id . stopVideo ); add ( buttonsInConference , R . id . stopVideo ); add ( buttonsInOwnVideo , R . id . stopVideo ); } 3. Add the following logic to the application: Use the following implementation for onLogin : public void onStopVideo () { VoxeetSDK . conference (). stopVideo () . then (( result , solver ) -> updateViews ()) . error ( error ()); } Add a handler for the StreamRemovedEvent : @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( StreamRemovedEvent event ) { updateStreams (); updateViews (); }","title":"Stop the video"},{"location":"android-getting-started/manage-participants-for-android/","text":"You have a basic video conference application with which you can video call your friends using a conference room. However, you do not control the conference nor have any information about the conference participants. This tutorial will take you through some simple steps to follow to have a full participants\u2019 list. Step 1: Create the participants\u2019 list \u00b6 Note: The participants\u2019 list is only visible when the user has joined the conference. Layout modification \u00b6 1. To modify the layout, edit the main_activity.xml file, adding the following content for Step 4: <LinearLayout ... > ... <!-- Step 4. Put the layout changes for the view participants step here --> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"users :\" /> <EditText android:id= \"@+id/participants\" android:enabled= \"false\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" /> <!-- Step 5. ... </LinearLayout> 2. Modify the interface linking in the MainActivity class in MainActivity.java : New method updateParticipants for MainActivity with the following implementation: public void updateParticipants () { List < Participant > participantsList = VoxeetSDK . conference (). getParticipants (); List < String > names = new ArrayList <> (); for ( Participant participant : participantsList ) { if ( participant . streams (). size () > 0 ) { names . add ( participant . getInfo (). getName ()); } } binding . participants . setText ( TextUtils . join ( \", \" , names )); } Step 2: Add a participant to the list \u00b6 Note: The participants\u2019 list is updated upon receiving the participantJoined and participantLeft events, the same way the participants\u2019 streams were added in the previous tutorial. 1. Add the following logic to the application: Add a handler for the ParticipantAddedEvent . @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( ParticipantAddedEvent event ) { updateParticipants (); } Step 3: Remove a participant from the list \u00b6 1. Add the following logic to the application: Add a handler for the ParticipantUpdatedEvent . @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( ParticipantUpdatedEvent event ) { updateParticipants (); }","title":"Manage Participants for Android"},{"location":"android-getting-started/manage-participants-for-android/#step-1-create-the-participants-list","text":"Note: The participants\u2019 list is only visible when the user has joined the conference.","title":"Step 1: Create the participants\u2019 list"},{"location":"android-getting-started/manage-participants-for-android/#layout-modification","text":"1. To modify the layout, edit the main_activity.xml file, adding the following content for Step 4: <LinearLayout ... > ... <!-- Step 4. Put the layout changes for the view participants step here --> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"users :\" /> <EditText android:id= \"@+id/participants\" android:enabled= \"false\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" /> <!-- Step 5. ... </LinearLayout> 2. Modify the interface linking in the MainActivity class in MainActivity.java : New method updateParticipants for MainActivity with the following implementation: public void updateParticipants () { List < Participant > participantsList = VoxeetSDK . conference (). getParticipants (); List < String > names = new ArrayList <> (); for ( Participant participant : participantsList ) { if ( participant . streams (). size () > 0 ) { names . add ( participant . getInfo (). getName ()); } } binding . participants . setText ( TextUtils . join ( \", \" , names )); }","title":"Layout modification"},{"location":"android-getting-started/manage-participants-for-android/#step-2-add-a-participant-to-the-list","text":"Note: The participants\u2019 list is updated upon receiving the participantJoined and participantLeft events, the same way the participants\u2019 streams were added in the previous tutorial. 1. Add the following logic to the application: Add a handler for the ParticipantAddedEvent . @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( ParticipantAddedEvent event ) { updateParticipants (); }","title":"Step 2: Add a participant to the list"},{"location":"android-getting-started/manage-participants-for-android/#step-3-remove-a-participant-from-the-list","text":"1. Add the following logic to the application: Add a handler for the ParticipantUpdatedEvent . @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( ParticipantUpdatedEvent event ) { updateParticipants (); }","title":"Step 3: Remove a participant from the list"},{"location":"android-getting-started/record-the-conference-for-android/","text":"This tutorial guides how to add a recording feature to your conference application. We will use the RecordingService . Start recording \u00b6 1. To modify the layout, edit the main_activity.xml file, adding the following content for Step 6: <LinearLayout ... > ... <!-- Step 6. Put the layout changes for the recording step here --> <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:orientation= \"horizontal\" > <Button android:id= \"@+id/start_recording\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"start recording\" /> <!-- Step 6.2 This layout will be upgraded in the stop recording step --> </LinearLayout> </LinearLayout> 2. Modify the interface linking in the MainActivity class in MainActivity.java : New method for MainActivity : public void onStartRecording () { } // add onClickListener for onStartRecording() @Override protected void onCreate ( Bundle savedInstanceState ) { ... binding . startRecording . setOnClickListener ( new View . OnClickListener () { @Override public void onClick ( View view ) { onStartRecording (); } }); } Add the following code to the onCreate method: @Override protected void onCreate ( Bundle savedInstanceState ) { ... //adding the start recording in the flow add ( views , R . id . start_recording ); add ( buttonsInConference , R . id . start_recording ); } 3. Add the following logic to the application: Use the following implementation for onStartRecording : public void onStartRecording () { VoxeetSDK . recording (). start () . then (( result , solver ) -> { }) . error (( error_in ) -> { String error_message = \"Error\" ; if ((( ServerErrorException ) error_in ). error . error_code == 303 ) { error_message = \"Recording already started\" ; } updateViews (); Toast . makeText ( MainActivity . this , error_message , Toast . LENGTH_SHORT ). show (); }); } Add a handler for RecordingStatusUpdatedEvent : @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( RecordingStatusUpdatedEvent event ) { String message = null ; switch ( event . recordingStatus ) { case \"RECORDING\" : message = \"Recording started\" ; break ; case \"NOT_RECORDING\" : message = \"Recording stopped\" ; break ; default : break ; } if ( null != message ) Toast . makeText ( MainActivity . this , message , Toast . LENGTH_SHORT ). show (); } Stop recording \u00b6 1. To modify the layout, edit the main_activity.xml file, adding the following content for Step 6.2: <LinearLayout ... > ... <LinearLayout ... > ... <!-- Step 6.2 This layout will be upgraded in the stop recording step --> <Button android:id= \"@+id/stop_recording\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"stop recording\" /> </LinearLayout> </LinearLayout> 2. Modify the interface linking in the MainActivity class in MainActivity.java : New method for MainActivity : public void onStopRecording () { } // add onClickListener for onStopRecording() @Override protected void onCreate ( Bundle savedInstanceState ) { ... binding . stopRecording . setOnClickListener ( new View . OnClickListener () { @Override public void onClick ( View view ) { onStopRecording (); } }); } Add the following code to the onCreate method: @Override protected void onCreate ( Bundle savedInstanceState ) { ... //adding the stop recording in the flow add ( views , R . id . stop_recording ); add ( buttonsInConference , R . id . stop_recording ); } 3. Add the following logic to the application: Use the following implementation for onStopRecording : public void onStopRecording () { VoxeetSDK . recording (). stop () . then (( result , solver ) -> { }) . error ( error ()); }","title":"Record the Conference for Android"},{"location":"android-getting-started/record-the-conference-for-android/#start-recording","text":"1. To modify the layout, edit the main_activity.xml file, adding the following content for Step 6: <LinearLayout ... > ... <!-- Step 6. Put the layout changes for the recording step here --> <LinearLayout android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:orientation= \"horizontal\" > <Button android:id= \"@+id/start_recording\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"start recording\" /> <!-- Step 6.2 This layout will be upgraded in the stop recording step --> </LinearLayout> </LinearLayout> 2. Modify the interface linking in the MainActivity class in MainActivity.java : New method for MainActivity : public void onStartRecording () { } // add onClickListener for onStartRecording() @Override protected void onCreate ( Bundle savedInstanceState ) { ... binding . startRecording . setOnClickListener ( new View . OnClickListener () { @Override public void onClick ( View view ) { onStartRecording (); } }); } Add the following code to the onCreate method: @Override protected void onCreate ( Bundle savedInstanceState ) { ... //adding the start recording in the flow add ( views , R . id . start_recording ); add ( buttonsInConference , R . id . start_recording ); } 3. Add the following logic to the application: Use the following implementation for onStartRecording : public void onStartRecording () { VoxeetSDK . recording (). start () . then (( result , solver ) -> { }) . error (( error_in ) -> { String error_message = \"Error\" ; if ((( ServerErrorException ) error_in ). error . error_code == 303 ) { error_message = \"Recording already started\" ; } updateViews (); Toast . makeText ( MainActivity . this , error_message , Toast . LENGTH_SHORT ). show (); }); } Add a handler for RecordingStatusUpdatedEvent : @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( RecordingStatusUpdatedEvent event ) { String message = null ; switch ( event . recordingStatus ) { case \"RECORDING\" : message = \"Recording started\" ; break ; case \"NOT_RECORDING\" : message = \"Recording stopped\" ; break ; default : break ; } if ( null != message ) Toast . makeText ( MainActivity . this , message , Toast . LENGTH_SHORT ). show (); }","title":"Start recording"},{"location":"android-getting-started/record-the-conference-for-android/#stop-recording","text":"1. To modify the layout, edit the main_activity.xml file, adding the following content for Step 6.2: <LinearLayout ... > ... <LinearLayout ... > ... <!-- Step 6.2 This layout will be upgraded in the stop recording step --> <Button android:id= \"@+id/stop_recording\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"stop recording\" /> </LinearLayout> </LinearLayout> 2. Modify the interface linking in the MainActivity class in MainActivity.java : New method for MainActivity : public void onStopRecording () { } // add onClickListener for onStopRecording() @Override protected void onCreate ( Bundle savedInstanceState ) { ... binding . stopRecording . setOnClickListener ( new View . OnClickListener () { @Override public void onClick ( View view ) { onStopRecording (); } }); } Add the following code to the onCreate method: @Override protected void onCreate ( Bundle savedInstanceState ) { ... //adding the stop recording in the flow add ( views , R . id . stop_recording ); add ( buttonsInConference , R . id . stop_recording ); } 3. Add the following logic to the application: Use the following implementation for onStopRecording : public void onStopRecording () { VoxeetSDK . recording (). stop () . then (( result , solver ) -> { }) . error ( error ()); }","title":"Stop recording"},{"location":"android-overview/conferencing-android/","text":"This document describes how to join conferences that are not protected by the conference access token. Joining protected conferences requires receiving the participant-specific conference access token via the conference invitation. For more information about protected conferences, see the Enhanced Conference Access Control document. For more information about using invitations, see the Inviting Participants document. The Dolby.io Communications APIs platform requires obtaining the conference object before joining a conference. To obtain the conference object, your application can either use the create method with the conference alias or the fetch method with the conference ID. The alias is a name that you define during the conference creation. The alias needs to be a logical and unique string that consists of up to 250 characters, such as letters, digits, and symbols other than # . The conference ID is established by the server and is available only through the conference object. Note: When you create a conference, be aware that the conference time limit is set to three hours by default. You can change this setting in your dashboard. Joining conferences using the conference alias \u00b6 The simplest way to join a conference is to call the create and join methods. The create method creates a conference on a Dolby.io Communications APIs server and returns the conference object containing the conference ID. If a conference with a specific alias already exists on the server, the create method does not create a new conference; the method returns the conference object. Use the isNew parameter to see whether you have just created a new conference (true) or someone else has created it before you (false). Call the create method using the conference alias. ConferenceCreateOptions conferenceCreateOptions = new ConferenceCreateOptions . Builder () . setConferenceAlias ( \"conference-alias\" ) . build (); VoxeetSDK . conference () . create ( conferenceCreateOptions ) . then ( conference -> { // The conference was created }) . error ( error -> { // Manage the error here }); Call the join method to the returned conference object to join the conference. VoxeetSDK . conference () . join ( conference ) . then ( joinedConference -> { // The conference was joined }) . error ( error -> { // Manage the error here }); Joining conferences using the conference ID \u00b6 The previous procedure required all conference participants to call the create method. The Dolby.io Communications APIs platform also offers a procedure where only the conference creator uses the create method to receive the conference object. In this procedure, the conference creator sends the received conference ID to the rest of the conference participants. The participants who receive the conference ID call the fetch method to obtain the conference object, and then call the join method to successfully join the conference. The conference creator sends the conference ID to the application users who should join the conference. The application users who received the conference ID call the fetchConference method to obtain the conference object. String conferenceId = \"conferenceId\" ; VoxeetSDK . conference () . fetchConference ( conferenceId ) . then ( conference -> { Log . d ( \"SAMPLE\" , \"conferenceId = \" + conference . getId () + \" / conferenceAlias = \" + conference . getAlias ()); }) . error ( error -> { // Manage the error here }); All application users call the join method to the returned conference object to join the conference. VoxeetSDK . conference () . join ( conference ) . then ( joinedConference -> { // The conference was joined }) . error ( error -> { // Manage the error here });","title":"Conferencing"},{"location":"android-overview/conferencing-android/#joining-conferences-using-the-conference-alias","text":"The simplest way to join a conference is to call the create and join methods. The create method creates a conference on a Dolby.io Communications APIs server and returns the conference object containing the conference ID. If a conference with a specific alias already exists on the server, the create method does not create a new conference; the method returns the conference object. Use the isNew parameter to see whether you have just created a new conference (true) or someone else has created it before you (false). Call the create method using the conference alias. ConferenceCreateOptions conferenceCreateOptions = new ConferenceCreateOptions . Builder () . setConferenceAlias ( \"conference-alias\" ) . build (); VoxeetSDK . conference () . create ( conferenceCreateOptions ) . then ( conference -> { // The conference was created }) . error ( error -> { // Manage the error here }); Call the join method to the returned conference object to join the conference. VoxeetSDK . conference () . join ( conference ) . then ( joinedConference -> { // The conference was joined }) . error ( error -> { // Manage the error here });","title":"Joining conferences using the conference alias"},{"location":"android-overview/conferencing-android/#joining-conferences-using-the-conference-id","text":"The previous procedure required all conference participants to call the create method. The Dolby.io Communications APIs platform also offers a procedure where only the conference creator uses the create method to receive the conference object. In this procedure, the conference creator sends the received conference ID to the rest of the conference participants. The participants who receive the conference ID call the fetch method to obtain the conference object, and then call the join method to successfully join the conference. The conference creator sends the conference ID to the application users who should join the conference. The application users who received the conference ID call the fetchConference method to obtain the conference object. String conferenceId = \"conferenceId\" ; VoxeetSDK . conference () . fetchConference ( conferenceId ) . then ( conference -> { Log . d ( \"SAMPLE\" , \"conferenceId = \" + conference . getId () + \" / conferenceAlias = \" + conference . getAlias ()); }) . error ( error -> { // Manage the error here }); All application users call the join method to the returned conference object to join the conference. VoxeetSDK . conference () . join ( conference ) . then ( joinedConference -> { // The conference was joined }) . error ( error -> { // Manage the error here });","title":"Joining conferences using the conference ID"},{"location":"android-overview/initializing-android/","text":"This document explains how to integrate the Dolby.io Communications SDK for Android into your application. If you use UI components, please refer to the UXKit . Add the Android SDK into your application \u00b6 Add the following repository to your project gradle file build.gradle : maven { url \"https://android-sdk.voxeet.com/release\" content { includeGroup \"com.voxeet.sdk\" } } Note: if you are looking for a beta release of the SDK, please use the following repository: maven { url \"https://android-sdk.voxeet.com/beta\" content { includeGroup \"com.voxeet.sdk\" } } Add the Dolby.io Communications SDK for Android in the dependencies section of your application Gradle file app/build.gradle : implementation \"com.voxeet.sdk:sdk:${version}\" Where version is the latest version of the SDK. Initialize the SDK \u00b6 The Android Client SDK provides the initialize method to authenticate against the service using an access token. For more information, see the section titled Initialize the SDK with secure authentication . When the application has received the access token from the customer\u2019s server, it can initialize the SDK with: String url = serverURL + \"/api/token\" ; JsonObjectRequest fetchRequest = new JsonObjectRequest ( Request . Method . GET , url null , new Response . Listener < JSONObject > () { @Override public void onResponse ( JSONObject response ) { VoxeetSDK . initialize ( token , ( refreshClosure ) -> { // The SDK calls this closure when the token needs to be refreshed. // See the next section for details. }) } }, new Response . ErrorListener () { @Override public void onErrorResponse ( VolleyError error ) { // TODO: Handle error } } ); // Access the RequestQueue through your singleton class. MySingleton . getInstance ( this ). addToRequestQueue ( fetchRequest ); Refresh authentication \u00b6 An access token has a limited period of validity and needs periodic refreshing. In the application, the Dolby.io Communications Client SDK invokes the callback provided to the initialize call when the access token needs to be refreshed. This callback contacts the customer\u2019s server, which in turn calls the oauth2/token API again and returns the refreshed token, which is passed back to the Client SDK by the application. When the application has received the refreshed access token from the customer\u2019s server, it can pass this to the SDK with this change: JsonObjectRequest fetchRequest = new JsonObjectRequest ( Request . Method . GET , url , null , new Response . Listener < JSONObject > () { @Override public void onResponse ( JSONObject response ) { VoxeetSDK . initialize ( token , ( refreshClosure ) -> { // The SDK calls this closure when the token needs to be refreshed. // Call the SDK\u2019s refresh closure with the new token refreshClosure ( token ); }); } }, new Response . ErrorListener () { @Override public void onErrorResponse ( VolleyError error ) { // TODO: Handle error } } ); Open a session \u00b6 ParticipantInfo participantInfo = new UserInfo ( \"name\" , \"optional id\" , \"optional https avatar url\" ); VoxeetSDK . session (). open ( participantInfo ) . then ( new PromiseExec < Boolean , Object > () { @Override public void onCall ( @Nullable Boolean result , @NonNull Solver < Object > solver ) { // insert your logic } }) . error ( error ()); Close a session \u00b6 VoxeetSDK . session (). close () . then ( new PromiseExec < Boolean , Object > () { @Override public void onCall ( @Nullable Boolean result , @NonNull Solver < Object > solver ) { // insert your logic } }) . error ( error ()); Result \u00b6 The Dolby.io Communications SDK for Android is integrated with your application, so you have access to all SDK functionalities. Now you can easily configure your SDK. Tutorials available in the left-side navigation panel and reference documentation guides how to do it.","title":"Initializing the SDK"},{"location":"android-overview/initializing-android/#add-the-android-sdk-into-your-application","text":"Add the following repository to your project gradle file build.gradle : maven { url \"https://android-sdk.voxeet.com/release\" content { includeGroup \"com.voxeet.sdk\" } } Note: if you are looking for a beta release of the SDK, please use the following repository: maven { url \"https://android-sdk.voxeet.com/beta\" content { includeGroup \"com.voxeet.sdk\" } } Add the Dolby.io Communications SDK for Android in the dependencies section of your application Gradle file app/build.gradle : implementation \"com.voxeet.sdk:sdk:${version}\" Where version is the latest version of the SDK.","title":"Add the Android SDK into your application"},{"location":"android-overview/initializing-android/#initialize-the-sdk","text":"The Android Client SDK provides the initialize method to authenticate against the service using an access token. For more information, see the section titled Initialize the SDK with secure authentication . When the application has received the access token from the customer\u2019s server, it can initialize the SDK with: String url = serverURL + \"/api/token\" ; JsonObjectRequest fetchRequest = new JsonObjectRequest ( Request . Method . GET , url null , new Response . Listener < JSONObject > () { @Override public void onResponse ( JSONObject response ) { VoxeetSDK . initialize ( token , ( refreshClosure ) -> { // The SDK calls this closure when the token needs to be refreshed. // See the next section for details. }) } }, new Response . ErrorListener () { @Override public void onErrorResponse ( VolleyError error ) { // TODO: Handle error } } ); // Access the RequestQueue through your singleton class. MySingleton . getInstance ( this ). addToRequestQueue ( fetchRequest );","title":"Initialize the SDK"},{"location":"android-overview/initializing-android/#refresh-authentication","text":"An access token has a limited period of validity and needs periodic refreshing. In the application, the Dolby.io Communications Client SDK invokes the callback provided to the initialize call when the access token needs to be refreshed. This callback contacts the customer\u2019s server, which in turn calls the oauth2/token API again and returns the refreshed token, which is passed back to the Client SDK by the application. When the application has received the refreshed access token from the customer\u2019s server, it can pass this to the SDK with this change: JsonObjectRequest fetchRequest = new JsonObjectRequest ( Request . Method . GET , url , null , new Response . Listener < JSONObject > () { @Override public void onResponse ( JSONObject response ) { VoxeetSDK . initialize ( token , ( refreshClosure ) -> { // The SDK calls this closure when the token needs to be refreshed. // Call the SDK\u2019s refresh closure with the new token refreshClosure ( token ); }); } }, new Response . ErrorListener () { @Override public void onErrorResponse ( VolleyError error ) { // TODO: Handle error } } );","title":"Refresh authentication"},{"location":"android-overview/initializing-android/#open-a-session","text":"ParticipantInfo participantInfo = new UserInfo ( \"name\" , \"optional id\" , \"optional https avatar url\" ); VoxeetSDK . session (). open ( participantInfo ) . then ( new PromiseExec < Boolean , Object > () { @Override public void onCall ( @Nullable Boolean result , @NonNull Solver < Object > solver ) { // insert your logic } }) . error ( error ());","title":"Open a session"},{"location":"android-overview/initializing-android/#close-a-session","text":"VoxeetSDK . session (). close () . then ( new PromiseExec < Boolean , Object > () { @Override public void onCall ( @Nullable Boolean result , @NonNull Solver < Object > solver ) { // insert your logic } }) . error ( error ());","title":"Close a session"},{"location":"android-overview/initializing-android/#result","text":"The Dolby.io Communications SDK for Android is integrated with your application, so you have access to all SDK functionalities. Now you can easily configure your SDK. Tutorials available in the left-side navigation panel and reference documentation guides how to do it.","title":"Result"},{"location":"android-overview/inviting-participants-android/","text":"Dolby.io Communications APIs allow using SDK or REST APIs to invite participants to a conference. Both options are available for protected and unprotected conferences. For more information about protected conferences, see the Enhanced Conference Access Control document. The SDK invite process requires invitees to open sessions before they can be invited to a conference. REST APIs offer a simpler process, where the invite request returns all participant's access tokens. Then, a client's application can pass the participants' tokens to invitees. This way, the invitees can receive conference invitations even when they do not have an open session. Inviting participants using SDK \u00b6 All application users can join a conference using the create or fetchConference methods to obtain the conference object. Inviting conference participants using invitation requires: Using the invitees' external IDs in the application Sending invitations only while being in a conference Opening a session to be able to receive a conference invitation The following instruction informs how to invite participants to protected and unprotected conferences using SDK. In the case of the protected conferences, an application user who creates a conference receives the conference access token. The token is managed by the SDK and is not visible to the application users. The only difference in the invitation process for protected conferences is the possibility of providing participants' permissions in the invitation. The permissions allow conference participants to perform a specific set of actions within the protected conference. The conference creator receives a token with all conference permissions, invitees receive an invitation with the token and their own permissions. Warning The Dolby.io Communications APIs platform does not provide a notification system that informs when an application user opens a session. Manage the notification through your application. If a user does not have an open session, when the inviter sends the invitation, the user will not receive the invitation. The inviter has to resend the invitation. 1. The inviter creates and joins a conference. 2. The application users, who want to participate at the conference, open sessions and add event listeners for the InvitationReceivedNotificationEvent event. The invitation contains the following properties: The conference alias The conference ID The information about the participant who sends the invitation For more information about using notifications, see the Using Notifications document. @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( @NonNull InvitationReceivedNotificationEvent event ) { Log . d ( TAG , \"InvitationReceivedNotificationEvent: conference: \" + event . conferenceId + \" \" + event . conferenceAlias ); VoxeetSDK . conference (). fetchConference ( event . conferenceId ) . then (( ThenPromise < Conference , Conference > ) conference -> { ConferenceJoinOptions conferenceJoinOptions = new ConferenceJoinOptions . Builder ( conference ) . build (); return VoxeetSDK . conference (). join ( conferenceJoinOptions ); }) . then ( conference -> { Log . d ( TAG , \"InvitationReceivedNotificationEvent: joined \" + conference . getId ()); }) . error ( error -> Log . e ( TAG , \"InvitationReceivedNotificationEvent, error while joining\" , error )); } The code example includes methods that allow the application users to join the conference after receiving the invitation. For more information about joining conferences, see the Conferencing article. 3. The inviter invites the application users using the invite or inviteWithPermissions method. The inviteWithPermissions method includes participants' permissions. ParticipantInfo participantInfo = new ParticipantInfo ( inviteeName , inviteeExternalId , inviteeAvatarUrl ) ParticipantInvited participant = new ParticipantInvited ( participantInfo ); participant . setPermissions ( permissions ); List < ParticipantInvited > participants = new ArrayList <> (); participants . add ( participant ); VoxeetSDK . notification (). inviteWithPermissions ( conference , participants ) . then ( result -> { // handle result here }) . error ( err -> { // handle error here }); Protected conferences require assigning proper conference permissions to all invited participants. However, the inviter can also invite participants to the protected conference without specifying the participants' permissions. If permissions are not specified, the platform assigns the default permissions, which include Join , SendAudio , SendVideo , ShareScreen , ShareVideo , ShareFile , SendMessage , Record , and Stream . The inviter can send invitations to multiple participants using a single invite request. When the inviter sends invitations, the server adds the invited participants to the conference with the Reserved status. All conference participants receive the participantAddedEvent event. 4. When the conference participants receive invitations, the application calls the requested callback and the participants automatically join the conference. The server sends the participantUpdatedEvent event with the CONNECTING status. 5. After the successful connection, the server sends the participantUpdatedEvent event with the ON_AIR status. Inviting participants using REST APIs \u00b6 Dolby.io Communications APIs offer the Create and Invite REST API to enable inviting participants using the application server. The Create REST API \u00b6 The Create REST API creates protected conferences and enables inviting participants to the created conference. In the API request, the inviter can provide the participants' list and participants' permissions. The request also offers an option to notify participants about the invitation by setting the notification parameter to true. Participants can receive the notification only when they have an open session. In the API response, the inviter receives ownerToken with all conference permissions and **usersToken**s. A client's application can pass the participants' tokens to invitees and include the token in the conferenceAccessToken property in ConferenceJoinOptions or ConferenceListenOptions . This way, the invitees can receive conference invitations even when they do not have an open session. The notification depends on the client's implementation. The Invite REST API \u00b6 The Invite REST API allows inviting participants to a created conference. The API request includes the participants' list, participants' permissions, and an option to notify participants about the conference invitation. The notification is available only for participants who have an open session. The API response includes conference access tokens for participants. A client's application can pass the participants' tokens to invitees and include the token in the conferenceAccessToken property in ConferenceJoinOptions or ConferenceListenOptions .","title":"Inviting Participants"},{"location":"android-overview/inviting-participants-android/#inviting-participants-using-sdk","text":"All application users can join a conference using the create or fetchConference methods to obtain the conference object. Inviting conference participants using invitation requires: Using the invitees' external IDs in the application Sending invitations only while being in a conference Opening a session to be able to receive a conference invitation The following instruction informs how to invite participants to protected and unprotected conferences using SDK. In the case of the protected conferences, an application user who creates a conference receives the conference access token. The token is managed by the SDK and is not visible to the application users. The only difference in the invitation process for protected conferences is the possibility of providing participants' permissions in the invitation. The permissions allow conference participants to perform a specific set of actions within the protected conference. The conference creator receives a token with all conference permissions, invitees receive an invitation with the token and their own permissions. Warning The Dolby.io Communications APIs platform does not provide a notification system that informs when an application user opens a session. Manage the notification through your application. If a user does not have an open session, when the inviter sends the invitation, the user will not receive the invitation. The inviter has to resend the invitation. 1. The inviter creates and joins a conference. 2. The application users, who want to participate at the conference, open sessions and add event listeners for the InvitationReceivedNotificationEvent event. The invitation contains the following properties: The conference alias The conference ID The information about the participant who sends the invitation For more information about using notifications, see the Using Notifications document. @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( @NonNull InvitationReceivedNotificationEvent event ) { Log . d ( TAG , \"InvitationReceivedNotificationEvent: conference: \" + event . conferenceId + \" \" + event . conferenceAlias ); VoxeetSDK . conference (). fetchConference ( event . conferenceId ) . then (( ThenPromise < Conference , Conference > ) conference -> { ConferenceJoinOptions conferenceJoinOptions = new ConferenceJoinOptions . Builder ( conference ) . build (); return VoxeetSDK . conference (). join ( conferenceJoinOptions ); }) . then ( conference -> { Log . d ( TAG , \"InvitationReceivedNotificationEvent: joined \" + conference . getId ()); }) . error ( error -> Log . e ( TAG , \"InvitationReceivedNotificationEvent, error while joining\" , error )); } The code example includes methods that allow the application users to join the conference after receiving the invitation. For more information about joining conferences, see the Conferencing article. 3. The inviter invites the application users using the invite or inviteWithPermissions method. The inviteWithPermissions method includes participants' permissions. ParticipantInfo participantInfo = new ParticipantInfo ( inviteeName , inviteeExternalId , inviteeAvatarUrl ) ParticipantInvited participant = new ParticipantInvited ( participantInfo ); participant . setPermissions ( permissions ); List < ParticipantInvited > participants = new ArrayList <> (); participants . add ( participant ); VoxeetSDK . notification (). inviteWithPermissions ( conference , participants ) . then ( result -> { // handle result here }) . error ( err -> { // handle error here }); Protected conferences require assigning proper conference permissions to all invited participants. However, the inviter can also invite participants to the protected conference without specifying the participants' permissions. If permissions are not specified, the platform assigns the default permissions, which include Join , SendAudio , SendVideo , ShareScreen , ShareVideo , ShareFile , SendMessage , Record , and Stream . The inviter can send invitations to multiple participants using a single invite request. When the inviter sends invitations, the server adds the invited participants to the conference with the Reserved status. All conference participants receive the participantAddedEvent event. 4. When the conference participants receive invitations, the application calls the requested callback and the participants automatically join the conference. The server sends the participantUpdatedEvent event with the CONNECTING status. 5. After the successful connection, the server sends the participantUpdatedEvent event with the ON_AIR status.","title":"Inviting participants using SDK"},{"location":"android-overview/inviting-participants-android/#inviting-participants-using-rest-apis","text":"Dolby.io Communications APIs offer the Create and Invite REST API to enable inviting participants using the application server.","title":"Inviting participants using REST APIs"},{"location":"android-overview/inviting-participants-android/#the-create-rest-api","text":"The Create REST API creates protected conferences and enables inviting participants to the created conference. In the API request, the inviter can provide the participants' list and participants' permissions. The request also offers an option to notify participants about the invitation by setting the notification parameter to true. Participants can receive the notification only when they have an open session. In the API response, the inviter receives ownerToken with all conference permissions and **usersToken**s. A client's application can pass the participants' tokens to invitees and include the token in the conferenceAccessToken property in ConferenceJoinOptions or ConferenceListenOptions . This way, the invitees can receive conference invitations even when they do not have an open session. The notification depends on the client's implementation.","title":"The Create REST API"},{"location":"android-overview/inviting-participants-android/#the-invite-rest-api","text":"The Invite REST API allows inviting participants to a created conference. The API request includes the participants' list, participants' permissions, and an option to notify participants about the conference invitation. The notification is available only for participants who have an open session. The API response includes conference access tokens for participants. A client's application can pass the participants' tokens to invitees and include the token in the conferenceAccessToken property in ConferenceJoinOptions or ConferenceListenOptions .","title":"The Invite REST API"},{"location":"android-overview/presenting-android/","text":"Dolby.io Communications APIs offer three options that allow the conference participants to enhance collaboration during a conference by sharing media with the rest of the participants. The participants can share their screens , files , or videos . This guide informs how to use the mentioned presenting options. Share a screen \u00b6 The screen-share option allows a presenter to share the contents of the presenter's screen with other conference participants. The following procedure presents a workflow that explains how to use the screen-share option. The Android screen-share workflow requires obtaining the proper permission before sharing the screen. The following steps present the simplest workflow; if you wish to find more information about the screen-share capabilities on Android, see the ScreenShareService documentation. 1. The presenter calls the sendRequestStartScreenShare method to request the screen-share permission. VoxeetSDK . screenShare (). sendRequestStartScreenShare (); 2. The presenter receives the RequestScreenSharePermissionEvent event and calls the sendUserPermissionRequest method. @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( @NonNull RequestScreenSharePermissionEvent event ) { VoxeetSDK . screenShare (). sendUserPermissionRequest ( currentActivity ); //In the context of the current activity: currentActivity = this } 3. The system forwards the requested permissions to the ScreenShareService and verifies the received bundle using the consumeRightsToScreenShare . @Override protected void onActivityResult ( int requestCode , int resultCode , Intent data ) { boolean managed = false ; if ( null != VoxeetSDK . screenShare ()) { managed = VoxeetSDK . screenShare (). onActivityResult ( requestCode , resultCode , data ); } if ( ! managed ) { super . onActivityResult ( requestCode , resultCode , data ); } } @Override protected void onResume () { super . onResume (); if ( null != VoxeetSDK . screenShare ()) { VoxeetSDK . screenShare (). consumeRightsToScreenShare (); } } 4. The presenter calls the startScreenShare method to start sharing the screen. The method uses the intent parameter that the presenter obtains together with the permission to share the screen. Promise < Boolean > promise = VoxeetSDK . screenShare (). startScreenShare ( Intent intent ); 5. The rest of the conference participants receive the StreamAddedEvent event that includes the \"ScreenShare\" stream.type . The event informs that the screen-share stream was successfully added. @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( @NonNull StreamAddedEvent event ) { MediaStream mediaStream = event . mediaStream ; MediaStreamType type = mediaStream . type ; } 6. The presenter calls the stopScreenShare method to stop sharing the screen. Promise < Boolean > promise = VoxeetSDK . screenShare (). stopScreenShare (); 7. The rest of the conference participants receive the streamRemoved event that includes the \"ScreenShare\" stream.type . The event informs that the screen-share stream was successfully removed. @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( @NonNull StreamRemovedEvent event ) { MediaStream mediaStream = event . mediaStream ; MediaStreamType type = mediaStream . type ; } Share a file \u00b6 The following procedure describes the workflow that allows a presenter to share a file during a conference. The Dolby.io Communications APIs service converts the user-provided file into multiple pages, as images, accessible through the image method. 1. The presenter calls the convert method to upload and convert a file. Promise < FilePresentation > promise = VoxeetSDK . filePresentation (). convert ( File file ); 2. After the conversion, the FilePresentationConverted event is emitted. @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( @NonNull FilePresentationConverted event ) { } 3. The presenter calls the start method to start presenting the file. Promise < FilePresentation > promise = VoxeetSDK . filePresentation (). start ( @ NonNull FilePresentationConverted filePresentation ); 4. The presenter and the viewers receive the FilePresentationStarted event that informs that the file presentation starts. Upon receiving the FilePresentationStarted event, call the image method to get the converted file images URLs and display the proper page of the file by retrieving the individual images. @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( @NonNull FilePresentationStarted event ) { String imageUrl = VoxeetSDK . filePresentation (). image ( event . fileId , event . position ); } 5. The application is responsible for coordinating the page flip between the local and the presented files. The presenter calls the update method to inform the service to send the updated page number to the participants. Promise < FilePresentation > promise = VoxeetSDK . filePresentation (). update ( @ NonNull String fileId , int position ); 6. The presenter and viewers receive the FilePresentationUpdated event with the current page number. Receiving the FilePresentationUpdated event should trigger calling the image method to display the proper page of the file by retrieving the individual images. @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( @NonNull FilePresentationUpdated event ) { String imageUrl = VoxeetSDK . filePresentation (). image ( event . fileId , event . position ); } 7. The presenter calls the stop method to end the file presentation. Promise < FilePresentation > promise = VoxeetSDK . filePresentation (). stop ( @ NonNull String fileId ); 8. The presenter and the viewers receive the FilePresentationStopped event to inform about the end of the file presentation. @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( @NonNull FilePresentationStopped event ) { } Share a video \u00b6 The following procedure describes the workflow that allows a presenter to share a video during a conference. 1. The presenter calls the start method to start the video presentation. This method automatically starts playing the shared video file. All participants receive the VideoPresentationStarted event. Promise < VideoPresentation > promise = VoxeetSDK . videoPresentation (). start ( @NonNull String url ); @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( @NonNull VideoPresentationStarted event ) { } 2. The presenter can call the pause method to pause the shared video. All participants receive the VideoPresentationPaused event. Promise < VideoPresentation > promise = VoxeetSDK . videoPresentation (). pause ( long timestamp ); @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( @NonNull VideoPresentationPaused event ) { } 3. The presenter can call the play method to resume the paused video. All participants receive the VideoPresentationPlay event. Promise < VideoPresentation > promise = VoxeetSDK . videoPresentation (). play (); @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( @NonNull VideoPresentationPlayed event ) { } 4. The presenter can call the seek method to navigate to a specific section of the shared video. All participants receive the VideoPresentationSeek event and watch the video from the specified timestamp. Promise < VideoPresentation > promise = VoxeetSDK . videoPresentation (). seek ( long timestamp ); @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( @NonNull VideoPresentationSought event ) { } 5. The presenter calls the stop method to stop the video presentation. All participants receive the VideoPresentationStopped event. Promise < VideoPresentation > promise = VoxeetSDK . videoPresentation (). stop () @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( @NonNull VideoPresentationStopped event ) { }","title":"Presenting"},{"location":"android-overview/presenting-android/#share-a-screen","text":"The screen-share option allows a presenter to share the contents of the presenter's screen with other conference participants. The following procedure presents a workflow that explains how to use the screen-share option. The Android screen-share workflow requires obtaining the proper permission before sharing the screen. The following steps present the simplest workflow; if you wish to find more information about the screen-share capabilities on Android, see the ScreenShareService documentation. 1. The presenter calls the sendRequestStartScreenShare method to request the screen-share permission. VoxeetSDK . screenShare (). sendRequestStartScreenShare (); 2. The presenter receives the RequestScreenSharePermissionEvent event and calls the sendUserPermissionRequest method. @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( @NonNull RequestScreenSharePermissionEvent event ) { VoxeetSDK . screenShare (). sendUserPermissionRequest ( currentActivity ); //In the context of the current activity: currentActivity = this } 3. The system forwards the requested permissions to the ScreenShareService and verifies the received bundle using the consumeRightsToScreenShare . @Override protected void onActivityResult ( int requestCode , int resultCode , Intent data ) { boolean managed = false ; if ( null != VoxeetSDK . screenShare ()) { managed = VoxeetSDK . screenShare (). onActivityResult ( requestCode , resultCode , data ); } if ( ! managed ) { super . onActivityResult ( requestCode , resultCode , data ); } } @Override protected void onResume () { super . onResume (); if ( null != VoxeetSDK . screenShare ()) { VoxeetSDK . screenShare (). consumeRightsToScreenShare (); } } 4. The presenter calls the startScreenShare method to start sharing the screen. The method uses the intent parameter that the presenter obtains together with the permission to share the screen. Promise < Boolean > promise = VoxeetSDK . screenShare (). startScreenShare ( Intent intent ); 5. The rest of the conference participants receive the StreamAddedEvent event that includes the \"ScreenShare\" stream.type . The event informs that the screen-share stream was successfully added. @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( @NonNull StreamAddedEvent event ) { MediaStream mediaStream = event . mediaStream ; MediaStreamType type = mediaStream . type ; } 6. The presenter calls the stopScreenShare method to stop sharing the screen. Promise < Boolean > promise = VoxeetSDK . screenShare (). stopScreenShare (); 7. The rest of the conference participants receive the streamRemoved event that includes the \"ScreenShare\" stream.type . The event informs that the screen-share stream was successfully removed. @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( @NonNull StreamRemovedEvent event ) { MediaStream mediaStream = event . mediaStream ; MediaStreamType type = mediaStream . type ; }","title":"Share a screen"},{"location":"android-overview/presenting-android/#share-a-file","text":"The following procedure describes the workflow that allows a presenter to share a file during a conference. The Dolby.io Communications APIs service converts the user-provided file into multiple pages, as images, accessible through the image method. 1. The presenter calls the convert method to upload and convert a file. Promise < FilePresentation > promise = VoxeetSDK . filePresentation (). convert ( File file ); 2. After the conversion, the FilePresentationConverted event is emitted. @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( @NonNull FilePresentationConverted event ) { } 3. The presenter calls the start method to start presenting the file. Promise < FilePresentation > promise = VoxeetSDK . filePresentation (). start ( @ NonNull FilePresentationConverted filePresentation ); 4. The presenter and the viewers receive the FilePresentationStarted event that informs that the file presentation starts. Upon receiving the FilePresentationStarted event, call the image method to get the converted file images URLs and display the proper page of the file by retrieving the individual images. @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( @NonNull FilePresentationStarted event ) { String imageUrl = VoxeetSDK . filePresentation (). image ( event . fileId , event . position ); } 5. The application is responsible for coordinating the page flip between the local and the presented files. The presenter calls the update method to inform the service to send the updated page number to the participants. Promise < FilePresentation > promise = VoxeetSDK . filePresentation (). update ( @ NonNull String fileId , int position ); 6. The presenter and viewers receive the FilePresentationUpdated event with the current page number. Receiving the FilePresentationUpdated event should trigger calling the image method to display the proper page of the file by retrieving the individual images. @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( @NonNull FilePresentationUpdated event ) { String imageUrl = VoxeetSDK . filePresentation (). image ( event . fileId , event . position ); } 7. The presenter calls the stop method to end the file presentation. Promise < FilePresentation > promise = VoxeetSDK . filePresentation (). stop ( @ NonNull String fileId ); 8. The presenter and the viewers receive the FilePresentationStopped event to inform about the end of the file presentation. @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( @NonNull FilePresentationStopped event ) { }","title":"Share a file"},{"location":"android-overview/presenting-android/#share-a-video","text":"The following procedure describes the workflow that allows a presenter to share a video during a conference. 1. The presenter calls the start method to start the video presentation. This method automatically starts playing the shared video file. All participants receive the VideoPresentationStarted event. Promise < VideoPresentation > promise = VoxeetSDK . videoPresentation (). start ( @NonNull String url ); @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( @NonNull VideoPresentationStarted event ) { } 2. The presenter can call the pause method to pause the shared video. All participants receive the VideoPresentationPaused event. Promise < VideoPresentation > promise = VoxeetSDK . videoPresentation (). pause ( long timestamp ); @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( @NonNull VideoPresentationPaused event ) { } 3. The presenter can call the play method to resume the paused video. All participants receive the VideoPresentationPlay event. Promise < VideoPresentation > promise = VoxeetSDK . videoPresentation (). play (); @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( @NonNull VideoPresentationPlayed event ) { } 4. The presenter can call the seek method to navigate to a specific section of the shared video. All participants receive the VideoPresentationSeek event and watch the video from the specified timestamp. Promise < VideoPresentation > promise = VoxeetSDK . videoPresentation (). seek ( long timestamp ); @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( @NonNull VideoPresentationSought event ) { } 5. The presenter calls the stop method to stop the video presentation. All participants receive the VideoPresentationStopped event. Promise < VideoPresentation > promise = VoxeetSDK . videoPresentation (). stop () @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( @NonNull VideoPresentationStopped event ) { }","title":"Share a video"},{"location":"android-overview/using-notifications-android/","text":"The Dolby.io Communications APIs offer the notification service which allows application users to receive notifications related to conference events, even when users have not yet joined the conference. The notification service consists of two parts: subscribing to notifications from the server and using event listeners. The subscription informs the server that the client wishes to receive the events. The event listeners allow developers to register callbacks and perform a specific programming action. The notification service is responsible for notifying application users about the received conference invitations, created and ended conferences, and participants who joined or left conferences. The notification service is not responsible for any other notifications. The subscription method takes an array of BaseSubscription objects: subscribe (@NonNull subscriptions: List< BaseSubscription >): Promise The BaseSubscription objects are implemented by the following subscription objects: SubscribeConferenceCreated SubscribeConferenceEnded SubscribeInvitation SubscribeParticipantJoined SubscribeParticipantLeft Note : By default, the subscription to invitations is enabled for all application users. To unsubscribe from notifications, use the unsubscribe method, similarly to using the subscribe method. To properly use notifications, follow this workflow: 1. Initialize the SDK and open a session. This step opens a WebSocket responsible for sending notification messages from the server to the client. 2. Call the subscribe method using the proper subscription type and the conference alias: VoxeetSDK . notification (). subscribe ( subscriptions : SubscribeConferenceCreated , conferenceAlias : ExampleAlias ) After this step, the application sends the notification request to the server to register the client for the specific notifications. The application emits the ConferenceStatusNotificationEvent event to inform the users about the status of the subscribed conference. 3. Use an event listener to perform a specific action after receiving the notification: @Subscribe ( threadMode = ThreadMode . MAIN ) public void onEvent ( @NonNull ConferenceCreatedNotificationEvent event ) { Log . d ( TAG , \"ConferenceCreatedNotificationEvent: event:=\" + event . conferenceId + \" \" + event . conferenceAlias ); System . out . println ( \"conference \" + event . conferenceAlias + \" has been created\" ) } After receiving the notification from the server, the application triggers the requested action. To configure notifications options on Android, check the following models: NotificationCenter - allows setting the enforced notification mode, it includes methods notifying the user about the received invitations and canceled conferences. NotificationMode - represents the following notification modes: none , fullscreen , and notification . NotificationTokenHolderFactory - implements notifications and enables managing push notifications. NotificationHelper - initializes the application awoken from the killed state. INotificationTokenProvider - provides the firebase push notification token.","title":"Using Notifications"},{"location":"android-reference/","text":"// sdk sdk \u00b6 Packages \u00b6 Name com.voxeet com.voxeet.android.media com.voxeet.android.media.capture.audio com.voxeet.android.media.capture.audio.noise com.voxeet.android.media.errors com.voxeet.android.media.spatialisation com.voxeet.android.media.stream com.voxeet.android.media.utils com.voxeet.sdk.authent.token com.voxeet.sdk.events.promises com.voxeet.sdk.events.restapi com.voxeet.sdk.events.sdk com.voxeet.sdk.events.v2 com.voxeet.sdk.events.v3 com.voxeet.sdk.exceptions com.voxeet.sdk.json com.voxeet.sdk.json.internal com.voxeet.sdk.media.audio com.voxeet.sdk.models com.voxeet.sdk.models.v1 com.voxeet.sdk.models.v2 com.voxeet.sdk.models.v3 com.voxeet.sdk.push.center com.voxeet.sdk.push.center.invitation com.voxeet.sdk.push.center.management com.voxeet.sdk.push.center.subscription.event com.voxeet.sdk.push.center.subscription.register com.voxeet.sdk.push.utils com.voxeet.sdk.services com.voxeet.sdk.services.audio com.voxeet.sdk.services.builders com.voxeet.sdk.services.chat com.voxeet.sdk.services.conference com.voxeet.sdk.services.conference.information com.voxeet.sdk.services.conference.spatialisation com.voxeet.sdk.services.notification com.voxeet.sdk.services.notification.events com.voxeet.sdk.services.presentation com.voxeet.sdk.services.presentation.file com.voxeet.sdk.services.presentation.video com.voxeet.sdk.services.screenshare com.voxeet.sdk.services.simulcast com.voxeet.sdk.services.video com.voxeet.sdk.utils","title":"Reference"},{"location":"android-reference/#sdk","text":"","title":"sdk"},{"location":"android-reference/#packages","text":"Name com.voxeet com.voxeet.android.media com.voxeet.android.media.capture.audio com.voxeet.android.media.capture.audio.noise com.voxeet.android.media.errors com.voxeet.android.media.spatialisation com.voxeet.android.media.stream com.voxeet.android.media.utils com.voxeet.sdk.authent.token com.voxeet.sdk.events.promises com.voxeet.sdk.events.restapi com.voxeet.sdk.events.sdk com.voxeet.sdk.events.v2 com.voxeet.sdk.events.v3 com.voxeet.sdk.exceptions com.voxeet.sdk.json com.voxeet.sdk.json.internal com.voxeet.sdk.media.audio com.voxeet.sdk.models com.voxeet.sdk.models.v1 com.voxeet.sdk.models.v2 com.voxeet.sdk.models.v3 com.voxeet.sdk.push.center com.voxeet.sdk.push.center.invitation com.voxeet.sdk.push.center.management com.voxeet.sdk.push.center.subscription.event com.voxeet.sdk.push.center.subscription.register com.voxeet.sdk.push.utils com.voxeet.sdk.services com.voxeet.sdk.services.audio com.voxeet.sdk.services.builders com.voxeet.sdk.services.chat com.voxeet.sdk.services.conference com.voxeet.sdk.services.conference.information com.voxeet.sdk.services.conference.spatialisation com.voxeet.sdk.services.notification com.voxeet.sdk.services.notification.events com.voxeet.sdk.services.presentation com.voxeet.sdk.services.presentation.file com.voxeet.sdk.services.presentation.video com.voxeet.sdk.services.screenshare com.voxeet.sdk.services.simulcast com.voxeet.sdk.services.video com.voxeet.sdk.utils","title":"Packages"},{"location":"android-reference/sdk/com.voxeet/","text":"// sdk / com.voxeet Package-level declarations \u00b6 Types \u00b6 Name Summary VoxeetSDK [Android] class VoxeetSDK : AbstractVoxeetSDK VoxeetSDK is the main object which provides methods interacting with the Voxeet service.","title":"Index"},{"location":"android-reference/sdk/com.voxeet/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet/#types","text":"Name Summary VoxeetSDK [Android] class VoxeetSDK : AbstractVoxeetSDK VoxeetSDK is the main object which provides methods interacting with the Voxeet service.","title":"Types"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/","text":"// sdk / com.voxeet / VoxeetSDK VoxeetSDK \u00b6 [Android] class VoxeetSDK : AbstractVoxeetSDK VoxeetSDK is the main object which provides methods interacting with the Voxeet service. It is the entry point to call the embedded services and static elements for developers. The SDK is asynchronous and uses promise at its core. Typical application workflow: The application accesses the Voxeet SDK instance by calling the instance method. The application initializes the Voxeet SDK through the initialize method. The application uses the proper method to retrieve the unique instance for a desired service. For example, the application uses the conference method to retrieve the ConferenceService instance. Note : To use the EventBus and retrieve its unique instance, the application needs to call the getEventBus method. Then, the application can register and deregister the object from the EventBus. Functions \u00b6 Name Summary audio [Android] @ NonNull open fun audio (): AudioService Retrieves the unique AudioService instance which enables the participant to manage the audio connection. command [Android] @ NonNull open fun command (): CommandService Retrieves the unique CommandService instance which enables the participant to send messages in a string formatted shape into specified conferences. conference [Android] @ NonNull open fun conference (): ConferenceService Retrieves the unique ConferenceService instance which enables the participant to interact with conferences. filePresentation [Android] @ NonNull open fun filePresentation (): FilePresentationService Retrieves the unique FilePresentationService instance which enables the participant to use file presentations. getEventBus [Android] @ NonNull open fun getEventBus (): EventBus Retrieves the instance of EventBus used by the SDK. initialize [Android] open fun initialize (@ NonNull accessToken: String , @ NonNull refreshToken: RefreshTokenCallback ) Initializes the SDK with an access token that is provided by the customer's backend communicating with the Voxeet servers. instance [Android] @ NonNull open fun instance (): VoxeetSDK Accesses the instance of the SDK which enables to use methods specific for the SDK. mediaDevice [Android] @ NonNull open fun mediaDevice (): MediaDeviceService Retrieves the unique MediaDeviceService instance which enables the participant to interact with devices through the system. notification [Android] @ NonNull open fun notification (): NotificationService Retrieves the unique NotificationService instance which enables forwarding notifications from developer to the properly registered manager. recording [Android] @ NonNull open fun recording (): RecordingService Retrieves the unique RecordingService instance which enables the participant to use the recording option. register [Android] open fun register (@ Nullable subscriber: Any ): Boolean Registers object into the EventBus of the SDK. screenShare [Android] @ NonNull open fun screenShare (): ScreenShareService Retrieves the unique ScreenShareService instance which enables the participant to use the screen sharing option. session [Android] @ NonNull open fun session (): SessionService Retrieves the unique SessionService instance which enables the participant to use sessions. unregister [Android] open fun unregister (@ NonNull subscriber: Any ) Deregisters from the EventBus instance. video [Android] @ NonNull open fun video (): VideoService Retrieves the unique VideoService instance which enables the participant to interact with video related API. videoPresentation [Android] @ NonNull open fun videoPresentation (): VideoPresentationService Retrieves the unique videoPresentationService instance which enables the participant to use video presentations.","title":"Index"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/#voxeetsdk","text":"[Android] class VoxeetSDK : AbstractVoxeetSDK VoxeetSDK is the main object which provides methods interacting with the Voxeet service. It is the entry point to call the embedded services and static elements for developers. The SDK is asynchronous and uses promise at its core. Typical application workflow: The application accesses the Voxeet SDK instance by calling the instance method. The application initializes the Voxeet SDK through the initialize method. The application uses the proper method to retrieve the unique instance for a desired service. For example, the application uses the conference method to retrieve the ConferenceService instance. Note : To use the EventBus and retrieve its unique instance, the application needs to call the getEventBus method. Then, the application can register and deregister the object from the EventBus.","title":"VoxeetSDK"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/#functions","text":"Name Summary audio [Android] @ NonNull open fun audio (): AudioService Retrieves the unique AudioService instance which enables the participant to manage the audio connection. command [Android] @ NonNull open fun command (): CommandService Retrieves the unique CommandService instance which enables the participant to send messages in a string formatted shape into specified conferences. conference [Android] @ NonNull open fun conference (): ConferenceService Retrieves the unique ConferenceService instance which enables the participant to interact with conferences. filePresentation [Android] @ NonNull open fun filePresentation (): FilePresentationService Retrieves the unique FilePresentationService instance which enables the participant to use file presentations. getEventBus [Android] @ NonNull open fun getEventBus (): EventBus Retrieves the instance of EventBus used by the SDK. initialize [Android] open fun initialize (@ NonNull accessToken: String , @ NonNull refreshToken: RefreshTokenCallback ) Initializes the SDK with an access token that is provided by the customer's backend communicating with the Voxeet servers. instance [Android] @ NonNull open fun instance (): VoxeetSDK Accesses the instance of the SDK which enables to use methods specific for the SDK. mediaDevice [Android] @ NonNull open fun mediaDevice (): MediaDeviceService Retrieves the unique MediaDeviceService instance which enables the participant to interact with devices through the system. notification [Android] @ NonNull open fun notification (): NotificationService Retrieves the unique NotificationService instance which enables forwarding notifications from developer to the properly registered manager. recording [Android] @ NonNull open fun recording (): RecordingService Retrieves the unique RecordingService instance which enables the participant to use the recording option. register [Android] open fun register (@ Nullable subscriber: Any ): Boolean Registers object into the EventBus of the SDK. screenShare [Android] @ NonNull open fun screenShare (): ScreenShareService Retrieves the unique ScreenShareService instance which enables the participant to use the screen sharing option. session [Android] @ NonNull open fun session (): SessionService Retrieves the unique SessionService instance which enables the participant to use sessions. unregister [Android] open fun unregister (@ NonNull subscriber: Any ) Deregisters from the EventBus instance. video [Android] @ NonNull open fun video (): VideoService Retrieves the unique VideoService instance which enables the participant to interact with video related API. videoPresentation [Android] @ NonNull open fun videoPresentation (): VideoPresentationService Retrieves the unique videoPresentationService instance which enables the participant to use video presentations.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/audio/","text":"// sdk / com.voxeet / VoxeetSDK / audio audio \u00b6 [Android] @ NonNull open fun audio (): AudioService Retrieves the unique AudioService instance which enables the participant to manage the audio connection. Return \u00b6 With an initialized SDK, the instance of the AudioService.","title":"Audio"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/audio/#audio","text":"[Android] @ NonNull open fun audio (): AudioService Retrieves the unique AudioService instance which enables the participant to manage the audio connection.","title":"audio"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/audio/#return","text":"With an initialized SDK, the instance of the AudioService.","title":"Return"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/command/","text":"// sdk / com.voxeet / VoxeetSDK / command command \u00b6 [Android] @ NonNull open fun command (): CommandService Retrieves the unique CommandService instance which enables the participant to send messages in a string formatted shape into specified conferences. Return \u00b6 With an initialized SDK, the instance of the CommandService.","title":"Command"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/command/#command","text":"[Android] @ NonNull open fun command (): CommandService Retrieves the unique CommandService instance which enables the participant to send messages in a string formatted shape into specified conferences.","title":"command"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/command/#return","text":"With an initialized SDK, the instance of the CommandService.","title":"Return"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/conference/","text":"// sdk / com.voxeet / VoxeetSDK / conference conference \u00b6 [Android] @ NonNull open fun conference (): ConferenceService Retrieves the unique ConferenceService instance which enables the participant to interact with conferences. Return \u00b6 With an initialized SDK, the instance of the ConferenceService.","title":"Conference"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/conference/#conference","text":"[Android] @ NonNull open fun conference (): ConferenceService Retrieves the unique ConferenceService instance which enables the participant to interact with conferences.","title":"conference"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/conference/#return","text":"With an initialized SDK, the instance of the ConferenceService.","title":"Return"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/file-presentation/","text":"// sdk / com.voxeet / VoxeetSDK / filePresentation filePresentation \u00b6 [Android] @ NonNull open fun filePresentation (): FilePresentationService Retrieves the unique FilePresentationService instance which enables the participant to use file presentations. Return \u00b6 With an initialized SDK, the instance of the FilePresentationService.","title":"File presentation"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/file-presentation/#filepresentation","text":"[Android] @ NonNull open fun filePresentation (): FilePresentationService Retrieves the unique FilePresentationService instance which enables the participant to use file presentations.","title":"filePresentation"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/file-presentation/#return","text":"With an initialized SDK, the instance of the FilePresentationService.","title":"Return"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/initialize/","text":"// sdk / com.voxeet / VoxeetSDK / initialize initialize \u00b6 [Android] open fun initialize (@ NonNull accessToken: String , @ NonNull refreshToken: RefreshTokenCallback ) Initializes the SDK with an access token that is provided by the customer's backend communicating with the Voxeet servers. The access token allows securing the customer key and secret. Due to a limited period of validity for security reasons, the token needs to be refreshed. To refresh the token, the Voxeet SDK calls the callback that calls the customer's backend and returns a promise containing the refreshed access token. Parameters \u00b6 Android accessToken The access token that is provided by the customer's backend. refreshToken A callback that returns a promise when the access token needs to be refreshed.","title":"Initialize"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/initialize/#initialize","text":"[Android] open fun initialize (@ NonNull accessToken: String , @ NonNull refreshToken: RefreshTokenCallback ) Initializes the SDK with an access token that is provided by the customer's backend communicating with the Voxeet servers. The access token allows securing the customer key and secret. Due to a limited period of validity for security reasons, the token needs to be refreshed. To refresh the token, the Voxeet SDK calls the callback that calls the customer's backend and returns a promise containing the refreshed access token.","title":"initialize"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/initialize/#parameters","text":"Android accessToken The access token that is provided by the customer's backend. refreshToken A callback that returns a promise when the access token needs to be refreshed.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/instance/","text":"// sdk / com.voxeet / VoxeetSDK / instance instance \u00b6 [Android] @ NonNull open fun instance (): VoxeetSDK Accesses the instance of the SDK which enables to use methods specific for the SDK. Services are available using static methods. Note: Every service method can return a null object if the SDK is initialized for the first time. Return \u00b6 The SDK instance if the static initialize method was called.","title":"Instance"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/instance/#instance","text":"[Android] @ NonNull open fun instance (): VoxeetSDK Accesses the instance of the SDK which enables to use methods specific for the SDK. Services are available using static methods. Note: Every service method can return a null object if the SDK is initialized for the first time.","title":"instance"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/instance/#return","text":"The SDK instance if the static initialize method was called.","title":"Return"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/media-device/","text":"// sdk / com.voxeet / VoxeetSDK / mediaDevice mediaDevice \u00b6 [Android] @ NonNull open fun mediaDevice (): MediaDeviceService Retrieves the unique MediaDeviceService instance which enables the participant to interact with devices through the system. Return \u00b6 With an initialized SDK, the instance of the MediaDeviceService.","title":"Media device"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/media-device/#mediadevice","text":"[Android] @ NonNull open fun mediaDevice (): MediaDeviceService Retrieves the unique MediaDeviceService instance which enables the participant to interact with devices through the system.","title":"mediaDevice"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/media-device/#return","text":"With an initialized SDK, the instance of the MediaDeviceService.","title":"Return"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/notification/","text":"// sdk / com.voxeet / VoxeetSDK / notification notification \u00b6 [Android] @ NonNull open fun notification (): NotificationService Retrieves the unique NotificationService instance which enables forwarding notifications from developer to the properly registered manager. Return \u00b6 With an initialized SDK, the instance of the NotificationService.","title":"Notification"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/notification/#notification","text":"[Android] @ NonNull open fun notification (): NotificationService Retrieves the unique NotificationService instance which enables forwarding notifications from developer to the properly registered manager.","title":"notification"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/notification/#return","text":"With an initialized SDK, the instance of the NotificationService.","title":"Return"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/recording/","text":"// sdk / com.voxeet / VoxeetSDK / recording recording \u00b6 [Android] @ NonNull open fun recording (): RecordingService Retrieves the unique RecordingService instance which enables the participant to use the recording option. This service wraps the recording related calls. Return \u00b6 With an initialized SDK, the instance of the RecordingService.","title":"Recording"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/recording/#recording","text":"[Android] @ NonNull open fun recording (): RecordingService Retrieves the unique RecordingService instance which enables the participant to use the recording option. This service wraps the recording related calls.","title":"recording"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/recording/#return","text":"With an initialized SDK, the instance of the RecordingService.","title":"Return"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/screen-share/","text":"// sdk / com.voxeet / VoxeetSDK / screenShare screenShare \u00b6 [Android] @ NonNull open fun screenShare (): ScreenShareService Retrieves the unique ScreenShareService instance which enables the participant to use the screen sharing option. Return \u00b6 With an initialized SDK, the instance of the ScreenShareService.","title":"Screen share"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/screen-share/#screenshare","text":"[Android] @ NonNull open fun screenShare (): ScreenShareService Retrieves the unique ScreenShareService instance which enables the participant to use the screen sharing option.","title":"screenShare"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/screen-share/#return","text":"With an initialized SDK, the instance of the ScreenShareService.","title":"Return"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/session/","text":"// sdk / com.voxeet / VoxeetSDK / session session \u00b6 [Android] @ NonNull open fun session (): SessionService Retrieves the unique SessionService instance which enables the participant to use sessions. Return \u00b6 With an initialized SDK, the instance of the SessionService.","title":"Session"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/session/#session","text":"[Android] @ NonNull open fun session (): SessionService Retrieves the unique SessionService instance which enables the participant to use sessions.","title":"session"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/session/#return","text":"With an initialized SDK, the instance of the SessionService.","title":"Return"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/video-presentation/","text":"// sdk / com.voxeet / VoxeetSDK / videoPresentation videoPresentation \u00b6 [Android] @ NonNull open fun videoPresentation (): VideoPresentationService Retrieves the unique videoPresentationService instance which enables the participant to use video presentations. The UXKit also provides components extending this service with automatic injection of various plugins such as Youtube or MP4. Return \u00b6 With an initialized SDK, the instance of the VideoPresentationService.","title":"Video presentation"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/video-presentation/#videopresentation","text":"[Android] @ NonNull open fun videoPresentation (): VideoPresentationService Retrieves the unique videoPresentationService instance which enables the participant to use video presentations. The UXKit also provides components extending this service with automatic injection of various plugins such as Youtube or MP4.","title":"videoPresentation"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/video-presentation/#return","text":"With an initialized SDK, the instance of the VideoPresentationService.","title":"Return"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/video/","text":"// sdk / com.voxeet / VoxeetSDK / video video \u00b6 [Android] @ NonNull open fun video (): VideoService Retrieves the unique VideoService instance which enables the participant to interact with video related API. Note : This method is available only in SDK 3.7 and later. Return \u00b6 With an initialized SDK, the instance of the VideoService.","title":"Video"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/video/#video","text":"[Android] @ NonNull open fun video (): VideoService Retrieves the unique VideoService instance which enables the participant to interact with video related API. Note : This method is available only in SDK 3.7 and later.","title":"video"},{"location":"android-reference/sdk/com.voxeet/-voxeet-s-d-k/video/#return","text":"With an initialized SDK, the instance of the VideoService.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.android.media/","text":"// sdk / com.voxeet.android.media Package-level declarations \u00b6 Types \u00b6 Name Summary MediaStream [Android] open class MediaStream The MediaStream model contains information about media streams.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.android.media/#types","text":"Name Summary MediaStream [Android] open class MediaStream The MediaStream model contains information about media streams.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.android.media/-media-stream/","text":"// sdk / com.voxeet.android.media / MediaStream MediaStream \u00b6 [Android] open class MediaStream The MediaStream model contains information about media streams. Functions \u00b6 Name Summary audioTracks [Android] @ NonNull open fun audioTracks (): List <AudioTrack> Retrieves the hard list of AudioTracks. label [Android] open fun label (): String Gets the MediaStream label. [Android] open fun label (@ NonNull label: String ) Sets the MediaStream label. peerId [Android] open fun peerId (): String Gets the peer identifier. videoTracks [Android] @ NonNull open fun videoTracks (): List <VideoTrack> Retrieves the hard list of VideoTracks. Properties \u00b6 Name Summary type [Android] @get: NonNull open val type : MediaStreamType MediaStream Type representation","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media/-media-stream/#mediastream","text":"[Android] open class MediaStream The MediaStream model contains information about media streams.","title":"MediaStream"},{"location":"android-reference/sdk/com.voxeet.android.media/-media-stream/#functions","text":"Name Summary audioTracks [Android] @ NonNull open fun audioTracks (): List <AudioTrack> Retrieves the hard list of AudioTracks. label [Android] open fun label (): String Gets the MediaStream label. [Android] open fun label (@ NonNull label: String ) Sets the MediaStream label. peerId [Android] open fun peerId (): String Gets the peer identifier. videoTracks [Android] @ NonNull open fun videoTracks (): List <VideoTrack> Retrieves the hard list of VideoTracks.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.android.media/-media-stream/#properties","text":"Name Summary type [Android] @get: NonNull open val type : MediaStreamType MediaStream Type representation","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.android.media/-media-stream/audio-tracks/","text":"// sdk / com.voxeet.android.media / MediaStream / audioTracks audioTracks \u00b6 [Android] @ NonNull open fun audioTracks (): List <AudioTrack> Retrieves the hard list of AudioTracks. Return \u00b6 the list of audio tracks","title":"Audio tracks"},{"location":"android-reference/sdk/com.voxeet.android.media/-media-stream/audio-tracks/#audiotracks","text":"[Android] @ NonNull open fun audioTracks (): List <AudioTrack> Retrieves the hard list of AudioTracks.","title":"audioTracks"},{"location":"android-reference/sdk/com.voxeet.android.media/-media-stream/audio-tracks/#return","text":"the list of audio tracks","title":"Return"},{"location":"android-reference/sdk/com.voxeet.android.media/-media-stream/label/","text":"// sdk / com.voxeet.android.media / MediaStream / label label \u00b6 [Android] open fun label (): String Gets the MediaStream label. Return \u00b6 the label written [Android] open fun label (@ NonNull label: String ) Sets the MediaStream label. This method is designed only for the internal use. Parameters \u00b6 Android label the new label of this MediaStream","title":"Label"},{"location":"android-reference/sdk/com.voxeet.android.media/-media-stream/label/#label","text":"[Android] open fun label (): String Gets the MediaStream label.","title":"label"},{"location":"android-reference/sdk/com.voxeet.android.media/-media-stream/label/#return","text":"the label written [Android] open fun label (@ NonNull label: String ) Sets the MediaStream label. This method is designed only for the internal use.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.android.media/-media-stream/label/#parameters","text":"Android label the new label of this MediaStream","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.android.media/-media-stream/peer-id/","text":"// sdk / com.voxeet.android.media / MediaStream / peerId peerId \u00b6 [Android] open fun peerId (): String Gets the peer identifier. Return \u00b6 a valid string","title":"Peer id"},{"location":"android-reference/sdk/com.voxeet.android.media/-media-stream/peer-id/#peerid","text":"[Android] open fun peerId (): String Gets the peer identifier.","title":"peerId"},{"location":"android-reference/sdk/com.voxeet.android.media/-media-stream/peer-id/#return","text":"a valid string","title":"Return"},{"location":"android-reference/sdk/com.voxeet.android.media/-media-stream/type/","text":"// sdk / com.voxeet.android.media / MediaStream / type type \u00b6 [Android] @get: NonNull open val type : MediaStreamType MediaStream Type representation","title":"Type"},{"location":"android-reference/sdk/com.voxeet.android.media/-media-stream/type/#type","text":"[Android] @get: NonNull open val type : MediaStreamType MediaStream Type representation","title":"type"},{"location":"android-reference/sdk/com.voxeet.android.media/-media-stream/video-tracks/","text":"// sdk / com.voxeet.android.media / MediaStream / videoTracks videoTracks \u00b6 [Android] @ NonNull open fun videoTracks (): List <VideoTrack> Retrieves the hard list of VideoTracks. Return \u00b6 the list of video tracks","title":"Video tracks"},{"location":"android-reference/sdk/com.voxeet.android.media/-media-stream/video-tracks/#videotracks","text":"[Android] @ NonNull open fun videoTracks (): List <VideoTrack> Retrieves the hard list of VideoTracks.","title":"videoTracks"},{"location":"android-reference/sdk/com.voxeet.android.media/-media-stream/video-tracks/#return","text":"the list of video tracks","title":"Return"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/","text":"// sdk / com.voxeet.android.media.capture.audio Package-level declarations \u00b6 Types \u00b6 Name Summary AudioCaptureMode [Android] class AudioCaptureMode The AudioCaptureMode model allows enabling and disabling audio processing for the local participant. Mode [Android] enum Mode The Mode model informs about the audio processing for the local participant.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/#types","text":"Name Summary AudioCaptureMode [Android] class AudioCaptureMode The AudioCaptureMode model allows enabling and disabling audio processing for the local participant. Mode [Android] enum Mode The Mode model informs about the audio processing for the local participant.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-audio-capture-mode/","text":"// sdk / com.voxeet.android.media.capture.audio / AudioCaptureMode AudioCaptureMode \u00b6 [Android] class AudioCaptureMode The AudioCaptureMode model allows enabling and disabling audio processing for the local participant. By default, the Dolby Voice audio processing algorithm is enabled in Dolby Voice conferences to improve voice communication. However, audio processing lowers the quality of non-voice audio. To send non-voice audio, such as music, disable audio processing by using the Unprocessed mode. This model is available in SDK 3.7 and later. Functions \u00b6 Name Summary standard [Android] @ NonNull open fun standard (@ NonNull noiseReduction: StandardNoiseReduction ): AudioCaptureMode @ NonNull open fun standard (@ NonNull noiseReduction: StandardNoiseReduction , @ NonNull voiceFont: VoiceFont): AudioCaptureMode Enables audio processing to improve voice quality. unprocessed [Android] @ NonNull open fun unprocessed (): AudioCaptureMode Disables audio processing to allow transmitting non-voice audio to a conference. Properties \u00b6 Name Summary mode [Android] @ NonNull val mode : Mode The preferred audio processing mode for the local participant. noiseReduction [Android] @ Nullable val noiseReduction : NoiseReduction The preferred level of noise reduction in the current mode. voiceFont [Android] @ Nullable val voiceFont : VoiceFont The preferred voice font preset in the current mode.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-audio-capture-mode/#audiocapturemode","text":"[Android] class AudioCaptureMode The AudioCaptureMode model allows enabling and disabling audio processing for the local participant. By default, the Dolby Voice audio processing algorithm is enabled in Dolby Voice conferences to improve voice communication. However, audio processing lowers the quality of non-voice audio. To send non-voice audio, such as music, disable audio processing by using the Unprocessed mode. This model is available in SDK 3.7 and later.","title":"AudioCaptureMode"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-audio-capture-mode/#functions","text":"Name Summary standard [Android] @ NonNull open fun standard (@ NonNull noiseReduction: StandardNoiseReduction ): AudioCaptureMode @ NonNull open fun standard (@ NonNull noiseReduction: StandardNoiseReduction , @ NonNull voiceFont: VoiceFont): AudioCaptureMode Enables audio processing to improve voice quality. unprocessed [Android] @ NonNull open fun unprocessed (): AudioCaptureMode Disables audio processing to allow transmitting non-voice audio to a conference.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-audio-capture-mode/#properties","text":"Name Summary mode [Android] @ NonNull val mode : Mode The preferred audio processing mode for the local participant. noiseReduction [Android] @ Nullable val noiseReduction : NoiseReduction The preferred level of noise reduction in the current mode. voiceFont [Android] @ Nullable val voiceFont : VoiceFont The preferred voice font preset in the current mode.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-audio-capture-mode/mode/","text":"// sdk / com.voxeet.android.media.capture.audio / AudioCaptureMode / mode mode \u00b6 [Android] @ NonNull val mode : Mode The preferred audio processing mode for the local participant.","title":"Mode"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-audio-capture-mode/mode/#mode","text":"[Android] @ NonNull val mode : Mode The preferred audio processing mode for the local participant.","title":"mode"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-audio-capture-mode/noise-reduction/","text":"// sdk / com.voxeet.android.media.capture.audio / AudioCaptureMode / noiseReduction noiseReduction \u00b6 [Android] @ Nullable val noiseReduction : NoiseReduction The preferred level of noise reduction in the current mode.","title":"Noise reduction"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-audio-capture-mode/noise-reduction/#noisereduction","text":"[Android] @ Nullable val noiseReduction : NoiseReduction The preferred level of noise reduction in the current mode.","title":"noiseReduction"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-audio-capture-mode/standard/","text":"// sdk / com.voxeet.android.media.capture.audio / AudioCaptureMode / standard standard \u00b6 [Android] @ NonNull open fun standard (@ NonNull noiseReduction: StandardNoiseReduction ): AudioCaptureMode Enables audio processing to improve voice quality. Return \u00b6 The audio capture mode object. Parameters \u00b6 Android noiseReduction The noise reduction level. [Android] @ NonNull open fun standard (@ NonNull noiseReduction: StandardNoiseReduction , @ NonNull voiceFont: VoiceFont): AudioCaptureMode Enables audio processing to improve voice quality. Return \u00b6 The audio capture mode object. Parameters \u00b6 Android noiseReduction The noise reduction level. voiceFont The voice font preset.","title":"Standard"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-audio-capture-mode/standard/#standard","text":"[Android] @ NonNull open fun standard (@ NonNull noiseReduction: StandardNoiseReduction ): AudioCaptureMode Enables audio processing to improve voice quality.","title":"standard"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-audio-capture-mode/standard/#return","text":"The audio capture mode object.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-audio-capture-mode/standard/#parameters","text":"Android noiseReduction The noise reduction level. [Android] @ NonNull open fun standard (@ NonNull noiseReduction: StandardNoiseReduction , @ NonNull voiceFont: VoiceFont): AudioCaptureMode Enables audio processing to improve voice quality.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-audio-capture-mode/standard/#return_1","text":"The audio capture mode object.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-audio-capture-mode/standard/#parameters_1","text":"Android noiseReduction The noise reduction level. voiceFont The voice font preset.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-audio-capture-mode/unprocessed/","text":"// sdk / com.voxeet.android.media.capture.audio / AudioCaptureMode / unprocessed unprocessed \u00b6 [Android] @ NonNull open fun unprocessed (): AudioCaptureMode Disables audio processing to allow transmitting non-voice audio to a conference. Return \u00b6 The audio capture mode object.","title":"Unprocessed"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-audio-capture-mode/unprocessed/#unprocessed","text":"[Android] @ NonNull open fun unprocessed (): AudioCaptureMode Disables audio processing to allow transmitting non-voice audio to a conference.","title":"unprocessed"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-audio-capture-mode/unprocessed/#return","text":"The audio capture mode object.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-audio-capture-mode/voice-font/","text":"// sdk / com.voxeet.android.media.capture.audio / AudioCaptureMode / voiceFont voiceFont \u00b6 [Android] @ Nullable val voiceFont : VoiceFont The preferred voice font preset in the current mode.","title":"Voice font"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-audio-capture-mode/voice-font/#voicefont","text":"[Android] @ Nullable val voiceFont : VoiceFont The preferred voice font preset in the current mode.","title":"voiceFont"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-mode/","text":"// sdk / com.voxeet.android.media.capture.audio / Mode Mode \u00b6 [Android] enum Mode The Mode model informs about the audio processing for the local participant. By default, the Dolby Voice audio processing algorithm is enabled in Dolby Voice conferences to improve voice communication. However, audio processing lowers the quality of non-voice audio. To send non-voice audio, such as music, disable audio processing by using the Unprocessed mode. This model is available in SDK 3.7 and later. Entries \u00b6 STANDARD [Android] STANDARD Enables audio processing to improve voice quality. UNPROCESSED [Android] UNPROCESSED Disables audio processing to allow transmitting non-voice audio to a conference. Functions \u00b6 Name Summary valueOf [Android] open fun valueOf (name: String ): Mode Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < Mode > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-mode/#mode","text":"[Android] enum Mode The Mode model informs about the audio processing for the local participant. By default, the Dolby Voice audio processing algorithm is enabled in Dolby Voice conferences to improve voice communication. However, audio processing lowers the quality of non-voice audio. To send non-voice audio, such as music, disable audio processing by using the Unprocessed mode. This model is available in SDK 3.7 and later.","title":"Mode"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-mode/#entries","text":"STANDARD [Android] STANDARD Enables audio processing to improve voice quality. UNPROCESSED [Android] UNPROCESSED Disables audio processing to allow transmitting non-voice audio to a conference.","title":"Entries"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-mode/#functions","text":"Name Summary valueOf [Android] open fun valueOf (name: String ): Mode Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < Mode > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-mode/value-of/","text":"// sdk / com.voxeet.android.media.capture.audio / Mode / valueOf valueOf \u00b6 [Android] open fun valueOf (name: String ): Mode Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) Return \u00b6 the enum constant with the specified name Throws \u00b6 IllegalArgumentException if this enum type has no constant with the specified name","title":"Value of"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-mode/value-of/#valueof","text":"[Android] open fun valueOf (name: String ): Mode Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)","title":"valueOf"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-mode/value-of/#return","text":"the enum constant with the specified name","title":"Return"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-mode/value-of/#throws","text":"IllegalArgumentException if this enum type has no constant with the specified name","title":"Throws"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-mode/values/","text":"// sdk / com.voxeet.android.media.capture.audio / Mode / values values \u00b6 [Android] open fun values (): Array < Mode > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants. Return \u00b6 an array containing the constants of this enum type, in the order they're declared","title":"Values"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-mode/values/#values","text":"[Android] open fun values (): Array < Mode > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants.","title":"values"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-mode/values/#return","text":"an array containing the constants of this enum type, in the order they're declared","title":"Return"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-mode/-s-t-a-n-d-a-r-d/","text":"// sdk / com.voxeet.android.media.capture.audio / Mode / STANDARD STANDARD \u00b6 [Android] STANDARD Enables audio processing to improve voice quality.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-mode/-s-t-a-n-d-a-r-d/#standard","text":"[Android] STANDARD Enables audio processing to improve voice quality.","title":"STANDARD"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-mode/-u-n-p-r-o-c-e-s-s-e-d/","text":"// sdk / com.voxeet.android.media.capture.audio / Mode / UNPROCESSED UNPROCESSED \u00b6 [Android] UNPROCESSED Disables audio processing to allow transmitting non-voice audio to a conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio/-mode/-u-n-p-r-o-c-e-s-s-e-d/#unprocessed","text":"[Android] UNPROCESSED Disables audio processing to allow transmitting non-voice audio to a conference.","title":"UNPROCESSED"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/","text":"// sdk / com.voxeet.android.media.capture.audio.noise Package-level declarations \u00b6 Types \u00b6 Name Summary NoiseReduction [Android] enum NoiseReduction The NoiseReductionLevel model allows selecting the preferred level of noise reduction. StandardNoiseReduction [Android] enum StandardNoiseReduction : MappableNoiseReduction The StandardNoiseReduction model contains the possible noise reduction levels for the standard audio processing.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/#types","text":"Name Summary NoiseReduction [Android] enum NoiseReduction The NoiseReductionLevel model allows selecting the preferred level of noise reduction. StandardNoiseReduction [Android] enum StandardNoiseReduction : MappableNoiseReduction The StandardNoiseReduction model contains the possible noise reduction levels for the standard audio processing.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/-noise-reduction/","text":"// sdk / com.voxeet.android.media.capture.audio.noise / NoiseReduction NoiseReduction \u00b6 [Android] enum NoiseReduction The NoiseReductionLevel model allows selecting the preferred level of noise reduction. This model is available in SDK 3.7 and later. Entries \u00b6 HIGH [Android] HIGH Removes all background sounds to improve voice quality. Use this mode if you want to send only voice to a conference. LOW [Android] LOW Removes stationary background sounds, such as the sound of a computer fan, air conditioning, or microphone hum, from audio transmitted to a conference. In this mode, non-stationary sounds are transmitted to give participants full context of other participants' environments and create a more realistic audio experience. If you want to send only voice to a conference, use the High level. Functions \u00b6 Name Summary valueOf [Android] open fun valueOf (name: String ): NoiseReduction Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < NoiseReduction > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/-noise-reduction/#noisereduction","text":"[Android] enum NoiseReduction The NoiseReductionLevel model allows selecting the preferred level of noise reduction. This model is available in SDK 3.7 and later.","title":"NoiseReduction"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/-noise-reduction/#entries","text":"HIGH [Android] HIGH Removes all background sounds to improve voice quality. Use this mode if you want to send only voice to a conference. LOW [Android] LOW Removes stationary background sounds, such as the sound of a computer fan, air conditioning, or microphone hum, from audio transmitted to a conference. In this mode, non-stationary sounds are transmitted to give participants full context of other participants' environments and create a more realistic audio experience. If you want to send only voice to a conference, use the High level.","title":"Entries"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/-noise-reduction/#functions","text":"Name Summary valueOf [Android] open fun valueOf (name: String ): NoiseReduction Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < NoiseReduction > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/-noise-reduction/value-of/","text":"// sdk / com.voxeet.android.media.capture.audio.noise / NoiseReduction / valueOf valueOf \u00b6 [Android] open fun valueOf (name: String ): NoiseReduction Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) Return \u00b6 the enum constant with the specified name Throws \u00b6 IllegalArgumentException if this enum type has no constant with the specified name","title":"Value of"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/-noise-reduction/value-of/#valueof","text":"[Android] open fun valueOf (name: String ): NoiseReduction Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)","title":"valueOf"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/-noise-reduction/value-of/#return","text":"the enum constant with the specified name","title":"Return"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/-noise-reduction/value-of/#throws","text":"IllegalArgumentException if this enum type has no constant with the specified name","title":"Throws"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/-noise-reduction/values/","text":"// sdk / com.voxeet.android.media.capture.audio.noise / NoiseReduction / values values \u00b6 [Android] open fun values (): Array < NoiseReduction > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants. Return \u00b6 an array containing the constants of this enum type, in the order they're declared","title":"Values"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/-noise-reduction/values/#values","text":"[Android] open fun values (): Array < NoiseReduction > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants.","title":"values"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/-noise-reduction/values/#return","text":"an array containing the constants of this enum type, in the order they're declared","title":"Return"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/-noise-reduction/-h-i-g-h/","text":"// sdk / com.voxeet.android.media.capture.audio.noise / NoiseReduction / HIGH HIGH \u00b6 [Android] HIGH Removes all background sounds to improve voice quality. Use this mode if you want to send only voice to a conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/-noise-reduction/-h-i-g-h/#high","text":"[Android] HIGH Removes all background sounds to improve voice quality. Use this mode if you want to send only voice to a conference.","title":"HIGH"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/-noise-reduction/-l-o-w/","text":"// sdk / com.voxeet.android.media.capture.audio.noise / NoiseReduction / LOW LOW \u00b6 [Android] LOW Removes stationary background sounds, such as the sound of a computer fan, air conditioning, or microphone hum, from audio transmitted to a conference. In this mode, non-stationary sounds are transmitted to give participants full context of other participants' environments and create a more realistic audio experience. If you want to send only voice to a conference, use the High level.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/-noise-reduction/-l-o-w/#low","text":"[Android] LOW Removes stationary background sounds, such as the sound of a computer fan, air conditioning, or microphone hum, from audio transmitted to a conference. In this mode, non-stationary sounds are transmitted to give participants full context of other participants' environments and create a more realistic audio experience. If you want to send only voice to a conference, use the High level.","title":"LOW"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/-standard-noise-reduction/","text":"// sdk / com.voxeet.android.media.capture.audio.noise / StandardNoiseReduction StandardNoiseReduction \u00b6 [Android] enum StandardNoiseReduction : MappableNoiseReduction The StandardNoiseReduction model contains the possible noise reduction levels for the standard audio processing. Entries \u00b6 HIGH [Android] HIGH Removes all background sounds to improve voice quality. Use this mode if you want to send only voice to a conference. LOW [Android] LOW Removes stationary background sounds, such as the sound of a computer fan, air conditioning, or microphone hum, from audio transmitted to a conference. In this mode, non-stationary sounds are transmitted to give participants full context of other participants' environments and create a more realistic audio experience. If you want to send only voice to a conference, use the High level. Functions \u00b6 Name Summary valueOf [Android] open fun valueOf (name: String ): StandardNoiseReduction Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < StandardNoiseReduction > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/-standard-noise-reduction/#standardnoisereduction","text":"[Android] enum StandardNoiseReduction : MappableNoiseReduction The StandardNoiseReduction model contains the possible noise reduction levels for the standard audio processing.","title":"StandardNoiseReduction"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/-standard-noise-reduction/#entries","text":"HIGH [Android] HIGH Removes all background sounds to improve voice quality. Use this mode if you want to send only voice to a conference. LOW [Android] LOW Removes stationary background sounds, such as the sound of a computer fan, air conditioning, or microphone hum, from audio transmitted to a conference. In this mode, non-stationary sounds are transmitted to give participants full context of other participants' environments and create a more realistic audio experience. If you want to send only voice to a conference, use the High level.","title":"Entries"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/-standard-noise-reduction/#functions","text":"Name Summary valueOf [Android] open fun valueOf (name: String ): StandardNoiseReduction Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < StandardNoiseReduction > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/-standard-noise-reduction/value-of/","text":"// sdk / com.voxeet.android.media.capture.audio.noise / StandardNoiseReduction / valueOf valueOf \u00b6 [Android] open fun valueOf (name: String ): StandardNoiseReduction Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) Return \u00b6 the enum constant with the specified name Throws \u00b6 IllegalArgumentException if this enum type has no constant with the specified name","title":"Value of"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/-standard-noise-reduction/value-of/#valueof","text":"[Android] open fun valueOf (name: String ): StandardNoiseReduction Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)","title":"valueOf"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/-standard-noise-reduction/value-of/#return","text":"the enum constant with the specified name","title":"Return"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/-standard-noise-reduction/value-of/#throws","text":"IllegalArgumentException if this enum type has no constant with the specified name","title":"Throws"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/-standard-noise-reduction/values/","text":"// sdk / com.voxeet.android.media.capture.audio.noise / StandardNoiseReduction / values values \u00b6 [Android] open fun values (): Array < StandardNoiseReduction > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants. Return \u00b6 an array containing the constants of this enum type, in the order they're declared","title":"Values"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/-standard-noise-reduction/values/#values","text":"[Android] open fun values (): Array < StandardNoiseReduction > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants.","title":"values"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/-standard-noise-reduction/values/#return","text":"an array containing the constants of this enum type, in the order they're declared","title":"Return"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/-standard-noise-reduction/-h-i-g-h/","text":"// sdk / com.voxeet.android.media.capture.audio.noise / StandardNoiseReduction / HIGH HIGH \u00b6 [Android] HIGH Removes all background sounds to improve voice quality. Use this mode if you want to send only voice to a conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/-standard-noise-reduction/-h-i-g-h/#high","text":"[Android] HIGH Removes all background sounds to improve voice quality. Use this mode if you want to send only voice to a conference.","title":"HIGH"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/-standard-noise-reduction/-l-o-w/","text":"// sdk / com.voxeet.android.media.capture.audio.noise / StandardNoiseReduction / LOW LOW \u00b6 [Android] LOW Removes stationary background sounds, such as the sound of a computer fan, air conditioning, or microphone hum, from audio transmitted to a conference. In this mode, non-stationary sounds are transmitted to give participants full context of other participants' environments and create a more realistic audio experience. If you want to send only voice to a conference, use the High level.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.capture.audio.noise/-standard-noise-reduction/-l-o-w/#low","text":"[Android] LOW Removes stationary background sounds, such as the sound of a computer fan, air conditioning, or microphone hum, from audio transmitted to a conference. In this mode, non-stationary sounds are transmitted to give participants full context of other participants' environments and create a more realistic audio experience. If you want to send only voice to a conference, use the High level.","title":"LOW"},{"location":"android-reference/sdk/com.voxeet.android.media.errors/","text":"// sdk / com.voxeet.android.media.errors Package-level declarations \u00b6 Types \u00b6 Name Summary SpatialAudioException [Android] open class SpatialAudioException : Exception The SpatialAudioException occurs in the following situations: - A participant tries to use spatial audio in a non-Dolby Voice conference. - A participant tries to use spatial audio when setspatialaudio is not enabled in ConferenceJoinOptions.Builder. - A participant calls setspatialdirection, setspatialenvironment, or setspatialposition to set the spatial audio scene for listeners. Setting spatial audio scene for listeners requires using Set Spatial Listeners Audio REST API.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.errors/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.android.media.errors/#types","text":"Name Summary SpatialAudioException [Android] open class SpatialAudioException : Exception The SpatialAudioException occurs in the following situations: - A participant tries to use spatial audio in a non-Dolby Voice conference. - A participant tries to use spatial audio when setspatialaudio is not enabled in ConferenceJoinOptions.Builder. - A participant calls setspatialdirection, setspatialenvironment, or setspatialposition to set the spatial audio scene for listeners. Setting spatial audio scene for listeners requires using Set Spatial Listeners Audio REST API.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.android.media.errors/-spatial-audio-exception/","text":"// sdk / com.voxeet.android.media.errors / SpatialAudioException SpatialAudioException \u00b6 [Android] open class SpatialAudioException : Exception The SpatialAudioException occurs in the following situations: A participant tries to use spatial audio in a non-Dolby Voice conference. A participant tries to use spatial audio when setspatialaudio is not enabled in ConferenceJoinOptions.Builder. A participant calls setspatialdirection, setspatialenvironment, or setspatialposition to set the spatial audio scene for listeners. Setting spatial audio scene for listeners requires using Set Spatial Listeners Audio REST API.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.errors/-spatial-audio-exception/#spatialaudioexception","text":"[Android] open class SpatialAudioException : Exception The SpatialAudioException occurs in the following situations: A participant tries to use spatial audio in a non-Dolby Voice conference. A participant tries to use spatial audio when setspatialaudio is not enabled in ConferenceJoinOptions.Builder. A participant calls setspatialdirection, setspatialenvironment, or setspatialposition to set the spatial audio scene for listeners. Setting spatial audio scene for listeners requires using Set Spatial Listeners Audio REST API.","title":"SpatialAudioException"},{"location":"android-reference/sdk/com.voxeet.android.media.spatialisation/","text":"// sdk / com.voxeet.android.media.spatialisation Package-level declarations \u00b6 Types \u00b6 Name Summary SpatialDirection [Android] open class SpatialDirection The SpatialDirection model defines the direction a participant is facing. SpatialPosition [Android] open class SpatialPosition The SpatialPosition model represents a participant's audio position. SpatialScale [Android] open class SpatialScale The SpatialScale model defines how to convert units from the application's coordinate system (pixels or centimeters) into meters used by the spatial audio coordinate system.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.spatialisation/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.android.media.spatialisation/#types","text":"Name Summary SpatialDirection [Android] open class SpatialDirection The SpatialDirection model defines the direction a participant is facing. SpatialPosition [Android] open class SpatialPosition The SpatialPosition model represents a participant's audio position. SpatialScale [Android] open class SpatialScale The SpatialScale model defines how to convert units from the application's coordinate system (pixels or centimeters) into meters used by the spatial audio coordinate system.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.android.media.spatialisation/-spatial-direction/","text":"// sdk / com.voxeet.android.media.spatialisation / SpatialDirection SpatialDirection \u00b6 [Android] open class SpatialDirection The SpatialDirection model defines the direction a participant is facing. The model is specified as a set of three Euler rotations about the corresponding axis in the order of z-x-y: The following properties define a rotation about the specified positive axis: x : A rotation about the x-axis y : A rotation about the y-axis z : A rotation about the z-axis These properties correspond to yaw, pitch, and roll: Yaw: A rotation about the up axis, where the default environment is the Y rotation Sorry, your browser doesn't support embedded videos. Pitch: A rotation about the right axis, where the default environment is the X rotation. Sorry, your browser doesn't support embedded videos. Roll: A rotation about the forward axis, where the default environment is the Z rotation. Sorry, your browser doesn't support embedded videos. When using custom environment directions set in setSpatialEnvironment, the rotation is defined to always rotate about the relevant axis according to the left handed curl rule. In the animations above you can see, for the y-axis rotation, if you curl your left hand up around with your thumb pointing down the +y axis, the direction the participant will rotate is in the direction the fingers are curling around the given axis. You can see the rotation arrows in those reference animations which correspond to positive rotation direction are pointing the same direction as the fingers of the curled left hand. When a direction contains rotations around more than one axis, the rotations are applied in a defined order: yaw, pitch, and then roll. With the standard environment, this corresponds to y, x, and then z. When using custom environment directions, the directions are always in the order of yaw/pitch/roll, but which (x,y,z) axis those correspond to is different. Properties \u00b6 Name Summary x [Android] val x : Double The Euler rotation about the x-axis, in degrees. y [Android] val y : Double The Euler rotation about the y-axis, in degrees. z [Android] val z : Double The Euler rotation about the z-axis, in degrees.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.spatialisation/-spatial-direction/#spatialdirection","text":"[Android] open class SpatialDirection The SpatialDirection model defines the direction a participant is facing. The model is specified as a set of three Euler rotations about the corresponding axis in the order of z-x-y: The following properties define a rotation about the specified positive axis: x : A rotation about the x-axis y : A rotation about the y-axis z : A rotation about the z-axis These properties correspond to yaw, pitch, and roll: Yaw: A rotation about the up axis, where the default environment is the Y rotation Sorry, your browser doesn't support embedded videos. Pitch: A rotation about the right axis, where the default environment is the X rotation. Sorry, your browser doesn't support embedded videos. Roll: A rotation about the forward axis, where the default environment is the Z rotation. Sorry, your browser doesn't support embedded videos. When using custom environment directions set in setSpatialEnvironment, the rotation is defined to always rotate about the relevant axis according to the left handed curl rule. In the animations above you can see, for the y-axis rotation, if you curl your left hand up around with your thumb pointing down the +y axis, the direction the participant will rotate is in the direction the fingers are curling around the given axis. You can see the rotation arrows in those reference animations which correspond to positive rotation direction are pointing the same direction as the fingers of the curled left hand. When a direction contains rotations around more than one axis, the rotations are applied in a defined order: yaw, pitch, and then roll. With the standard environment, this corresponds to y, x, and then z. When using custom environment directions, the directions are always in the order of yaw/pitch/roll, but which (x,y,z) axis those correspond to is different.","title":"SpatialDirection"},{"location":"android-reference/sdk/com.voxeet.android.media.spatialisation/-spatial-direction/#properties","text":"Name Summary x [Android] val x : Double The Euler rotation about the x-axis, in degrees. y [Android] val y : Double The Euler rotation about the y-axis, in degrees. z [Android] val z : Double The Euler rotation about the z-axis, in degrees.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.android.media.spatialisation/-spatial-direction/x/","text":"// sdk / com.voxeet.android.media.spatialisation / SpatialDirection / x x \u00b6 [Android] val x : Double The Euler rotation about the x-axis, in degrees.","title":"X"},{"location":"android-reference/sdk/com.voxeet.android.media.spatialisation/-spatial-direction/x/#x","text":"[Android] val x : Double The Euler rotation about the x-axis, in degrees.","title":"x"},{"location":"android-reference/sdk/com.voxeet.android.media.spatialisation/-spatial-direction/y/","text":"// sdk / com.voxeet.android.media.spatialisation / SpatialDirection / y y \u00b6 [Android] val y : Double The Euler rotation about the y-axis, in degrees.","title":"Y"},{"location":"android-reference/sdk/com.voxeet.android.media.spatialisation/-spatial-direction/y/#y","text":"[Android] val y : Double The Euler rotation about the y-axis, in degrees.","title":"y"},{"location":"android-reference/sdk/com.voxeet.android.media.spatialisation/-spatial-direction/z/","text":"// sdk / com.voxeet.android.media.spatialisation / SpatialDirection / z z \u00b6 [Android] val z : Double The Euler rotation about the z-axis, in degrees.","title":"Z"},{"location":"android-reference/sdk/com.voxeet.android.media.spatialisation/-spatial-direction/z/#z","text":"[Android] val z : Double The Euler rotation about the z-axis, in degrees.","title":"z"},{"location":"android-reference/sdk/com.voxeet.android.media.spatialisation/-spatial-position/","text":"// sdk / com.voxeet.android.media.spatialisation / SpatialPosition SpatialPosition \u00b6 [Android] open class SpatialPosition The SpatialPosition model represents a participant's audio position. The position is defined using Cartesian coordinates. You can define the direction of each axis in the coordinate system using the setspatialenvironment method. By default, the environment consists of the following axes: X-axis: Extends positive to the right Y-axis: Extends positive upwards Z-axis: Extends positive forwards The setspatialenvironment method allows the application to choose the meaning of each axis and match the usage of the application. Properties \u00b6 Name Summary x [Android] val x : Double The x-coordinate of a new audio location. y [Android] val y : Double The y-coordinate of a new audio location. z [Android] val z : Double The z-coordinate of a new audio location.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.spatialisation/-spatial-position/#spatialposition","text":"[Android] open class SpatialPosition The SpatialPosition model represents a participant's audio position. The position is defined using Cartesian coordinates. You can define the direction of each axis in the coordinate system using the setspatialenvironment method. By default, the environment consists of the following axes: X-axis: Extends positive to the right Y-axis: Extends positive upwards Z-axis: Extends positive forwards The setspatialenvironment method allows the application to choose the meaning of each axis and match the usage of the application.","title":"SpatialPosition"},{"location":"android-reference/sdk/com.voxeet.android.media.spatialisation/-spatial-position/#properties","text":"Name Summary x [Android] val x : Double The x-coordinate of a new audio location. y [Android] val y : Double The y-coordinate of a new audio location. z [Android] val z : Double The z-coordinate of a new audio location.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.android.media.spatialisation/-spatial-position/x/","text":"// sdk / com.voxeet.android.media.spatialisation / SpatialPosition / x x \u00b6 [Android] val x : Double The x-coordinate of a new audio location.","title":"X"},{"location":"android-reference/sdk/com.voxeet.android.media.spatialisation/-spatial-position/x/#x","text":"[Android] val x : Double The x-coordinate of a new audio location.","title":"x"},{"location":"android-reference/sdk/com.voxeet.android.media.spatialisation/-spatial-position/y/","text":"// sdk / com.voxeet.android.media.spatialisation / SpatialPosition / y y \u00b6 [Android] val y : Double The y-coordinate of a new audio location.","title":"Y"},{"location":"android-reference/sdk/com.voxeet.android.media.spatialisation/-spatial-position/y/#y","text":"[Android] val y : Double The y-coordinate of a new audio location.","title":"y"},{"location":"android-reference/sdk/com.voxeet.android.media.spatialisation/-spatial-position/z/","text":"// sdk / com.voxeet.android.media.spatialisation / SpatialPosition / z z \u00b6 [Android] val z : Double The z-coordinate of a new audio location.","title":"Z"},{"location":"android-reference/sdk/com.voxeet.android.media.spatialisation/-spatial-position/z/#z","text":"[Android] val z : Double The z-coordinate of a new audio location.","title":"z"},{"location":"android-reference/sdk/com.voxeet.android.media.spatialisation/-spatial-scale/","text":"// sdk / com.voxeet.android.media.spatialisation / SpatialScale SpatialScale \u00b6 [Android] open class SpatialScale The SpatialScale model defines how to convert units from the application's coordinate system (pixels or centimeters) into meters used by the spatial audio coordinate system. For example, let's assume that SpatialScale is set to (100,100,100), which indicates that 100 of the applications units (cm) map to 1 meter for the audio coordinates. If the listener's location is (0,0,0)cm and a remote participant's location is (200,200,200)cm, the listener has an impression of hearing the remote participant from the (2,2,2)m location. Note : A scale value must have a value greater than zero. The default is (1,1,1). Properties \u00b6 Name Summary x [Android] val x : Double The x component of the SpatialScale vector. y [Android] val y : Double The y component of the SpatialScale vector. z [Android] val z : Double The z component of the SpatialScale vector.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.spatialisation/-spatial-scale/#spatialscale","text":"[Android] open class SpatialScale The SpatialScale model defines how to convert units from the application's coordinate system (pixels or centimeters) into meters used by the spatial audio coordinate system. For example, let's assume that SpatialScale is set to (100,100,100), which indicates that 100 of the applications units (cm) map to 1 meter for the audio coordinates. If the listener's location is (0,0,0)cm and a remote participant's location is (200,200,200)cm, the listener has an impression of hearing the remote participant from the (2,2,2)m location. Note : A scale value must have a value greater than zero. The default is (1,1,1).","title":"SpatialScale"},{"location":"android-reference/sdk/com.voxeet.android.media.spatialisation/-spatial-scale/#properties","text":"Name Summary x [Android] val x : Double The x component of the SpatialScale vector. y [Android] val y : Double The y component of the SpatialScale vector. z [Android] val z : Double The z component of the SpatialScale vector.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.android.media.spatialisation/-spatial-scale/x/","text":"// sdk / com.voxeet.android.media.spatialisation / SpatialScale / x x \u00b6 [Android] val x : Double The x component of the SpatialScale vector.","title":"X"},{"location":"android-reference/sdk/com.voxeet.android.media.spatialisation/-spatial-scale/x/#x","text":"[Android] val x : Double The x component of the SpatialScale vector.","title":"x"},{"location":"android-reference/sdk/com.voxeet.android.media.spatialisation/-spatial-scale/y/","text":"// sdk / com.voxeet.android.media.spatialisation / SpatialScale / y y \u00b6 [Android] val y : Double The y component of the SpatialScale vector.","title":"Y"},{"location":"android-reference/sdk/com.voxeet.android.media.spatialisation/-spatial-scale/y/#y","text":"[Android] val y : Double The y component of the SpatialScale vector.","title":"y"},{"location":"android-reference/sdk/com.voxeet.android.media.spatialisation/-spatial-scale/z/","text":"// sdk / com.voxeet.android.media.spatialisation / SpatialScale / z z \u00b6 [Android] val z : Double The z component of the SpatialScale vector.","title":"Z"},{"location":"android-reference/sdk/com.voxeet.android.media.spatialisation/-spatial-scale/z/#z","text":"[Android] val z : Double The z component of the SpatialScale vector.","title":"z"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/","text":"// sdk / com.voxeet.android.media.stream Package-level declarations \u00b6 Types \u00b6 Name Summary LocalInputAudioCallback [Android] interface LocalInputAudioCallback The LocalInputAudioCallback model receives audio samples from a conference whenever the samples are sent. LocalInputAudioProcessor [Android] interface LocalInputAudioProcessor The LocalInputAudioCallback model receives audio samples from a conference whenever the samples are sent. LocalInputAudioSamples [Android] open class LocalInputAudioSamples The LocalInputAudioSamples model contains information about audio captured by the local participant's microphone. MediaStreamType [Android] enum MediaStreamType The MediaStreamType model gathers types of media streams.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/#types","text":"Name Summary LocalInputAudioCallback [Android] interface LocalInputAudioCallback The LocalInputAudioCallback model receives audio samples from a conference whenever the samples are sent. LocalInputAudioProcessor [Android] interface LocalInputAudioProcessor The LocalInputAudioCallback model receives audio samples from a conference whenever the samples are sent. LocalInputAudioSamples [Android] open class LocalInputAudioSamples The LocalInputAudioSamples model contains information about audio captured by the local participant's microphone. MediaStreamType [Android] enum MediaStreamType The MediaStreamType model gathers types of media streams.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-local-input-audio-callback/","text":"// sdk / com.voxeet.android.media.stream / LocalInputAudioCallback LocalInputAudioCallback \u00b6 [Android] interface LocalInputAudioCallback The LocalInputAudioCallback model receives audio samples from a conference whenever the samples are sent. Functions \u00b6 Name Summary onSample [Android] abstract fun onSample (sample: LocalInputAudioSamples ) Called when a new set of input samples is ready to to be processed.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-local-input-audio-callback/#localinputaudiocallback","text":"[Android] interface LocalInputAudioCallback The LocalInputAudioCallback model receives audio samples from a conference whenever the samples are sent.","title":"LocalInputAudioCallback"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-local-input-audio-callback/#functions","text":"Name Summary onSample [Android] abstract fun onSample (sample: LocalInputAudioSamples ) Called when a new set of input samples is ready to to be processed.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-local-input-audio-callback/on-sample/","text":"// sdk / com.voxeet.android.media.stream / LocalInputAudioCallback / onSample onSample \u00b6 [Android] abstract fun onSample (sample: LocalInputAudioSamples ) Called when a new set of input samples is ready to to be processed. Parameters \u00b6 Android sample The input audio sample.","title":"On sample"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-local-input-audio-callback/on-sample/#onsample","text":"[Android] abstract fun onSample (sample: LocalInputAudioSamples ) Called when a new set of input samples is ready to to be processed.","title":"onSample"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-local-input-audio-callback/on-sample/#parameters","text":"Android sample The input audio sample.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-local-input-audio-processor/","text":"// sdk / com.voxeet.android.media.stream / LocalInputAudioProcessor LocalInputAudioProcessor \u00b6 [Android] interface LocalInputAudioProcessor The LocalInputAudioCallback model receives audio samples from a conference whenever the samples are sent. Functions \u00b6 Name Summary onSample [Android] @ NonNull abstract fun onSample (@ NonNull sample: LocalInputAudioSamples ): Array < Byte > Called when a new set of input samples is ready to to be processed.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-local-input-audio-processor/#localinputaudioprocessor","text":"[Android] interface LocalInputAudioProcessor The LocalInputAudioCallback model receives audio samples from a conference whenever the samples are sent.","title":"LocalInputAudioProcessor"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-local-input-audio-processor/#functions","text":"Name Summary onSample [Android] @ NonNull abstract fun onSample (@ NonNull sample: LocalInputAudioSamples ): Array < Byte > Called when a new set of input samples is ready to to be processed.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-local-input-audio-processor/on-sample/","text":"// sdk / com.voxeet.android.media.stream / LocalInputAudioProcessor / onSample onSample \u00b6 [Android] @ NonNull abstract fun onSample (@ NonNull sample: LocalInputAudioSamples ): Array < Byte > Called when a new set of input samples is ready to to be processed. Parameters \u00b6 Android sample The input audio sample.","title":"On sample"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-local-input-audio-processor/on-sample/#onsample","text":"[Android] @ NonNull abstract fun onSample (@ NonNull sample: LocalInputAudioSamples ): Array < Byte > Called when a new set of input samples is ready to to be processed.","title":"onSample"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-local-input-audio-processor/on-sample/#parameters","text":"Android sample The input audio sample.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-local-input-audio-samples/","text":"// sdk / com.voxeet.android.media.stream / LocalInputAudioSamples LocalInputAudioSamples \u00b6 [Android] open class LocalInputAudioSamples The LocalInputAudioSamples model contains information about audio captured by the local participant's microphone. Constructors \u00b6 LocalInputAudioSamples [Android] open fun LocalInputAudioSamples (audioFormat: Int , channelCount: Int , sampleRate: Int , @ NonNull data: Array < Byte >) Class constructor. Properties \u00b6 Name Summary audioFormat [Android] val audioFormat : Int See getAudioFormat channelCount [Android] val channelCount : Int See getChannelCount data [Android] @ NonNull @get: NonNull val data : Array < Byte > sampleRate [Android] val sampleRate : Int See getSampleRate","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-local-input-audio-samples/#localinputaudiosamples","text":"[Android] open class LocalInputAudioSamples The LocalInputAudioSamples model contains information about audio captured by the local participant's microphone.","title":"LocalInputAudioSamples"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-local-input-audio-samples/#constructors","text":"LocalInputAudioSamples [Android] open fun LocalInputAudioSamples (audioFormat: Int , channelCount: Int , sampleRate: Int , @ NonNull data: Array < Byte >) Class constructor.","title":"Constructors"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-local-input-audio-samples/#properties","text":"Name Summary audioFormat [Android] val audioFormat : Int See getAudioFormat channelCount [Android] val channelCount : Int See getChannelCount data [Android] @ NonNull @get: NonNull val data : Array < Byte > sampleRate [Android] val sampleRate : Int See getSampleRate","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-local-input-audio-samples/-local-input-audio-samples/","text":"// sdk / com.voxeet.android.media.stream / LocalInputAudioSamples / LocalInputAudioSamples LocalInputAudioSamples \u00b6 [Android] open fun LocalInputAudioSamples (audioFormat: Int , channelCount: Int , sampleRate: Int , @ NonNull data: Array < Byte >) Class constructor. Parameters \u00b6 Android audioFormat The audio format of an audio stream. channelCount The configured number of channels. sampleRate The configured audio sink sample rate in Hz. data The sample audio data.","title":" local input audio samples"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-local-input-audio-samples/-local-input-audio-samples/#localinputaudiosamples","text":"[Android] open fun LocalInputAudioSamples (audioFormat: Int , channelCount: Int , sampleRate: Int , @ NonNull data: Array < Byte >) Class constructor.","title":"LocalInputAudioSamples"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-local-input-audio-samples/-local-input-audio-samples/#parameters","text":"Android audioFormat The audio format of an audio stream. channelCount The configured number of channels. sampleRate The configured audio sink sample rate in Hz. data The sample audio data.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-local-input-audio-samples/audio-format/","text":"// sdk / com.voxeet.android.media.stream / LocalInputAudioSamples / audioFormat audioFormat \u00b6 [Android] val audioFormat : Int See getAudioFormat","title":"Audio format"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-local-input-audio-samples/audio-format/#audioformat","text":"[Android] val audioFormat : Int See getAudioFormat","title":"audioFormat"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-local-input-audio-samples/channel-count/","text":"// sdk / com.voxeet.android.media.stream / LocalInputAudioSamples / channelCount channelCount \u00b6 [Android] val channelCount : Int See getChannelCount","title":"Channel count"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-local-input-audio-samples/channel-count/#channelcount","text":"[Android] val channelCount : Int See getChannelCount","title":"channelCount"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-local-input-audio-samples/data/","text":"// sdk / com.voxeet.android.media.stream / LocalInputAudioSamples / data data \u00b6 [Android] @ NonNull @get: NonNull val data : Array < Byte >","title":"Data"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-local-input-audio-samples/data/#data","text":"[Android] @ NonNull @get: NonNull val data : Array < Byte >","title":"data"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-local-input-audio-samples/sample-rate/","text":"// sdk / com.voxeet.android.media.stream / LocalInputAudioSamples / sampleRate sampleRate \u00b6 [Android] val sampleRate : Int See getSampleRate","title":"Sample rate"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-local-input-audio-samples/sample-rate/#samplerate","text":"[Android] val sampleRate : Int See getSampleRate","title":"sampleRate"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-media-stream-type/","text":"// sdk / com.voxeet.android.media.stream / MediaStreamType MediaStreamType \u00b6 [Android] enum MediaStreamType The MediaStreamType model gathers types of media streams. Entries \u00b6 Camera [Android] Camera The media stream produced by a participant's camera. ScreenShare [Android] ScreenShare The media stream produced by ScreenShareService. Functions \u00b6 Name Summary valueOf [Android] open fun valueOf (name: String ): MediaStreamType Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < MediaStreamType > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-media-stream-type/#mediastreamtype","text":"[Android] enum MediaStreamType The MediaStreamType model gathers types of media streams.","title":"MediaStreamType"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-media-stream-type/#entries","text":"Camera [Android] Camera The media stream produced by a participant's camera. ScreenShare [Android] ScreenShare The media stream produced by ScreenShareService.","title":"Entries"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-media-stream-type/#functions","text":"Name Summary valueOf [Android] open fun valueOf (name: String ): MediaStreamType Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < MediaStreamType > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-media-stream-type/value-of/","text":"// sdk / com.voxeet.android.media.stream / MediaStreamType / valueOf valueOf \u00b6 [Android] open fun valueOf (name: String ): MediaStreamType Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) Return \u00b6 the enum constant with the specified name Throws \u00b6 IllegalArgumentException if this enum type has no constant with the specified name","title":"Value of"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-media-stream-type/value-of/#valueof","text":"[Android] open fun valueOf (name: String ): MediaStreamType Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)","title":"valueOf"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-media-stream-type/value-of/#return","text":"the enum constant with the specified name","title":"Return"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-media-stream-type/value-of/#throws","text":"IllegalArgumentException if this enum type has no constant with the specified name","title":"Throws"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-media-stream-type/values/","text":"// sdk / com.voxeet.android.media.stream / MediaStreamType / values values \u00b6 [Android] open fun values (): Array < MediaStreamType > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants. Return \u00b6 an array containing the constants of this enum type, in the order they're declared","title":"Values"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-media-stream-type/values/#values","text":"[Android] open fun values (): Array < MediaStreamType > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants.","title":"values"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-media-stream-type/values/#return","text":"an array containing the constants of this enum type, in the order they're declared","title":"Return"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-media-stream-type/-camera/","text":"// sdk / com.voxeet.android.media.stream / MediaStreamType / Camera Camera \u00b6 [Android] Camera The media stream produced by a participant's camera.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-media-stream-type/-camera/#camera","text":"[Android] Camera The media stream produced by a participant's camera.","title":"Camera"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-media-stream-type/-screen-share/","text":"// sdk / com.voxeet.android.media.stream / MediaStreamType / ScreenShare ScreenShare \u00b6 [Android] ScreenShare The media stream produced by ScreenShareService.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.stream/-media-stream-type/-screen-share/#screenshare","text":"[Android] ScreenShare The media stream produced by ScreenShareService.","title":"ScreenShare"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/","text":"// sdk / com.voxeet.android.media.utils Package-level declarations \u00b6 Types \u00b6 Name Summary ComfortNoiseLevel [Android] enum ComfortNoiseLevel The ComfortNoiseLevel model represents the possible comfort noise levels in Dolby Voice conferences. VideoCapturerBundle [Android] class VideoCapturerBundle The VideoCapturerBundle model is an interface that is responsible for providing the VideoCapturer and constraints from a provider to the MediaEngine. VideoCapturerProvider [Android] abstract class VideoCapturerProvider The VideoCapturerProvider model is an interface responsible for providing VideoCapturer on demand for the Media Engine.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/#types","text":"Name Summary ComfortNoiseLevel [Android] enum ComfortNoiseLevel The ComfortNoiseLevel model represents the possible comfort noise levels in Dolby Voice conferences. VideoCapturerBundle [Android] class VideoCapturerBundle The VideoCapturerBundle model is an interface that is responsible for providing the VideoCapturer and constraints from a provider to the MediaEngine. VideoCapturerProvider [Android] abstract class VideoCapturerProvider The VideoCapturerProvider model is an interface responsible for providing VideoCapturer on demand for the Media Engine.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-comfort-noise-level/","text":"// sdk / com.voxeet.android.media.utils / ComfortNoiseLevel ComfortNoiseLevel \u00b6 [Android] enum ComfortNoiseLevel The ComfortNoiseLevel model represents the possible comfort noise levels in Dolby Voice conferences. The offered levels allow customizing the comfort noise intensity. You can either use the default level that is based on the device database or choose the medium or low level if you wish to change the comfort noise intensity. The model also allows disabling the comfort noise completely. The following levels are available: Entries \u00b6 DEFAULT [Android] DEFAULT The default comfort noise level that is based on the device database. The database includes the proper comfort noise levels, individual for all devices. MEDIUM [Android] MEDIUM The medium comfort noise level. LOW [Android] LOW The low comfort noise level. OFF [Android] OFF The disabled comfort noise. Functions \u00b6 Name Summary valueOf [Android] open fun valueOf (name: String ): ComfortNoiseLevel Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < ComfortNoiseLevel > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-comfort-noise-level/#comfortnoiselevel","text":"[Android] enum ComfortNoiseLevel The ComfortNoiseLevel model represents the possible comfort noise levels in Dolby Voice conferences. The offered levels allow customizing the comfort noise intensity. You can either use the default level that is based on the device database or choose the medium or low level if you wish to change the comfort noise intensity. The model also allows disabling the comfort noise completely. The following levels are available:","title":"ComfortNoiseLevel"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-comfort-noise-level/#entries","text":"DEFAULT [Android] DEFAULT The default comfort noise level that is based on the device database. The database includes the proper comfort noise levels, individual for all devices. MEDIUM [Android] MEDIUM The medium comfort noise level. LOW [Android] LOW The low comfort noise level. OFF [Android] OFF The disabled comfort noise.","title":"Entries"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-comfort-noise-level/#functions","text":"Name Summary valueOf [Android] open fun valueOf (name: String ): ComfortNoiseLevel Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < ComfortNoiseLevel > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-comfort-noise-level/value-of/","text":"// sdk / com.voxeet.android.media.utils / ComfortNoiseLevel / valueOf valueOf \u00b6 [Android] open fun valueOf (name: String ): ComfortNoiseLevel Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) Return \u00b6 the enum constant with the specified name Throws \u00b6 IllegalArgumentException if this enum type has no constant with the specified name","title":"Value of"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-comfort-noise-level/value-of/#valueof","text":"[Android] open fun valueOf (name: String ): ComfortNoiseLevel Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)","title":"valueOf"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-comfort-noise-level/value-of/#return","text":"the enum constant with the specified name","title":"Return"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-comfort-noise-level/value-of/#throws","text":"IllegalArgumentException if this enum type has no constant with the specified name","title":"Throws"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-comfort-noise-level/values/","text":"// sdk / com.voxeet.android.media.utils / ComfortNoiseLevel / values values \u00b6 [Android] open fun values (): Array < ComfortNoiseLevel > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants. Return \u00b6 an array containing the constants of this enum type, in the order they're declared","title":"Values"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-comfort-noise-level/values/#values","text":"[Android] open fun values (): Array < ComfortNoiseLevel > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants.","title":"values"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-comfort-noise-level/values/#return","text":"an array containing the constants of this enum type, in the order they're declared","title":"Return"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-comfort-noise-level/-d-e-f-a-u-l-t/","text":"// sdk / com.voxeet.android.media.utils / ComfortNoiseLevel / DEFAULT DEFAULT \u00b6 [Android] DEFAULT The default comfort noise level that is based on the device database. The database includes the proper comfort noise levels, individual for all devices.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-comfort-noise-level/-d-e-f-a-u-l-t/#default","text":"[Android] DEFAULT The default comfort noise level that is based on the device database. The database includes the proper comfort noise levels, individual for all devices.","title":"DEFAULT"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-comfort-noise-level/-l-o-w/","text":"// sdk / com.voxeet.android.media.utils / ComfortNoiseLevel / LOW LOW \u00b6 [Android] LOW The low comfort noise level.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-comfort-noise-level/-l-o-w/#low","text":"[Android] LOW The low comfort noise level.","title":"LOW"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-comfort-noise-level/-m-e-d-i-u-m/","text":"// sdk / com.voxeet.android.media.utils / ComfortNoiseLevel / MEDIUM MEDIUM \u00b6 [Android] MEDIUM The medium comfort noise level.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-comfort-noise-level/-m-e-d-i-u-m/#medium","text":"[Android] MEDIUM The medium comfort noise level.","title":"MEDIUM"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-comfort-noise-level/-o-f-f/","text":"// sdk / com.voxeet.android.media.utils / ComfortNoiseLevel / OFF OFF \u00b6 [Android] OFF The disabled comfort noise.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-comfort-noise-level/-o-f-f/#off","text":"[Android] OFF The disabled comfort noise.","title":"OFF"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-bundle/","text":"// sdk / com.voxeet.android.media.utils / VideoCapturerBundle VideoCapturerBundle \u00b6 [Android] class VideoCapturerBundle The VideoCapturerBundle model is an interface that is responsible for providing the VideoCapturer and constraints from a provider to the MediaEngine. Constructors \u00b6 VideoCapturerBundle [Android] open fun VideoCapturerBundle (@ Nullable capturer: CameraVideoCapturer, width: Int , height: Int , frameRate: Int ) Constructs a bundle from the existing objects. Properties \u00b6 Name Summary frameRate [Android] open var frameRate : Int The requested frame rate. height [Android] open var height : Int The requested height. videoCapturer [Android] @ Nullable open var videoCapturer : VideoCapturer The requested VideoCapturer instance or a null value. width [Android] open var width : Int The requested width.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-bundle/#videocapturerbundle","text":"[Android] class VideoCapturerBundle The VideoCapturerBundle model is an interface that is responsible for providing the VideoCapturer and constraints from a provider to the MediaEngine.","title":"VideoCapturerBundle"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-bundle/#constructors","text":"VideoCapturerBundle [Android] open fun VideoCapturerBundle (@ Nullable capturer: CameraVideoCapturer, width: Int , height: Int , frameRate: Int ) Constructs a bundle from the existing objects.","title":"Constructors"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-bundle/#properties","text":"Name Summary frameRate [Android] open var frameRate : Int The requested frame rate. height [Android] open var height : Int The requested height. videoCapturer [Android] @ Nullable open var videoCapturer : VideoCapturer The requested VideoCapturer instance or a null value. width [Android] open var width : Int The requested width.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-bundle/-video-capturer-bundle/","text":"// sdk / com.voxeet.android.media.utils / VideoCapturerBundle / VideoCapturerBundle VideoCapturerBundle \u00b6 [Android] open fun VideoCapturerBundle (@ Nullable capturer: CameraVideoCapturer, width: Int , height: Int , frameRate: Int ) Constructs a bundle from the existing objects. Parameters \u00b6 Android capturer video capturer created. A null value indicates an issue. width The requested width. height The requested height. frameRate The requested frame rate.","title":" video capturer bundle"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-bundle/-video-capturer-bundle/#videocapturerbundle","text":"[Android] open fun VideoCapturerBundle (@ Nullable capturer: CameraVideoCapturer, width: Int , height: Int , frameRate: Int ) Constructs a bundle from the existing objects.","title":"VideoCapturerBundle"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-bundle/-video-capturer-bundle/#parameters","text":"Android capturer video capturer created. A null value indicates an issue. width The requested width. height The requested height. frameRate The requested frame rate.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-bundle/frame-rate/","text":"// sdk / com.voxeet.android.media.utils / VideoCapturerBundle / frameRate frameRate \u00b6 [Android] open var frameRate : Int The requested frame rate.","title":"Frame rate"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-bundle/frame-rate/#framerate","text":"[Android] open var frameRate : Int The requested frame rate.","title":"frameRate"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-bundle/height/","text":"// sdk / com.voxeet.android.media.utils / VideoCapturerBundle / height height \u00b6 [Android] open var height : Int The requested height.","title":"Height"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-bundle/height/#height","text":"[Android] open var height : Int The requested height.","title":"height"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-bundle/video-capturer/","text":"// sdk / com.voxeet.android.media.utils / VideoCapturerBundle / videoCapturer videoCapturer \u00b6 [Android] @ Nullable open var videoCapturer : VideoCapturer The requested VideoCapturer instance or a null value.","title":"Video capturer"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-bundle/video-capturer/#videocapturer","text":"[Android] @ Nullable open var videoCapturer : VideoCapturer The requested VideoCapturer instance or a null value.","title":"videoCapturer"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-bundle/width/","text":"// sdk / com.voxeet.android.media.utils / VideoCapturerBundle / width width \u00b6 [Android] open var width : Int The requested width.","title":"Width"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-bundle/width/#width","text":"[Android] open var width : Int The requested width.","title":"width"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-provider/","text":"// sdk / com.voxeet.android.media.utils / VideoCapturerProvider VideoCapturerProvider \u00b6 [Android] abstract class VideoCapturerProvider The VideoCapturerProvider model is an interface responsible for providing VideoCapturer on demand for the Media Engine. Implements are responsible of tracking the capturers that they send to the engine. The SDK does not manage the switch when a switchable capturer is provided. The switch needs to be managed by the provider. Types \u00b6 Name Summary Constraints [Android] open class Constraints Represents contraints to pass to the provider Functions \u00b6 Name Summary changeCaptureFormat [Android] abstract fun changeCaptureFormat (width: Int , height: Int , frameRate: Int ): Boolean Changes the capture format for the currently opened VideoCapturer instance. clear [Android] abstract fun clear () Releases locks on objects. createVideoCapturer [Android] @ Nullable abstract fun createVideoCapturer (@ Nullable optionalName: String ): VideoCapturerBundle Creates the VideoCapturer. getCurrentCapturerName [Android] abstract fun getCurrentCapturerName (): String Get the name of current capturer provider. onVideoCapturerDisposed [Android] @ NonNull abstract fun onVideoCapturerDisposed (@ NonNull videoCapturer: VideoCapturer) Callback called from the MediaEngine to indicate the given VideoCapturer has been stopped.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-provider/#videocapturerprovider","text":"[Android] abstract class VideoCapturerProvider The VideoCapturerProvider model is an interface responsible for providing VideoCapturer on demand for the Media Engine. Implements are responsible of tracking the capturers that they send to the engine. The SDK does not manage the switch when a switchable capturer is provided. The switch needs to be managed by the provider.","title":"VideoCapturerProvider"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-provider/#types","text":"Name Summary Constraints [Android] open class Constraints Represents contraints to pass to the provider","title":"Types"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-provider/#functions","text":"Name Summary changeCaptureFormat [Android] abstract fun changeCaptureFormat (width: Int , height: Int , frameRate: Int ): Boolean Changes the capture format for the currently opened VideoCapturer instance. clear [Android] abstract fun clear () Releases locks on objects. createVideoCapturer [Android] @ Nullable abstract fun createVideoCapturer (@ Nullable optionalName: String ): VideoCapturerBundle Creates the VideoCapturer. getCurrentCapturerName [Android] abstract fun getCurrentCapturerName (): String Get the name of current capturer provider. onVideoCapturerDisposed [Android] @ NonNull abstract fun onVideoCapturerDisposed (@ NonNull videoCapturer: VideoCapturer) Callback called from the MediaEngine to indicate the given VideoCapturer has been stopped.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-provider/change-capture-format/","text":"// sdk / com.voxeet.android.media.utils / VideoCapturerProvider / changeCaptureFormat changeCaptureFormat \u00b6 [Android] abstract fun changeCaptureFormat (width: Int , height: Int , frameRate: Int ): Boolean Changes the capture format for the currently opened VideoCapturer instance. Return \u00b6 The flag indicating whether the call is successful. Parameters \u00b6 Android width The requested width. height The requested height. frameRate The requested frame rate.","title":"Change capture format"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-provider/change-capture-format/#changecaptureformat","text":"[Android] abstract fun changeCaptureFormat (width: Int , height: Int , frameRate: Int ): Boolean Changes the capture format for the currently opened VideoCapturer instance.","title":"changeCaptureFormat"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-provider/change-capture-format/#return","text":"The flag indicating whether the call is successful.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-provider/change-capture-format/#parameters","text":"Android width The requested width. height The requested height. frameRate The requested frame rate.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-provider/clear/","text":"// sdk / com.voxeet.android.media.utils / VideoCapturerProvider / clear clear \u00b6 [Android] abstract fun clear () Releases locks on objects.","title":"Clear"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-provider/clear/#clear","text":"[Android] abstract fun clear () Releases locks on objects.","title":"clear"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-provider/create-video-capturer/","text":"// sdk / com.voxeet.android.media.utils / VideoCapturerProvider / createVideoCapturer createVideoCapturer \u00b6 [Android] @ Nullable abstract fun createVideoCapturer (@ Nullable optionalName: String ): VideoCapturerBundle Creates the VideoCapturer. Return \u00b6 the VideoCapturerBundle or a null value that cancels the capturer creation. Parameters \u00b6 Android optionalName the optional name of the VideoCapturer","title":"Create video capturer"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-provider/create-video-capturer/#createvideocapturer","text":"[Android] @ Nullable abstract fun createVideoCapturer (@ Nullable optionalName: String ): VideoCapturerBundle Creates the VideoCapturer.","title":"createVideoCapturer"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-provider/create-video-capturer/#return","text":"the VideoCapturerBundle or a null value that cancels the capturer creation.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-provider/create-video-capturer/#parameters","text":"Android optionalName the optional name of the VideoCapturer","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-provider/get-current-capturer-name/","text":"// sdk / com.voxeet.android.media.utils / VideoCapturerProvider / getCurrentCapturerName getCurrentCapturerName \u00b6 [Android] abstract fun getCurrentCapturerName (): String Get the name of current capturer provider. Return \u00b6 The name of the current capturer provider.","title":"Get current capturer name"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-provider/get-current-capturer-name/#getcurrentcapturername","text":"[Android] abstract fun getCurrentCapturerName (): String Get the name of current capturer provider.","title":"getCurrentCapturerName"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-provider/get-current-capturer-name/#return","text":"The name of the current capturer provider.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-provider/on-video-capturer-disposed/","text":"// sdk / com.voxeet.android.media.utils / VideoCapturerProvider / onVideoCapturerDisposed onVideoCapturerDisposed \u00b6 [Android] @ NonNull abstract fun onVideoCapturerDisposed (@ NonNull videoCapturer: VideoCapturer) Callback called from the MediaEngine to indicate the given VideoCapturer has been stopped. Parameters \u00b6 Android videoCapturer stopped instance.","title":"On video capturer disposed"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-provider/on-video-capturer-disposed/#onvideocapturerdisposed","text":"[Android] @ NonNull abstract fun onVideoCapturerDisposed (@ NonNull videoCapturer: VideoCapturer) Callback called from the MediaEngine to indicate the given VideoCapturer has been stopped.","title":"onVideoCapturerDisposed"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-provider/on-video-capturer-disposed/#parameters","text":"Android videoCapturer stopped instance.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-provider/-constraints/","text":"// sdk / com.voxeet.android.media.utils / VideoCapturerProvider / Constraints Constraints \u00b6 [Android] open class Constraints Represents contraints to pass to the provider","title":"Index"},{"location":"android-reference/sdk/com.voxeet.android.media.utils/-video-capturer-provider/-constraints/#constraints","text":"[Android] open class Constraints Represents contraints to pass to the provider","title":"Constraints"},{"location":"android-reference/sdk/com.voxeet.sdk.authent.token/","text":"// sdk / com.voxeet.sdk.authent.token Package-level declarations \u00b6 Types \u00b6 Name Summary RefreshTokenCallback [Android] interface RefreshTokenCallback The RefreshTokenCallback model is responsible for refreshing the conference access token.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.authent.token/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.authent.token/#types","text":"Name Summary RefreshTokenCallback [Android] interface RefreshTokenCallback The RefreshTokenCallback model is responsible for refreshing the conference access token.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.authent.token/-refresh-token-callback/","text":"// sdk / com.voxeet.sdk.authent.token / RefreshTokenCallback RefreshTokenCallback \u00b6 [Android] interface RefreshTokenCallback The RefreshTokenCallback model is responsible for refreshing the conference access token. Functions \u00b6 Name Summary onRequired [Android] abstract fun onRequired (is_expired: Boolean , @ NonNull callback: TokenCallback) A callback that returns a promise when the conference access token needs to be refreshed.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.authent.token/-refresh-token-callback/#refreshtokencallback","text":"[Android] interface RefreshTokenCallback The RefreshTokenCallback model is responsible for refreshing the conference access token.","title":"RefreshTokenCallback"},{"location":"android-reference/sdk/com.voxeet.sdk.authent.token/-refresh-token-callback/#functions","text":"Name Summary onRequired [Android] abstract fun onRequired (is_expired: Boolean , @ NonNull callback: TokenCallback) A callback that returns a promise when the conference access token needs to be refreshed.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.authent.token/-refresh-token-callback/on-required/","text":"// sdk / com.voxeet.sdk.authent.token / RefreshTokenCallback / onRequired onRequired \u00b6 [Android] abstract fun onRequired (is_expired: Boolean , @ NonNull callback: TokenCallback) A callback that returns a promise when the conference access token needs to be refreshed. Parameters \u00b6 Android is_expired A boolean value that informs whether the previous conference access token has expired. This parameter indicates the current state of the access token and should not be used for determining whether the access token should refresh. callback A callback that returns a promise when the conference access token needs to be refreshed.","title":"On required"},{"location":"android-reference/sdk/com.voxeet.sdk.authent.token/-refresh-token-callback/on-required/#onrequired","text":"[Android] abstract fun onRequired (is_expired: Boolean , @ NonNull callback: TokenCallback) A callback that returns a promise when the conference access token needs to be refreshed.","title":"onRequired"},{"location":"android-reference/sdk/com.voxeet.sdk.authent.token/-refresh-token-callback/on-required/#parameters","text":"Android is_expired A boolean value that informs whether the previous conference access token has expired. This parameter indicates the current state of the access token and should not be used for determining whether the access token should refresh. callback A callback that returns a promise when the conference access token needs to be refreshed.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.events.promises/","text":"// sdk / com.voxeet.sdk.events.promises Package-level declarations \u00b6 Types \u00b6 Name Summary InConferenceException [Android] open class InConferenceException : Throwable InConferenceException occurs when a participant connected to an existing conference tries to connect to a new conference. NotInConferenceException [Android] open class NotInConferenceException : Exception NotInConferenceException occurs when a client tries to interact with an unavailable conference. ParticipantAddedErrorEventException [Android] open class ParticipantAddedErrorEventException : Throwable The ParticipantAddedErrorEventException model is an exception that is emitted when it is impossible to add a participant into the conference local information. PromisePermissionRefusedEventException [Android] open class PromisePermissionRefusedEventException : Throwable The PromisePermissionRefusedEventException model is an exception that is emitted when an API call requires the permission of a specific conference participant. ServerErrorException [Android] open class ServerErrorException : Throwable The ServerErrorException model represents the exception that is sent when the server returns or encounters an error.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.events.promises/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.events.promises/#types","text":"Name Summary InConferenceException [Android] open class InConferenceException : Throwable InConferenceException occurs when a participant connected to an existing conference tries to connect to a new conference. NotInConferenceException [Android] open class NotInConferenceException : Exception NotInConferenceException occurs when a client tries to interact with an unavailable conference. ParticipantAddedErrorEventException [Android] open class ParticipantAddedErrorEventException : Throwable The ParticipantAddedErrorEventException model is an exception that is emitted when it is impossible to add a participant into the conference local information. PromisePermissionRefusedEventException [Android] open class PromisePermissionRefusedEventException : Throwable The PromisePermissionRefusedEventException model is an exception that is emitted when an API call requires the permission of a specific conference participant. ServerErrorException [Android] open class ServerErrorException : Throwable The ServerErrorException model represents the exception that is sent when the server returns or encounters an error.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.events.promises/-in-conference-exception/","text":"// sdk / com.voxeet.sdk.events.promises / InConferenceException InConferenceException \u00b6 [Android] open class InConferenceException : Throwable InConferenceException occurs when a participant connected to an existing conference tries to connect to a new conference. The conference participants can participate in only one conference at once.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.events.promises/-in-conference-exception/#inconferenceexception","text":"[Android] open class InConferenceException : Throwable InConferenceException occurs when a participant connected to an existing conference tries to connect to a new conference. The conference participants can participate in only one conference at once.","title":"InConferenceException"},{"location":"android-reference/sdk/com.voxeet.sdk.events.promises/-not-in-conference-exception/","text":"// sdk / com.voxeet.sdk.events.promises / NotInConferenceException NotInConferenceException \u00b6 [Android] open class NotInConferenceException : Exception NotInConferenceException occurs when a client tries to interact with an unavailable conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.events.promises/-not-in-conference-exception/#notinconferenceexception","text":"[Android] open class NotInConferenceException : Exception NotInConferenceException occurs when a client tries to interact with an unavailable conference.","title":"NotInConferenceException"},{"location":"android-reference/sdk/com.voxeet.sdk.events.promises/-participant-added-error-event-exception/","text":"// sdk / com.voxeet.sdk.events.promises / ParticipantAddedErrorEventException ParticipantAddedErrorEventException \u00b6 [Android] open class ParticipantAddedErrorEventException : Throwable The ParticipantAddedErrorEventException model is an exception that is emitted when it is impossible to add a participant into the conference local information. It is caused by mismatch and compatibility issues related to the specific participant. Properties \u00b6 Name Summary event [Android] @ NonNull open var event : ParticipantAddedErrorEvent The corresponding event containing all the needed information.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.events.promises/-participant-added-error-event-exception/#participantaddederroreventexception","text":"[Android] open class ParticipantAddedErrorEventException : Throwable The ParticipantAddedErrorEventException model is an exception that is emitted when it is impossible to add a participant into the conference local information. It is caused by mismatch and compatibility issues related to the specific participant.","title":"ParticipantAddedErrorEventException"},{"location":"android-reference/sdk/com.voxeet.sdk.events.promises/-participant-added-error-event-exception/#properties","text":"Name Summary event [Android] @ NonNull open var event : ParticipantAddedErrorEvent The corresponding event containing all the needed information.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.events.promises/-participant-added-error-event-exception/event/","text":"// sdk / com.voxeet.sdk.events.promises / ParticipantAddedErrorEventException / event event \u00b6 [Android] @ NonNull open var event : ParticipantAddedErrorEvent The corresponding event containing all the needed information.","title":"Event"},{"location":"android-reference/sdk/com.voxeet.sdk.events.promises/-participant-added-error-event-exception/event/#event","text":"[Android] @ NonNull open var event : ParticipantAddedErrorEvent The corresponding event containing all the needed information.","title":"event"},{"location":"android-reference/sdk/com.voxeet.sdk.events.promises/-promise-permission-refused-event-exception/","text":"// sdk / com.voxeet.sdk.events.promises / PromisePermissionRefusedEventException PromisePermissionRefusedEventException \u00b6 [Android] open class PromisePermissionRefusedEventException : Throwable The PromisePermissionRefusedEventException model is an exception that is emitted when an API call requires the permission of a specific conference participant. Properties \u00b6 Name Summary event [Android] @ NonNull open var event : PermissionRefusedEvent Contains information about the missing permission.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.events.promises/-promise-permission-refused-event-exception/#promisepermissionrefusedeventexception","text":"[Android] open class PromisePermissionRefusedEventException : Throwable The PromisePermissionRefusedEventException model is an exception that is emitted when an API call requires the permission of a specific conference participant.","title":"PromisePermissionRefusedEventException"},{"location":"android-reference/sdk/com.voxeet.sdk.events.promises/-promise-permission-refused-event-exception/#properties","text":"Name Summary event [Android] @ NonNull open var event : PermissionRefusedEvent Contains information about the missing permission.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.events.promises/-promise-permission-refused-event-exception/event/","text":"// sdk / com.voxeet.sdk.events.promises / PromisePermissionRefusedEventException / event event \u00b6 [Android] @ NonNull open var event : PermissionRefusedEvent Contains information about the missing permission.","title":"Event"},{"location":"android-reference/sdk/com.voxeet.sdk.events.promises/-promise-permission-refused-event-exception/event/#event","text":"[Android] @ NonNull open var event : PermissionRefusedEvent Contains information about the missing permission.","title":"event"},{"location":"android-reference/sdk/com.voxeet.sdk.events.promises/-server-error-exception/","text":"// sdk / com.voxeet.sdk.events.promises / ServerErrorException ServerErrorException \u00b6 [Android] open class ServerErrorException : Throwable The ServerErrorException model represents the exception that is sent when the server returns or encounters an error. It contains the value of the API error origin and the actual error . Properties \u00b6 Name Summary error [Android] @ NonNull val error : ServerErrorMessage The server error that contains the error code, reason, and description. httpException [Android] @ NonNull val httpException : HttpException Occurs when there is a communication issue between the SDK and the Dolby.io Communications APIs platform over the HTTP protocol. origin [Android] @ NonNull val origin : ServerErrorOrigin The enumerated value of the API origin error.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.events.promises/-server-error-exception/#servererrorexception","text":"[Android] open class ServerErrorException : Throwable The ServerErrorException model represents the exception that is sent when the server returns or encounters an error. It contains the value of the API error origin and the actual error .","title":"ServerErrorException"},{"location":"android-reference/sdk/com.voxeet.sdk.events.promises/-server-error-exception/#properties","text":"Name Summary error [Android] @ NonNull val error : ServerErrorMessage The server error that contains the error code, reason, and description. httpException [Android] @ NonNull val httpException : HttpException Occurs when there is a communication issue between the SDK and the Dolby.io Communications APIs platform over the HTTP protocol. origin [Android] @ NonNull val origin : ServerErrorOrigin The enumerated value of the API origin error.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.events.promises/-server-error-exception/error/","text":"// sdk / com.voxeet.sdk.events.promises / ServerErrorException / error error \u00b6 [Android] @ NonNull val error : ServerErrorMessage The server error that contains the error code, reason, and description.","title":"Error"},{"location":"android-reference/sdk/com.voxeet.sdk.events.promises/-server-error-exception/error/#error","text":"[Android] @ NonNull val error : ServerErrorMessage The server error that contains the error code, reason, and description.","title":"error"},{"location":"android-reference/sdk/com.voxeet.sdk.events.promises/-server-error-exception/http-exception/","text":"// sdk / com.voxeet.sdk.events.promises / ServerErrorException / httpException httpException \u00b6 [Android] @ NonNull val httpException : HttpException Occurs when there is a communication issue between the SDK and the Dolby.io Communications APIs platform over the HTTP protocol.","title":"Http exception"},{"location":"android-reference/sdk/com.voxeet.sdk.events.promises/-server-error-exception/http-exception/#httpexception","text":"[Android] @ NonNull val httpException : HttpException Occurs when there is a communication issue between the SDK and the Dolby.io Communications APIs platform over the HTTP protocol.","title":"httpException"},{"location":"android-reference/sdk/com.voxeet.sdk.events.promises/-server-error-exception/origin/","text":"// sdk / com.voxeet.sdk.events.promises / ServerErrorException / origin origin \u00b6 [Android] @ NonNull val origin : ServerErrorOrigin The enumerated value of the API origin error.","title":"Origin"},{"location":"android-reference/sdk/com.voxeet.sdk.events.promises/-server-error-exception/origin/#origin","text":"[Android] @ NonNull val origin : ServerErrorOrigin The enumerated value of the API origin error.","title":"origin"},{"location":"android-reference/sdk/com.voxeet.sdk.events.restapi/","text":"// sdk / com.voxeet.sdk.events.restapi Package-level declarations \u00b6 Types \u00b6 Name Summary ConferenceStatusResult [Android] @DeprecatedSince(value = \"3.6\") open class ConferenceStatusResult : BaseEvent Note : This model is deprecated in SDK 3.6.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.events.restapi/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.events.restapi/#types","text":"Name Summary ConferenceStatusResult [Android] @DeprecatedSince(value = \"3.6\") open class ConferenceStatusResult : BaseEvent Note : This model is deprecated in SDK 3.6.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.events.restapi/-conference-status-result/","text":"// sdk / com.voxeet.sdk.events.restapi / ConferenceStatusResult ConferenceStatusResult \u00b6 [Android] @DeprecatedSince(value = \"3.6\") open class ConferenceStatusResult : BaseEvent--- Deprecated \u00b6 Note : This model is deprecated in SDK 3.6. The ConferenceStatusResult model gathers conference information, such as the ID , alias , and information if it is live . It also allows getting a list of conference participants . Functions \u00b6 Name Summary getConferenceUsers [Android] @ NonNull open fun getConferenceUsers (): List < Participant > Get a copy of the participants' list. Properties \u00b6 Name Summary conferenceAlias [Android] @ Nullable open var conferenceAlias : String The conference alias. conferenceId [Android] @ Nullable open var conferenceId : String The conference ID. isLive [Android] open var isLive : Boolean Flag indicating the current live status. Inheritors \u00b6 Name ConferenceStatusResult","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.events.restapi/-conference-status-result/#conferencestatusresult","text":"[Android] @DeprecatedSince(value = \"3.6\") open class ConferenceStatusResult : BaseEvent---","title":"ConferenceStatusResult"},{"location":"android-reference/sdk/com.voxeet.sdk.events.restapi/-conference-status-result/#deprecated","text":"Note : This model is deprecated in SDK 3.6. The ConferenceStatusResult model gathers conference information, such as the ID , alias , and information if it is live . It also allows getting a list of conference participants .","title":"Deprecated"},{"location":"android-reference/sdk/com.voxeet.sdk.events.restapi/-conference-status-result/#functions","text":"Name Summary getConferenceUsers [Android] @ NonNull open fun getConferenceUsers (): List < Participant > Get a copy of the participants' list.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.events.restapi/-conference-status-result/#properties","text":"Name Summary conferenceAlias [Android] @ Nullable open var conferenceAlias : String The conference alias. conferenceId [Android] @ Nullable open var conferenceId : String The conference ID. isLive [Android] open var isLive : Boolean Flag indicating the current live status.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.events.restapi/-conference-status-result/#inheritors","text":"Name ConferenceStatusResult","title":"Inheritors"},{"location":"android-reference/sdk/com.voxeet.sdk.events.restapi/-conference-status-result/conference-alias/","text":"// sdk / com.voxeet.sdk.events.restapi / ConferenceStatusResult / conferenceAlias conferenceAlias \u00b6 [Android] @ Nullable open var conferenceAlias : String The conference alias.","title":"Conference alias"},{"location":"android-reference/sdk/com.voxeet.sdk.events.restapi/-conference-status-result/conference-alias/#conferencealias","text":"[Android] @ Nullable open var conferenceAlias : String The conference alias.","title":"conferenceAlias"},{"location":"android-reference/sdk/com.voxeet.sdk.events.restapi/-conference-status-result/conference-id/","text":"// sdk / com.voxeet.sdk.events.restapi / ConferenceStatusResult / conferenceId conferenceId \u00b6 [Android] @ Nullable open var conferenceId : String The conference ID.","title":"Conference id"},{"location":"android-reference/sdk/com.voxeet.sdk.events.restapi/-conference-status-result/conference-id/#conferenceid","text":"[Android] @ Nullable open var conferenceId : String The conference ID.","title":"conferenceId"},{"location":"android-reference/sdk/com.voxeet.sdk.events.restapi/-conference-status-result/get-conference-users/","text":"// sdk / com.voxeet.sdk.events.restapi / ConferenceStatusResult / getConferenceUsers getConferenceUsers \u00b6 [Android] @ NonNull open fun getConferenceUsers (): List < Participant > Get a copy of the participants' list. Return \u00b6 list of participants","title":"Get conference users"},{"location":"android-reference/sdk/com.voxeet.sdk.events.restapi/-conference-status-result/get-conference-users/#getconferenceusers","text":"[Android] @ NonNull open fun getConferenceUsers (): List < Participant > Get a copy of the participants' list.","title":"getConferenceUsers"},{"location":"android-reference/sdk/com.voxeet.sdk.events.restapi/-conference-status-result/get-conference-users/#return","text":"list of participants","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.events.restapi/-conference-status-result/is-live/","text":"// sdk / com.voxeet.sdk.events.restapi / ConferenceStatusResult / isLive isLive \u00b6 [Android] open var isLive : Boolean Flag indicating the current live status.","title":"Is live"},{"location":"android-reference/sdk/com.voxeet.sdk.events.restapi/-conference-status-result/is-live/#islive","text":"[Android] open var isLive : Boolean Flag indicating the current live status.","title":"isLive"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/","text":"// sdk / com.voxeet.sdk.events.sdk Package-level declarations \u00b6 Types \u00b6 Name Summary ConferenceHistoryResult [Android] open class ConferenceHistoryResult Emitted when the application asks about historical conference elements (by calling the history restful endpoint). ConferenceParticipantsInvitedResult [Android] open class ConferenceParticipantsInvitedResult : SuccessEvent The ConferenceParticipantsInvitedResult model gathers information about all participants invited to a conference. ConferenceStatusUpdatedEvent [Android] open class ConferenceStatusUpdatedEvent Emitted when the conference changes status. ConferenceTimeoutNoParticipantsJoinedEvent [Android] open class ConferenceTimeoutNoParticipantsJoinedEvent Emitted when within the maximum awaiting time nobody has joined the current participant at the conference. IncomingCallEvent [Android] open class IncomingCallEvent Emitted when the application receives an incoming call. MessageReceived [Android] open class MessageReceived : SuccessEvent Emitted when the message from the specific participant is received at the specific conference. MessageReceivedInWrongConference [Android] open class MessageReceivedInWrongConference : SuccessEvent The MessageReceivedInWrongConference model represents the situation when the conference participant receives the message in a wrong conference. PermissionsUpdatedEvent [Android] open class PermissionsUpdatedEvent Emitted when the local participant's permissions are updated. QualityIndicators [Android] open class QualityIndicators : SuccessEvent The Mean Opinion Score (MOS) which represents the participants' audio quality. SocketStateChangeEvent [Android] open class SocketStateChangeEvent Emitted when the WebSocket state has changed.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/#types","text":"Name Summary ConferenceHistoryResult [Android] open class ConferenceHistoryResult Emitted when the application asks about historical conference elements (by calling the history restful endpoint). ConferenceParticipantsInvitedResult [Android] open class ConferenceParticipantsInvitedResult : SuccessEvent The ConferenceParticipantsInvitedResult model gathers information about all participants invited to a conference. ConferenceStatusUpdatedEvent [Android] open class ConferenceStatusUpdatedEvent Emitted when the conference changes status. ConferenceTimeoutNoParticipantsJoinedEvent [Android] open class ConferenceTimeoutNoParticipantsJoinedEvent Emitted when within the maximum awaiting time nobody has joined the current participant at the conference. IncomingCallEvent [Android] open class IncomingCallEvent Emitted when the application receives an incoming call. MessageReceived [Android] open class MessageReceived : SuccessEvent Emitted when the message from the specific participant is received at the specific conference. MessageReceivedInWrongConference [Android] open class MessageReceivedInWrongConference : SuccessEvent The MessageReceivedInWrongConference model represents the situation when the conference participant receives the message in a wrong conference. PermissionsUpdatedEvent [Android] open class PermissionsUpdatedEvent Emitted when the local participant's permissions are updated. QualityIndicators [Android] open class QualityIndicators : SuccessEvent The Mean Opinion Score (MOS) which represents the participants' audio quality. SocketStateChangeEvent [Android] open class SocketStateChangeEvent Emitted when the WebSocket state has changed.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-conference-history-result/","text":"// sdk / com.voxeet.sdk.events.sdk / ConferenceHistoryResult ConferenceHistoryResult \u00b6 [Android] open class ConferenceHistoryResult Emitted when the application asks about historical conference elements (by calling the history restful endpoint). Properties \u00b6 Name Summary items [Android] @ NonNull open var items : List <HistoryConference> The events list.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-conference-history-result/#conferencehistoryresult","text":"[Android] open class ConferenceHistoryResult Emitted when the application asks about historical conference elements (by calling the history restful endpoint).","title":"ConferenceHistoryResult"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-conference-history-result/#properties","text":"Name Summary items [Android] @ NonNull open var items : List <HistoryConference> The events list.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-conference-history-result/items/","text":"// sdk / com.voxeet.sdk.events.sdk / ConferenceHistoryResult / items items \u00b6 [Android] @ NonNull open var items : List <HistoryConference> The events list.","title":"Items"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-conference-history-result/items/#items","text":"[Android] @ NonNull open var items : List <HistoryConference> The events list.","title":"items"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-conference-participants-invited-result/","text":"// sdk / com.voxeet.sdk.events.sdk / ConferenceParticipantsInvitedResult ConferenceParticipantsInvitedResult \u00b6 [Android] open class ConferenceParticipantsInvitedResult : SuccessEvent The ConferenceParticipantsInvitedResult model gathers information about all participants invited to a conference. Properties \u00b6 Name Summary conferenceParticipants [Android] @ NonNull open var conferenceParticipants : Iterable < Participant > A list of all participants invited to a conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-conference-participants-invited-result/#conferenceparticipantsinvitedresult","text":"[Android] open class ConferenceParticipantsInvitedResult : SuccessEvent The ConferenceParticipantsInvitedResult model gathers information about all participants invited to a conference.","title":"ConferenceParticipantsInvitedResult"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-conference-participants-invited-result/#properties","text":"Name Summary conferenceParticipants [Android] @ NonNull open var conferenceParticipants : Iterable < Participant > A list of all participants invited to a conference.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-conference-participants-invited-result/conference-participants/","text":"// sdk / com.voxeet.sdk.events.sdk / ConferenceParticipantsInvitedResult / conferenceParticipants conferenceParticipants \u00b6 [Android] @ NonNull open var conferenceParticipants : Iterable < Participant > A list of all participants invited to a conference.","title":"Conference participants"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-conference-participants-invited-result/conference-participants/#conferenceparticipants","text":"[Android] @ NonNull open var conferenceParticipants : Iterable < Participant > A list of all participants invited to a conference.","title":"conferenceParticipants"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-conference-status-updated-event/","text":"// sdk / com.voxeet.sdk.events.sdk / ConferenceStatusUpdatedEvent ConferenceStatusUpdatedEvent \u00b6 [Android] open class ConferenceStatusUpdatedEvent Emitted when the conference changes status. Properties \u00b6 Name Summary conference [Android] @ Nullable open var conference : Conference The conference. conferenceAlias [Android] @ Nullable open var conferenceAlias : String The conference alias. error [Android] @ Nullable open var error : Throwable The error object informing that participant's permissions changed. state [Android] @ NonNull open var state : ConferenceStatus The new status.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-conference-status-updated-event/#conferencestatusupdatedevent","text":"[Android] open class ConferenceStatusUpdatedEvent Emitted when the conference changes status.","title":"ConferenceStatusUpdatedEvent"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-conference-status-updated-event/#properties","text":"Name Summary conference [Android] @ Nullable open var conference : Conference The conference. conferenceAlias [Android] @ Nullable open var conferenceAlias : String The conference alias. error [Android] @ Nullable open var error : Throwable The error object informing that participant's permissions changed. state [Android] @ NonNull open var state : ConferenceStatus The new status.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-conference-status-updated-event/conference-alias/","text":"// sdk / com.voxeet.sdk.events.sdk / ConferenceStatusUpdatedEvent / conferenceAlias conferenceAlias \u00b6 [Android] @ Nullable open var conferenceAlias : String The conference alias. It is a mandatory property if nobody joined the conference.","title":"Conference alias"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-conference-status-updated-event/conference-alias/#conferencealias","text":"[Android] @ Nullable open var conferenceAlias : String The conference alias. It is a mandatory property if nobody joined the conference.","title":"conferenceAlias"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-conference-status-updated-event/conference/","text":"// sdk / com.voxeet.sdk.events.sdk / ConferenceStatusUpdatedEvent / conference conference \u00b6 [Android] @ Nullable open var conference : Conference The conference. It can be a null value in case when nobody joined the conference.","title":"Conference"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-conference-status-updated-event/conference/#conference","text":"[Android] @ Nullable open var conference : Conference The conference. It can be a null value in case when nobody joined the conference.","title":"conference"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-conference-status-updated-event/error/","text":"// sdk / com.voxeet.sdk.events.sdk / ConferenceStatusUpdatedEvent / error error \u00b6 [Android] @ Nullable open var error : Throwable The error object informing that participant's permissions changed.","title":"Error"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-conference-status-updated-event/error/#error","text":"[Android] @ Nullable open var error : Throwable The error object informing that participant's permissions changed.","title":"error"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-conference-status-updated-event/state/","text":"// sdk / com.voxeet.sdk.events.sdk / ConferenceStatusUpdatedEvent / state state \u00b6 [Android] @ NonNull open var state : ConferenceStatus The new status.","title":"State"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-conference-status-updated-event/state/#state","text":"[Android] @ NonNull open var state : ConferenceStatus The new status.","title":"state"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-conference-timeout-no-participants-joined-event/","text":"// sdk / com.voxeet.sdk.events.sdk / ConferenceTimeoutNoParticipantsJoinedEvent ConferenceTimeoutNoParticipantsJoinedEvent \u00b6 [Android] open class ConferenceTimeoutNoParticipantsJoinedEvent Emitted when within the maximum awaiting time nobody has joined the current participant at the conference. Properties \u00b6 Name Summary timeout [Android] open var timeout : Long A timeout set in the SDK.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-conference-timeout-no-participants-joined-event/#conferencetimeoutnoparticipantsjoinedevent","text":"[Android] open class ConferenceTimeoutNoParticipantsJoinedEvent Emitted when within the maximum awaiting time nobody has joined the current participant at the conference.","title":"ConferenceTimeoutNoParticipantsJoinedEvent"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-conference-timeout-no-participants-joined-event/#properties","text":"Name Summary timeout [Android] open var timeout : Long A timeout set in the SDK.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-conference-timeout-no-participants-joined-event/timeout/","text":"// sdk / com.voxeet.sdk.events.sdk / ConferenceTimeoutNoParticipantsJoinedEvent / timeout timeout \u00b6 [Android] open var timeout : Long A timeout set in the SDK.","title":"Timeout"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-conference-timeout-no-participants-joined-event/timeout/#timeout","text":"[Android] open var timeout : Long A timeout set in the SDK.","title":"timeout"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-incoming-call-event/","text":"// sdk / com.voxeet.sdk.events.sdk / IncomingCallEvent IncomingCallEvent \u00b6 [Android] open class IncomingCallEvent Emitted when the application receives an incoming call. This event is optional when the NotificationService is properly referenced and set up on the developer side. Properties \u00b6 Name Summary conferenceId [Android] open var conferenceId : String The conference ID.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-incoming-call-event/#incomingcallevent","text":"[Android] open class IncomingCallEvent Emitted when the application receives an incoming call. This event is optional when the NotificationService is properly referenced and set up on the developer side.","title":"IncomingCallEvent"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-incoming-call-event/#properties","text":"Name Summary conferenceId [Android] open var conferenceId : String The conference ID.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-incoming-call-event/conference-id/","text":"// sdk / com.voxeet.sdk.events.sdk / IncomingCallEvent / conferenceId conferenceId \u00b6 [Android] open var conferenceId : String The conference ID.","title":"Conference id"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-incoming-call-event/conference-id/#conferenceid","text":"[Android] open var conferenceId : String The conference ID.","title":"conferenceId"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-message-received/","text":"// sdk / com.voxeet.sdk.events.sdk / MessageReceived MessageReceived \u00b6 [Android] open class MessageReceived : SuccessEvent Emitted when the message from the specific participant is received at the specific conference. Properties \u00b6 Name Summary conferenceId [Android] open var conferenceId : String The conference ID. message [Android] open var message : String The corresponding message. participantId [Android] open var participantId : String The ID of the sender.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-message-received/#messagereceived","text":"[Android] open class MessageReceived : SuccessEvent Emitted when the message from the specific participant is received at the specific conference.","title":"MessageReceived"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-message-received/#properties","text":"Name Summary conferenceId [Android] open var conferenceId : String The conference ID. message [Android] open var message : String The corresponding message. participantId [Android] open var participantId : String The ID of the sender.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-message-received/conference-id/","text":"// sdk / com.voxeet.sdk.events.sdk / MessageReceived / conferenceId conferenceId \u00b6 [Android] open var conferenceId : String The conference ID.","title":"Conference id"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-message-received/conference-id/#conferenceid","text":"[Android] open var conferenceId : String The conference ID.","title":"conferenceId"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-message-received/message/","text":"// sdk / com.voxeet.sdk.events.sdk / MessageReceived / message message \u00b6 [Android] open var message : String The corresponding message.","title":"Message"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-message-received/message/#message","text":"[Android] open var message : String The corresponding message.","title":"message"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-message-received/participant-id/","text":"// sdk / com.voxeet.sdk.events.sdk / MessageReceived / participantId participantId \u00b6 [Android] open var participantId : String The ID of the sender.","title":"Participant id"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-message-received/participant-id/#participantid","text":"[Android] open var participantId : String The ID of the sender.","title":"participantId"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-message-received-in-wrong-conference/","text":"// sdk / com.voxeet.sdk.events.sdk / MessageReceivedInWrongConference MessageReceivedInWrongConference \u00b6 [Android] open class MessageReceivedInWrongConference : SuccessEvent The MessageReceivedInWrongConference model represents the situation when the conference participant receives the message in a wrong conference. The message contains the sender ID , conference ID , and its content . Properties \u00b6 Name Summary conferenceId [Android] open var conferenceId : String The conference ID. message [Android] open var message : String The content of the corresponding message. participantId [Android] open var participantId : String The sender ID.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-message-received-in-wrong-conference/#messagereceivedinwrongconference","text":"[Android] open class MessageReceivedInWrongConference : SuccessEvent The MessageReceivedInWrongConference model represents the situation when the conference participant receives the message in a wrong conference. The message contains the sender ID , conference ID , and its content .","title":"MessageReceivedInWrongConference"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-message-received-in-wrong-conference/#properties","text":"Name Summary conferenceId [Android] open var conferenceId : String The conference ID. message [Android] open var message : String The content of the corresponding message. participantId [Android] open var participantId : String The sender ID.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-message-received-in-wrong-conference/conference-id/","text":"// sdk / com.voxeet.sdk.events.sdk / MessageReceivedInWrongConference / conferenceId conferenceId \u00b6 [Android] open var conferenceId : String The conference ID.","title":"Conference id"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-message-received-in-wrong-conference/conference-id/#conferenceid","text":"[Android] open var conferenceId : String The conference ID.","title":"conferenceId"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-message-received-in-wrong-conference/message/","text":"// sdk / com.voxeet.sdk.events.sdk / MessageReceivedInWrongConference / message message \u00b6 [Android] open var message : String The content of the corresponding message.","title":"Message"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-message-received-in-wrong-conference/message/#message","text":"[Android] open var message : String The content of the corresponding message.","title":"message"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-message-received-in-wrong-conference/participant-id/","text":"// sdk / com.voxeet.sdk.events.sdk / MessageReceivedInWrongConference / participantId participantId \u00b6 [Android] open var participantId : String The sender ID.","title":"Participant id"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-message-received-in-wrong-conference/participant-id/#participantid","text":"[Android] open var participantId : String The sender ID.","title":"participantId"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-permissions-updated-event/","text":"// sdk / com.voxeet.sdk.events.sdk / PermissionsUpdatedEvent PermissionsUpdatedEvent \u00b6 [Android] open class PermissionsUpdatedEvent Emitted when the local participant's permissions are updated. Properties \u00b6 Name Summary permissions [Android] @ NonNull open var permissions : Set < ConferencePermission > The updated conference permissions.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-permissions-updated-event/#permissionsupdatedevent","text":"[Android] open class PermissionsUpdatedEvent Emitted when the local participant's permissions are updated.","title":"PermissionsUpdatedEvent"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-permissions-updated-event/#properties","text":"Name Summary permissions [Android] @ NonNull open var permissions : Set < ConferencePermission > The updated conference permissions.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-permissions-updated-event/permissions/","text":"// sdk / com.voxeet.sdk.events.sdk / PermissionsUpdatedEvent / permissions permissions \u00b6 [Android] @ NonNull open var permissions : Set < ConferencePermission > The updated conference permissions.","title":"Permissions"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-permissions-updated-event/permissions/#permissions","text":"[Android] @ NonNull open var permissions : Set < ConferencePermission > The updated conference permissions.","title":"permissions"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-quality-indicators/","text":"// sdk / com.voxeet.sdk.events.sdk / QualityIndicators QualityIndicators \u00b6 [Android] open class QualityIndicators : SuccessEvent The Mean Opinion Score (MOS) which represents the participants' audio quality. The SDK calculates the audio quality scores and displays the values in a range from 1 to 5, where 1 represents the worst quality and 5 represents the highest quality. In cases when the audio MOS score is not available, the mos property returns the value -1. Properties \u00b6 Name Summary mos [Android] open var mos : Float The quality indicator.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-quality-indicators/#qualityindicators","text":"[Android] open class QualityIndicators : SuccessEvent The Mean Opinion Score (MOS) which represents the participants' audio quality. The SDK calculates the audio quality scores and displays the values in a range from 1 to 5, where 1 represents the worst quality and 5 represents the highest quality. In cases when the audio MOS score is not available, the mos property returns the value -1.","title":"QualityIndicators"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-quality-indicators/#properties","text":"Name Summary mos [Android] open var mos : Float The quality indicator.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-quality-indicators/mos/","text":"// sdk / com.voxeet.sdk.events.sdk / QualityIndicators / mos mos \u00b6 [Android] open var mos : Float The quality indicator.","title":"Mos"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-quality-indicators/mos/#mos","text":"[Android] open var mos : Float The quality indicator.","title":"mos"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-socket-state-change-event/","text":"// sdk / com.voxeet.sdk.events.sdk / SocketStateChangeEvent SocketStateChangeEvent \u00b6 [Android] open class SocketStateChangeEvent Emitted when the WebSocket state has changed. Properties \u00b6 Name Summary state [Android] @ NonNull open var state : WebSocketState The new state of the socket.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-socket-state-change-event/#socketstatechangeevent","text":"[Android] open class SocketStateChangeEvent Emitted when the WebSocket state has changed.","title":"SocketStateChangeEvent"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-socket-state-change-event/#properties","text":"Name Summary state [Android] @ NonNull open var state : WebSocketState The new state of the socket.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-socket-state-change-event/state/","text":"// sdk / com.voxeet.sdk.events.sdk / SocketStateChangeEvent / state state \u00b6 [Android] @ NonNull open var state : WebSocketState The new state of the socket.","title":"State"},{"location":"android-reference/sdk/com.voxeet.sdk.events.sdk/-socket-state-change-event/state/#state","text":"[Android] @ NonNull open var state : WebSocketState The new state of the socket.","title":"state"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/","text":"// sdk / com.voxeet.sdk.events.v2 Package-level declarations \u00b6 Types \u00b6 Name Summary AudioStateEvent [Android] open class AudioStateEvent Emitted when the local audio (track) state information has been changed. ParticipantAddedEvent [Android] open class ParticipantAddedEvent : SuccessEvent Emitted when a new participant is invited to a conference. ParticipantUpdatedEvent [Android] open class ParticipantUpdatedEvent : SuccessEvent Emitted when a participant changes ConferenceParticipantStatus . StreamAddedEvent [Android] open class StreamAddedEvent : SuccessEvent Emitted when the SDK adds a new stream to a conference participant. StreamRemovedEvent [Android] open class StreamRemovedEvent : SuccessEvent Emitted when the SDK removes a stream from a conference participant. StreamUpdatedEvent [Android] open class StreamUpdatedEvent : SuccessEvent Emitted when a conference participant who is connected to the audio and video stream changes the stream by enabling a microphone while using a camera or by enabling a camera while using a microphone. VideoStateEvent [Android] open class VideoStateEvent Emitted when the local video state information has changed.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/#types","text":"Name Summary AudioStateEvent [Android] open class AudioStateEvent Emitted when the local audio (track) state information has been changed. ParticipantAddedEvent [Android] open class ParticipantAddedEvent : SuccessEvent Emitted when a new participant is invited to a conference. ParticipantUpdatedEvent [Android] open class ParticipantUpdatedEvent : SuccessEvent Emitted when a participant changes ConferenceParticipantStatus . StreamAddedEvent [Android] open class StreamAddedEvent : SuccessEvent Emitted when the SDK adds a new stream to a conference participant. StreamRemovedEvent [Android] open class StreamRemovedEvent : SuccessEvent Emitted when the SDK removes a stream from a conference participant. StreamUpdatedEvent [Android] open class StreamUpdatedEvent : SuccessEvent Emitted when a conference participant who is connected to the audio and video stream changes the stream by enabling a microphone while using a camera or by enabling a camera while using a microphone. VideoStateEvent [Android] open class VideoStateEvent Emitted when the local video state information has changed.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-audio-state-event/","text":"// sdk / com.voxeet.sdk.events.v2 / AudioStateEvent AudioStateEvent \u00b6 [Android] open class AudioStateEvent Emitted when the local audio (track) state information has been changed. Un/-muting the paticipant does not trigger this. It's only related to the active audio track. Properties \u00b6 Name Summary mediaState [Android] @ NonNull open var mediaState : MediaState The new local video state.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-audio-state-event/#audiostateevent","text":"[Android] open class AudioStateEvent Emitted when the local audio (track) state information has been changed. Un/-muting the paticipant does not trigger this. It's only related to the active audio track.","title":"AudioStateEvent"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-audio-state-event/#properties","text":"Name Summary mediaState [Android] @ NonNull open var mediaState : MediaState The new local video state.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-audio-state-event/media-state/","text":"// sdk / com.voxeet.sdk.events.v2 / AudioStateEvent / mediaState mediaState \u00b6 [Android] @ NonNull open var mediaState : MediaState The new local video state.","title":"Media state"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-audio-state-event/media-state/#mediastate","text":"[Android] @ NonNull open var mediaState : MediaState The new local video state.","title":"mediaState"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-participant-added-event/","text":"// sdk / com.voxeet.sdk.events.v2 / ParticipantAddedEvent ParticipantAddedEvent \u00b6 [Android] open class ParticipantAddedEvent : SuccessEvent Emitted when a new participant is invited to a conference. The SDK does not emit ParticipantAddedEvent for a local participant. Listeners only receive the participantAdded events about users; they do not receive events for other listeners. In SDK 3.2 and prior releases, users receive events about users and the first 1000 listeners. However, in SDK 3.3 and next releases, users receive the participantAdded events about users and do not receive any events about listeners. To notify all application users about the number of participants who are present at a conference, the Android SDK 3.3 introduces the ActiveParticipantsEvent events. Properties \u00b6 Name Summary participant [Android] @ NonNull open var participant : Participant The conference participant.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-participant-added-event/#participantaddedevent","text":"[Android] open class ParticipantAddedEvent : SuccessEvent Emitted when a new participant is invited to a conference. The SDK does not emit ParticipantAddedEvent for a local participant. Listeners only receive the participantAdded events about users; they do not receive events for other listeners. In SDK 3.2 and prior releases, users receive events about users and the first 1000 listeners. However, in SDK 3.3 and next releases, users receive the participantAdded events about users and do not receive any events about listeners. To notify all application users about the number of participants who are present at a conference, the Android SDK 3.3 introduces the ActiveParticipantsEvent events.","title":"ParticipantAddedEvent"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-participant-added-event/#properties","text":"Name Summary participant [Android] @ NonNull open var participant : Participant The conference participant.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-participant-added-event/participant/","text":"// sdk / com.voxeet.sdk.events.v2 / ParticipantAddedEvent / participant participant \u00b6 [Android] @ NonNull open var participant : Participant The conference participant.","title":"Participant"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-participant-added-event/participant/#participant","text":"[Android] @ NonNull open var participant : Participant The conference participant.","title":"participant"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-participant-updated-event/","text":"// sdk / com.voxeet.sdk.events.v2 / ParticipantUpdatedEvent ParticipantUpdatedEvent \u00b6 [Android] open class ParticipantUpdatedEvent : SuccessEvent Emitted when a participant changes ConferenceParticipantStatus . Listeners only receive the participantUpdated events about users; they do not receive events for other listeners. In SDK 3.2 and prior releases, users receive events about users and the first 1000 listeners. However, in SDK 3.3 and next releases, users receive the participantUpdated events about users and do not receive any events about listeners. To notify all application users about the number of participants who are present at a conference, the Android SDK 3.3 introduces the com.voxeet.sdk.push.center.subscription.event.ActiveParticipantsEvent events. The following graphic shows possible status changes during a conference: Properties \u00b6 Name Summary participant [Android] @ NonNull open var participant : Participant The conference participant.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-participant-updated-event/#participantupdatedevent","text":"[Android] open class ParticipantUpdatedEvent : SuccessEvent Emitted when a participant changes ConferenceParticipantStatus . Listeners only receive the participantUpdated events about users; they do not receive events for other listeners. In SDK 3.2 and prior releases, users receive events about users and the first 1000 listeners. However, in SDK 3.3 and next releases, users receive the participantUpdated events about users and do not receive any events about listeners. To notify all application users about the number of participants who are present at a conference, the Android SDK 3.3 introduces the com.voxeet.sdk.push.center.subscription.event.ActiveParticipantsEvent events. The following graphic shows possible status changes during a conference:","title":"ParticipantUpdatedEvent"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-participant-updated-event/#properties","text":"Name Summary participant [Android] @ NonNull open var participant : Participant The conference participant.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-participant-updated-event/participant/","text":"// sdk / com.voxeet.sdk.events.v2 / ParticipantUpdatedEvent / participant participant \u00b6 [Android] @ NonNull open var participant : Participant The conference participant.","title":"Participant"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-participant-updated-event/participant/#participant","text":"[Android] @ NonNull open var participant : Participant The conference participant.","title":"participant"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-stream-added-event/","text":"// sdk / com.voxeet.sdk.events.v2 / StreamAddedEvent StreamAddedEvent \u00b6 [Android] open class StreamAddedEvent : SuccessEvent Emitted when the SDK adds a new stream to a conference participant. Each conference participant can be connected to two streams: the audio and video stream and the screen-share stream. If a participant enables audio or video, the SDK adds the audio and video stream to the participant and emits StreamAddedEvent to all participants. When a participant is connected to the audio and video stream and changes the stream, for example, enables a camera while using a microphone, the SDK updates the audio and video stream and emits StreamUpdatedEvent . When a participant starts sharing a screen, the SDK adds the screen-share stream to this participants and emits StreamAddedEvent to all participants. The following graphic shows this behavior: When a new participant joins a conference with enabled audio and video, the SDK emits StreamAddedEvent that includes audio and video tracks. The SDK can also emit StreamAddedEvent only for the local participant. When the local participant uses the stopAudio method to locally mute the selected remote participant who does not use a camera, the local participant receives StreamRemovedEvent . After using the startAudio method for this remote participant, the local participant receives StreamAddedEvent. Properties \u00b6 Name Summary mediaStream [Android] @ NonNull open var mediaStream : MediaStream The media stream. participant [Android] @ NonNull open var participant : Participant The conference participant.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-stream-added-event/#streamaddedevent","text":"[Android] open class StreamAddedEvent : SuccessEvent Emitted when the SDK adds a new stream to a conference participant. Each conference participant can be connected to two streams: the audio and video stream and the screen-share stream. If a participant enables audio or video, the SDK adds the audio and video stream to the participant and emits StreamAddedEvent to all participants. When a participant is connected to the audio and video stream and changes the stream, for example, enables a camera while using a microphone, the SDK updates the audio and video stream and emits StreamUpdatedEvent . When a participant starts sharing a screen, the SDK adds the screen-share stream to this participants and emits StreamAddedEvent to all participants. The following graphic shows this behavior: When a new participant joins a conference with enabled audio and video, the SDK emits StreamAddedEvent that includes audio and video tracks. The SDK can also emit StreamAddedEvent only for the local participant. When the local participant uses the stopAudio method to locally mute the selected remote participant who does not use a camera, the local participant receives StreamRemovedEvent . After using the startAudio method for this remote participant, the local participant receives StreamAddedEvent.","title":"StreamAddedEvent"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-stream-added-event/#properties","text":"Name Summary mediaStream [Android] @ NonNull open var mediaStream : MediaStream The media stream. participant [Android] @ NonNull open var participant : Participant The conference participant.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-stream-added-event/media-stream/","text":"// sdk / com.voxeet.sdk.events.v2 / StreamAddedEvent / mediaStream mediaStream \u00b6 [Android] @ NonNull open var mediaStream : MediaStream The media stream.","title":"Media stream"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-stream-added-event/media-stream/#mediastream","text":"[Android] @ NonNull open var mediaStream : MediaStream The media stream.","title":"mediaStream"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-stream-added-event/participant/","text":"// sdk / com.voxeet.sdk.events.v2 / StreamAddedEvent / participant participant \u00b6 [Android] @ NonNull open var participant : Participant The conference participant.","title":"Participant"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-stream-added-event/participant/#participant","text":"[Android] @ NonNull open var participant : Participant The conference participant.","title":"participant"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-stream-removed-event/","text":"// sdk / com.voxeet.sdk.events.v2 / StreamRemovedEvent StreamRemovedEvent \u00b6 [Android] open class StreamRemovedEvent : SuccessEvent Emitted when the SDK removes a stream from a conference participant. Each conference participant can be connected to two streams: the audio and video stream and the screen-share stream. If a participant disables audio and video or stops a screen-share presentation, the SDK removes the proper stream and emits StreamRemovedEvent to all conference participants. The SDK can also emit StreamRemovedEvent only for the local participant. When the local participant uses the stopAudio method to locally mute a selected remote participant who does not use a camera, the local participant receives StreamRemovedEvent. Properties \u00b6 Name Summary mediaStream [Android] @ NonNull open var mediaStream : MediaStream The media stream. participant [Android] @ NonNull open var participant : Participant The conference participant.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-stream-removed-event/#streamremovedevent","text":"[Android] open class StreamRemovedEvent : SuccessEvent Emitted when the SDK removes a stream from a conference participant. Each conference participant can be connected to two streams: the audio and video stream and the screen-share stream. If a participant disables audio and video or stops a screen-share presentation, the SDK removes the proper stream and emits StreamRemovedEvent to all conference participants. The SDK can also emit StreamRemovedEvent only for the local participant. When the local participant uses the stopAudio method to locally mute a selected remote participant who does not use a camera, the local participant receives StreamRemovedEvent.","title":"StreamRemovedEvent"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-stream-removed-event/#properties","text":"Name Summary mediaStream [Android] @ NonNull open var mediaStream : MediaStream The media stream. participant [Android] @ NonNull open var participant : Participant The conference participant.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-stream-removed-event/media-stream/","text":"// sdk / com.voxeet.sdk.events.v2 / StreamRemovedEvent / mediaStream mediaStream \u00b6 [Android] @ NonNull open var mediaStream : MediaStream The media stream.","title":"Media stream"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-stream-removed-event/media-stream/#mediastream","text":"[Android] @ NonNull open var mediaStream : MediaStream The media stream.","title":"mediaStream"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-stream-removed-event/participant/","text":"// sdk / com.voxeet.sdk.events.v2 / StreamRemovedEvent / participant participant \u00b6 [Android] @ NonNull open var participant : Participant The conference participant.","title":"Participant"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-stream-removed-event/participant/#participant","text":"[Android] @ NonNull open var participant : Participant The conference participant.","title":"participant"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-stream-updated-event/","text":"// sdk / com.voxeet.sdk.events.v2 / StreamUpdatedEvent StreamUpdatedEvent \u00b6 [Android] open class StreamUpdatedEvent : SuccessEvent Emitted when a conference participant who is connected to the audio and video stream changes the stream by enabling a microphone while using a camera or by enabling a camera while using a microphone. The event is emitted to all conference participants. The following graphic shows this behavior: The SDK can also emit StreamUpdatedEvent only for the local participant. When the local participant uses the stopAudio or startAudio method to locally mute or unmute a selected remote participant who uses a camera, the local participant receives StreamUpdatedEvent. Properties \u00b6 Name Summary mediaStream [Android] @ NonNull open var mediaStream : MediaStream The media stream. participant [Android] @ NonNull open var participant : Participant The conference participant.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-stream-updated-event/#streamupdatedevent","text":"[Android] open class StreamUpdatedEvent : SuccessEvent Emitted when a conference participant who is connected to the audio and video stream changes the stream by enabling a microphone while using a camera or by enabling a camera while using a microphone. The event is emitted to all conference participants. The following graphic shows this behavior: The SDK can also emit StreamUpdatedEvent only for the local participant. When the local participant uses the stopAudio or startAudio method to locally mute or unmute a selected remote participant who uses a camera, the local participant receives StreamUpdatedEvent.","title":"StreamUpdatedEvent"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-stream-updated-event/#properties","text":"Name Summary mediaStream [Android] @ NonNull open var mediaStream : MediaStream The media stream. participant [Android] @ NonNull open var participant : Participant The conference participant.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-stream-updated-event/media-stream/","text":"// sdk / com.voxeet.sdk.events.v2 / StreamUpdatedEvent / mediaStream mediaStream \u00b6 [Android] @ NonNull open var mediaStream : MediaStream The media stream.","title":"Media stream"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-stream-updated-event/media-stream/#mediastream","text":"[Android] @ NonNull open var mediaStream : MediaStream The media stream.","title":"mediaStream"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-stream-updated-event/participant/","text":"// sdk / com.voxeet.sdk.events.v2 / StreamUpdatedEvent / participant participant \u00b6 [Android] @ NonNull open var participant : Participant The conference participant.","title":"Participant"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-stream-updated-event/participant/#participant","text":"[Android] @ NonNull open var participant : Participant The conference participant.","title":"participant"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-video-state-event/","text":"// sdk / com.voxeet.sdk.events.v2 / VideoStateEvent VideoStateEvent \u00b6 [Android] open class VideoStateEvent Emitted when the local video state information has changed. Properties \u00b6 Name Summary mediaState [Android] @ NonNull open var mediaState : MediaState The new local video state.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-video-state-event/#videostateevent","text":"[Android] open class VideoStateEvent Emitted when the local video state information has changed.","title":"VideoStateEvent"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-video-state-event/#properties","text":"Name Summary mediaState [Android] @ NonNull open var mediaState : MediaState The new local video state.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-video-state-event/media-state/","text":"// sdk / com.voxeet.sdk.events.v2 / VideoStateEvent / mediaState mediaState \u00b6 [Android] @ NonNull open var mediaState : MediaState The new local video state.","title":"Media state"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v2/-video-state-event/media-state/#mediastate","text":"[Android] @ NonNull open var mediaState : MediaState The new local video state.","title":"mediaState"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v3/","text":"// sdk / com.voxeet.sdk.events.v3 Package-level declarations \u00b6 Types \u00b6 Name Summary ActiveSpeakerChangeEvent [Android] open class ActiveSpeakerChangeEvent Emitted when an active speaker changes during a conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v3/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v3/#types","text":"Name Summary ActiveSpeakerChangeEvent [Android] open class ActiveSpeakerChangeEvent Emitted when an active speaker changes during a conference.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v3/-active-speaker-change-event/","text":"// sdk / com.voxeet.sdk.events.v3 / ActiveSpeakerChangeEvent ActiveSpeakerChangeEvent \u00b6 [Android] open class ActiveSpeakerChangeEvent Emitted when an active speaker changes during a conference. Properties \u00b6 Name Summary activeParticipants [Android] @ NonNull open var activeParticipants : List < Participant > The list of active speakers. activeSpeakers [Android] @DeprecatedSince(value = \"3.6\") @ NonNull open var activeSpeakers : List < String > conference [Android] @ NonNull open var conference : Conference The conference in which an active speaker changed. unknownActiveSpeakers [Android] @ NonNull open var unknownActiveSpeakers : List < String > The optional list of participants who are known to be active, but not currently synced with the SDK.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v3/-active-speaker-change-event/#activespeakerchangeevent","text":"[Android] open class ActiveSpeakerChangeEvent Emitted when an active speaker changes during a conference.","title":"ActiveSpeakerChangeEvent"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v3/-active-speaker-change-event/#properties","text":"Name Summary activeParticipants [Android] @ NonNull open var activeParticipants : List < Participant > The list of active speakers. activeSpeakers [Android] @DeprecatedSince(value = \"3.6\") @ NonNull open var activeSpeakers : List < String > conference [Android] @ NonNull open var conference : Conference The conference in which an active speaker changed. unknownActiveSpeakers [Android] @ NonNull open var unknownActiveSpeakers : List < String > The optional list of participants who are known to be active, but not currently synced with the SDK.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v3/-active-speaker-change-event/active-participants/","text":"// sdk / com.voxeet.sdk.events.v3 / ActiveSpeakerChangeEvent / activeParticipants activeParticipants \u00b6 [Android] @ NonNull open var activeParticipants : List < Participant > The list of active speakers.","title":"Active participants"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v3/-active-speaker-change-event/active-participants/#activeparticipants","text":"[Android] @ NonNull open var activeParticipants : List < Participant > The list of active speakers.","title":"activeParticipants"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v3/-active-speaker-change-event/active-speakers/","text":"// sdk / com.voxeet.sdk.events.v3 / ActiveSpeakerChangeEvent / activeSpeakers activeSpeakers \u00b6 [Android] @DeprecatedSince(value = \"3.6\") @ NonNull open var activeSpeakers : List < String > Deprecated \u00b6 Deprecated \u00b6","title":"Active speakers"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v3/-active-speaker-change-event/active-speakers/#activespeakers","text":"[Android] @DeprecatedSince(value = \"3.6\") @ NonNull open var activeSpeakers : List < String >","title":"activeSpeakers"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v3/-active-speaker-change-event/active-speakers/#deprecated","text":"","title":"Deprecated"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v3/-active-speaker-change-event/active-speakers/#deprecated_1","text":"","title":"Deprecated"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v3/-active-speaker-change-event/conference/","text":"// sdk / com.voxeet.sdk.events.v3 / ActiveSpeakerChangeEvent / conference conference \u00b6 [Android] @ NonNull open var conference : Conference The conference in which an active speaker changed.","title":"Conference"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v3/-active-speaker-change-event/conference/#conference","text":"[Android] @ NonNull open var conference : Conference The conference in which an active speaker changed.","title":"conference"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v3/-active-speaker-change-event/unknown-active-speakers/","text":"// sdk / com.voxeet.sdk.events.v3 / ActiveSpeakerChangeEvent / unknownActiveSpeakers unknownActiveSpeakers \u00b6 [Android] @ NonNull open var unknownActiveSpeakers : List < String > The optional list of participants who are known to be active, but not currently synced with the SDK.","title":"Unknown active speakers"},{"location":"android-reference/sdk/com.voxeet.sdk.events.v3/-active-speaker-change-event/unknown-active-speakers/#unknownactivespeakers","text":"[Android] @ NonNull open var unknownActiveSpeakers : List < String > The optional list of participants who are known to be active, but not currently synced with the SDK.","title":"unknownActiveSpeakers"},{"location":"android-reference/sdk/com.voxeet.sdk.exceptions/","text":"// sdk / com.voxeet.sdk.exceptions Package-level declarations \u00b6 Types \u00b6 Name Summary ConferenceAtMaxCapacityError [Android] open class ConferenceAtMaxCapacityError : Exception The ConferenceAtMaxCapacityError occurs when a client tries to join a conference that reached a capacity limit and no longer accepts new participants. ConferencePermissionException [Android] open class ConferencePermissionException : IllegalStateException ConferencePermissionException indicates that a client does not have permission to execute a specific operation.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.exceptions/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.exceptions/#types","text":"Name Summary ConferenceAtMaxCapacityError [Android] open class ConferenceAtMaxCapacityError : Exception The ConferenceAtMaxCapacityError occurs when a client tries to join a conference that reached a capacity limit and no longer accepts new participants. ConferencePermissionException [Android] open class ConferencePermissionException : IllegalStateException ConferencePermissionException indicates that a client does not have permission to execute a specific operation.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.exceptions/-conference-at-max-capacity-error/","text":"// sdk / com.voxeet.sdk.exceptions / ConferenceAtMaxCapacityError ConferenceAtMaxCapacityError \u00b6 [Android] open class ConferenceAtMaxCapacityError : Exception The ConferenceAtMaxCapacityError occurs when a client tries to join a conference that reached a capacity limit and no longer accepts new participants.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.exceptions/-conference-at-max-capacity-error/#conferenceatmaxcapacityerror","text":"[Android] open class ConferenceAtMaxCapacityError : Exception The ConferenceAtMaxCapacityError occurs when a client tries to join a conference that reached a capacity limit and no longer accepts new participants.","title":"ConferenceAtMaxCapacityError"},{"location":"android-reference/sdk/com.voxeet.sdk.exceptions/-conference-permission-exception/","text":"// sdk / com.voxeet.sdk.exceptions / ConferencePermissionException ConferencePermissionException \u00b6 [Android] open class ConferencePermissionException : IllegalStateException ConferencePermissionException indicates that a client does not have permission to execute a specific operation.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.exceptions/-conference-permission-exception/#conferencepermissionexception","text":"[Android] open class ConferencePermissionException : IllegalStateException ConferencePermissionException indicates that a client does not have permission to execute a specific operation.","title":"ConferencePermissionException"},{"location":"android-reference/sdk/com.voxeet.sdk.json/","text":"// sdk / com.voxeet.sdk.json Package-level declarations \u00b6 Types \u00b6 Name Summary BroadcastEvent [Android] open class BroadcastEvent : Event Emitted when the message is broadcasted. ConferencePermission [Android] enum ConferencePermission The ConferencePermission model represents the possible permissions a participant may have in a conference. ConferenceStats [Android] open class ConferenceStats : Event Note : this class is parsed by Gson due to an issue with Jackson with HashMap : String -> HashMap : String -> Infos FilePresentationStarted [Android] open class FilePresentationStarted : Event Emitted when the presenter started the file presentation. FilePresentationStopped [Android] open class FilePresentationStopped : Event Emitted when the presenter ended the file presentation. FilePresentationUpdated [Android] open class FilePresentationUpdated : Event Emitted when the presenter changed the displayed page of the shared file. ParticipantInfo [Android] open class ParticipantInfo The ParticipantInfo model represents the participant's information concerning the participant's name, external ID, and avatar URL. ParticipantInvited [Android] open class ParticipantInvited The ParticipantInvited model contains information about participants invited to a conference and participants' permissions. RecordingStatusUpdatedEvent [Android] open class RecordingStatusUpdatedEvent : Event Emitted when the recording state of the conference is updated from the remote location. VideoPresentationPaused [Android] open class VideoPresentationPaused : Event Emitted when the presenter pauses the shared video. VideoPresentationPlay [Android] open class VideoPresentationPlay : Event Emitted when the presenter resumes the video presentation. VideoPresentationSeek [Android] open class VideoPresentationSeek : Event Emitted when the presenter changes the timestamp of the displayed video. VideoPresentationStarted [Android] open class VideoPresentationStarted : Event Emitted when the presenter starts sharing a video. VideoPresentationStopped [Android] open class VideoPresentationStopped : Event Emitted when the presenter stops sharing a video.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.json/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.json/#types","text":"Name Summary BroadcastEvent [Android] open class BroadcastEvent : Event Emitted when the message is broadcasted. ConferencePermission [Android] enum ConferencePermission The ConferencePermission model represents the possible permissions a participant may have in a conference. ConferenceStats [Android] open class ConferenceStats : Event Note : this class is parsed by Gson due to an issue with Jackson with HashMap : String -> HashMap : String -> Infos FilePresentationStarted [Android] open class FilePresentationStarted : Event Emitted when the presenter started the file presentation. FilePresentationStopped [Android] open class FilePresentationStopped : Event Emitted when the presenter ended the file presentation. FilePresentationUpdated [Android] open class FilePresentationUpdated : Event Emitted when the presenter changed the displayed page of the shared file. ParticipantInfo [Android] open class ParticipantInfo The ParticipantInfo model represents the participant's information concerning the participant's name, external ID, and avatar URL. ParticipantInvited [Android] open class ParticipantInvited The ParticipantInvited model contains information about participants invited to a conference and participants' permissions. RecordingStatusUpdatedEvent [Android] open class RecordingStatusUpdatedEvent : Event Emitted when the recording state of the conference is updated from the remote location. VideoPresentationPaused [Android] open class VideoPresentationPaused : Event Emitted when the presenter pauses the shared video. VideoPresentationPlay [Android] open class VideoPresentationPlay : Event Emitted when the presenter resumes the video presentation. VideoPresentationSeek [Android] open class VideoPresentationSeek : Event Emitted when the presenter changes the timestamp of the displayed video. VideoPresentationStarted [Android] open class VideoPresentationStarted : Event Emitted when the presenter starts sharing a video. VideoPresentationStopped [Android] open class VideoPresentationStopped : Event Emitted when the presenter stops sharing a video.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-broadcast-event/","text":"// sdk / com.voxeet.sdk.json / BroadcastEvent BroadcastEvent \u00b6 [Android] open class BroadcastEvent : Event Emitted when the message is broadcasted. Properties \u00b6 Name Summary message [Android] open var message : String The instance of the message. participantId [Android] open var participantId : String The ID of the participant who has sent the message.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-broadcast-event/#broadcastevent","text":"[Android] open class BroadcastEvent : Event Emitted when the message is broadcasted.","title":"BroadcastEvent"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-broadcast-event/#properties","text":"Name Summary message [Android] open var message : String The instance of the message. participantId [Android] open var participantId : String The ID of the participant who has sent the message.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-broadcast-event/message/","text":"// sdk / com.voxeet.sdk.json / BroadcastEvent / message message \u00b6 [Android] open var message : String The instance of the message.","title":"Message"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-broadcast-event/message/#message","text":"[Android] open var message : String The instance of the message.","title":"message"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-broadcast-event/participant-id/","text":"// sdk / com.voxeet.sdk.json / BroadcastEvent / participantId participantId \u00b6 [Android] open var participantId : String The ID of the participant who has sent the message.","title":"Participant id"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-broadcast-event/participant-id/#participantid","text":"[Android] open var participantId : String The ID of the participant who has sent the message.","title":"participantId"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/","text":"// sdk / com.voxeet.sdk.json / ConferencePermission ConferencePermission \u00b6 [Android] enum ConferencePermission The ConferencePermission model represents the possible permissions a participant may have in a conference. Entries \u00b6 INVITE [Android] INVITE Allows a participant to invite participants to a conference. KICK [Android] KICK Allows a participant to kick other participants from a conference UPDATE_PERMISSIONS [Android] UPDATE_PERMISSIONS Allows a participant to update other participants' permissions. JOIN [Android] JOIN Allows a participant to join a conference. SEND_AUDIO [Android] SEND_AUDIO Allows a participant to send an audio stream during a conference. SEND_VIDEO [Android] SEND_VIDEO Allows a participant to share a video during a conference. SHARE_SCREEN [Android] SHARE_SCREEN Allows a participant to share a screen during a conference. SHARE_VIDEO [Android] SHARE_VIDEO Allows a participant to send a video stream during a conference. SHARE_FILE [Android] SHARE_FILE Allows a participant to share a file during a conference. SEND_MESSAGE [Android] SEND_MESSAGE Allows a participant to send a message to other participants during a conference. RECORD [Android] RECORD Allows a participant to record a conference. STREAM [Android] STREAM Allows a participant to stream a conference. Functions \u00b6 Name Summary valueOf [Android] open fun valueOf (name: String ): ConferencePermission Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < ConferencePermission > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/#conferencepermission","text":"[Android] enum ConferencePermission The ConferencePermission model represents the possible permissions a participant may have in a conference.","title":"ConferencePermission"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/#entries","text":"INVITE [Android] INVITE Allows a participant to invite participants to a conference. KICK [Android] KICK Allows a participant to kick other participants from a conference UPDATE_PERMISSIONS [Android] UPDATE_PERMISSIONS Allows a participant to update other participants' permissions. JOIN [Android] JOIN Allows a participant to join a conference. SEND_AUDIO [Android] SEND_AUDIO Allows a participant to send an audio stream during a conference. SEND_VIDEO [Android] SEND_VIDEO Allows a participant to share a video during a conference. SHARE_SCREEN [Android] SHARE_SCREEN Allows a participant to share a screen during a conference. SHARE_VIDEO [Android] SHARE_VIDEO Allows a participant to send a video stream during a conference. SHARE_FILE [Android] SHARE_FILE Allows a participant to share a file during a conference. SEND_MESSAGE [Android] SEND_MESSAGE Allows a participant to send a message to other participants during a conference. RECORD [Android] RECORD Allows a participant to record a conference. STREAM [Android] STREAM Allows a participant to stream a conference.","title":"Entries"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/#functions","text":"Name Summary valueOf [Android] open fun valueOf (name: String ): ConferencePermission Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < ConferencePermission > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/value-of/","text":"// sdk / com.voxeet.sdk.json / ConferencePermission / valueOf valueOf \u00b6 [Android] open fun valueOf (name: String ): ConferencePermission Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) Return \u00b6 the enum constant with the specified name Throws \u00b6 IllegalArgumentException if this enum type has no constant with the specified name","title":"Value of"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/value-of/#valueof","text":"[Android] open fun valueOf (name: String ): ConferencePermission Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)","title":"valueOf"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/value-of/#return","text":"the enum constant with the specified name","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/value-of/#throws","text":"IllegalArgumentException if this enum type has no constant with the specified name","title":"Throws"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/values/","text":"// sdk / com.voxeet.sdk.json / ConferencePermission / values values \u00b6 [Android] open fun values (): Array < ConferencePermission > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants. Return \u00b6 an array containing the constants of this enum type, in the order they're declared","title":"Values"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/values/#values","text":"[Android] open fun values (): Array < ConferencePermission > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants.","title":"values"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/values/#return","text":"an array containing the constants of this enum type, in the order they're declared","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/-i-n-v-i-t-e/","text":"// sdk / com.voxeet.sdk.json / ConferencePermission / INVITE INVITE \u00b6 [Android] INVITE Allows a participant to invite participants to a conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/-i-n-v-i-t-e/#invite","text":"[Android] INVITE Allows a participant to invite participants to a conference.","title":"INVITE"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/-j-o-i-n/","text":"// sdk / com.voxeet.sdk.json / ConferencePermission / JOIN JOIN \u00b6 [Android] JOIN Allows a participant to join a conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/-j-o-i-n/#join","text":"[Android] JOIN Allows a participant to join a conference.","title":"JOIN"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/-k-i-c-k/","text":"// sdk / com.voxeet.sdk.json / ConferencePermission / KICK KICK \u00b6 [Android] KICK Allows a participant to kick other participants from a conference","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/-k-i-c-k/#kick","text":"[Android] KICK Allows a participant to kick other participants from a conference","title":"KICK"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/-r-e-c-o-r-d/","text":"// sdk / com.voxeet.sdk.json / ConferencePermission / RECORD RECORD \u00b6 [Android] RECORD Allows a participant to record a conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/-r-e-c-o-r-d/#record","text":"[Android] RECORD Allows a participant to record a conference.","title":"RECORD"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/-s-e-n-d_-a-u-d-i-o/","text":"// sdk / com.voxeet.sdk.json / ConferencePermission / SEND_AUDIO SEND_AUDIO \u00b6 [Android] SEND_AUDIO Allows a participant to send an audio stream during a conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/-s-e-n-d_-a-u-d-i-o/#send_audio","text":"[Android] SEND_AUDIO Allows a participant to send an audio stream during a conference.","title":"SEND_AUDIO"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/-s-e-n-d_-m-e-s-s-a-g-e/","text":"// sdk / com.voxeet.sdk.json / ConferencePermission / SEND_MESSAGE SEND_MESSAGE \u00b6 [Android] SEND_MESSAGE Allows a participant to send a message to other participants during a conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/-s-e-n-d_-m-e-s-s-a-g-e/#send_message","text":"[Android] SEND_MESSAGE Allows a participant to send a message to other participants during a conference.","title":"SEND_MESSAGE"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/-s-e-n-d_-v-i-d-e-o/","text":"// sdk / com.voxeet.sdk.json / ConferencePermission / SEND_VIDEO SEND_VIDEO \u00b6 [Android] SEND_VIDEO Allows a participant to share a video during a conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/-s-e-n-d_-v-i-d-e-o/#send_video","text":"[Android] SEND_VIDEO Allows a participant to share a video during a conference.","title":"SEND_VIDEO"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/-s-h-a-r-e_-f-i-l-e/","text":"// sdk / com.voxeet.sdk.json / ConferencePermission / SHARE_FILE SHARE_FILE \u00b6 [Android] SHARE_FILE Allows a participant to share a file during a conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/-s-h-a-r-e_-f-i-l-e/#share_file","text":"[Android] SHARE_FILE Allows a participant to share a file during a conference.","title":"SHARE_FILE"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/-s-h-a-r-e_-s-c-r-e-e-n/","text":"// sdk / com.voxeet.sdk.json / ConferencePermission / SHARE_SCREEN SHARE_SCREEN \u00b6 [Android] SHARE_SCREEN Allows a participant to share a screen during a conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/-s-h-a-r-e_-s-c-r-e-e-n/#share_screen","text":"[Android] SHARE_SCREEN Allows a participant to share a screen during a conference.","title":"SHARE_SCREEN"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/-s-h-a-r-e_-v-i-d-e-o/","text":"// sdk / com.voxeet.sdk.json / ConferencePermission / SHARE_VIDEO SHARE_VIDEO \u00b6 [Android] SHARE_VIDEO Allows a participant to send a video stream during a conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/-s-h-a-r-e_-v-i-d-e-o/#share_video","text":"[Android] SHARE_VIDEO Allows a participant to send a video stream during a conference.","title":"SHARE_VIDEO"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/-s-t-r-e-a-m/","text":"// sdk / com.voxeet.sdk.json / ConferencePermission / STREAM STREAM \u00b6 [Android] STREAM Allows a participant to stream a conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/-s-t-r-e-a-m/#stream","text":"[Android] STREAM Allows a participant to stream a conference.","title":"STREAM"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/-u-p-d-a-t-e_-p-e-r-m-i-s-s-i-o-n-s/","text":"// sdk / com.voxeet.sdk.json / ConferencePermission / UPDATE_PERMISSIONS UPDATE_PERMISSIONS \u00b6 [Android] UPDATE_PERMISSIONS Allows a participant to update other participants' permissions.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-permission/-u-p-d-a-t-e_-p-e-r-m-i-s-s-i-o-n-s/#update_permissions","text":"[Android] UPDATE_PERMISSIONS Allows a participant to update other participants' permissions.","title":"UPDATE_PERMISSIONS"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-stats/","text":"// sdk / com.voxeet.sdk.json / ConferenceStats ConferenceStats \u00b6 [Android] open class ConferenceStats : Event Note : this class is parsed by Gson due to an issue with Jackson with HashMap : String -> HashMap : String -> Infos Functions \u00b6 Name Summary getScore [Android] open fun getScore (@ NonNull userId: String ): Float Get the MoS of any given participant comparing to the current/local participant. [Android] open fun getScore (@ NonNull fromUserIdPoV: String , @ NonNull userId: String ): Float Informs about the current MoS of a given participantId from another one point of view (from the Matrix of MoS) getStats [Android] @ Nullable open fun getStats (@ NonNull userId: String ): ConferenceStats.Infos Get the Infos of a given Participant","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-stats/#conferencestats","text":"[Android] open class ConferenceStats : Event Note : this class is parsed by Gson due to an issue with Jackson with HashMap : String -> HashMap : String -> Infos","title":"ConferenceStats"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-stats/#functions","text":"Name Summary getScore [Android] open fun getScore (@ NonNull userId: String ): Float Get the MoS of any given participant comparing to the current/local participant. [Android] open fun getScore (@ NonNull fromUserIdPoV: String , @ NonNull userId: String ): Float Informs about the current MoS of a given participantId from another one point of view (from the Matrix of MoS) getStats [Android] @ Nullable open fun getStats (@ NonNull userId: String ): ConferenceStats.Infos Get the Infos of a given Participant","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-stats/get-score/","text":"// sdk / com.voxeet.sdk.json / ConferenceStats / getScore getScore \u00b6 [Android] open fun getScore (@ NonNull userId: String ): Float Get the MoS of any given participant comparing to the current/local participant. Return \u00b6 the MoS value. Parameters \u00b6 Android userId the participant id [Android] open fun getScore (@ NonNull fromUserIdPoV: String , @ NonNull userId: String ): Float Informs about the current MoS of a given participantId from another one point of view (from the Matrix of MoS) Return \u00b6 the MoS Parameters \u00b6 Android fromUserIdPoV the original participant from where looking at the MoS userId the corresponding/destination participant","title":"Get score"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-stats/get-score/#getscore","text":"[Android] open fun getScore (@ NonNull userId: String ): Float Get the MoS of any given participant comparing to the current/local participant.","title":"getScore"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-stats/get-score/#return","text":"the MoS value.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-stats/get-score/#parameters","text":"Android userId the participant id [Android] open fun getScore (@ NonNull fromUserIdPoV: String , @ NonNull userId: String ): Float Informs about the current MoS of a given participantId from another one point of view (from the Matrix of MoS)","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-stats/get-score/#return_1","text":"the MoS","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-stats/get-score/#parameters_1","text":"Android fromUserIdPoV the original participant from where looking at the MoS userId the corresponding/destination participant","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-stats/get-stats/","text":"// sdk / com.voxeet.sdk.json / ConferenceStats / getStats getStats \u00b6 [Android] @ Nullable open fun getStats (@ NonNull userId: String ): ConferenceStats.Infos Get the Infos of a given Participant Return \u00b6 the Infos or null of no such object is currently known Parameters \u00b6 Android userId the participant Id to get the stats from","title":"Get stats"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-stats/get-stats/#getstats","text":"[Android] @ Nullable open fun getStats (@ NonNull userId: String ): ConferenceStats.Infos Get the Infos of a given Participant","title":"getStats"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-stats/get-stats/#return","text":"the Infos or null of no such object is currently known","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-conference-stats/get-stats/#parameters","text":"Android userId the participant Id to get the stats from","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-started/","text":"// sdk / com.voxeet.sdk.json / FilePresentationStarted FilePresentationStarted \u00b6 [Android] open class FilePresentationStarted : Event Emitted when the presenter started the file presentation. Properties \u00b6 Name Summary conferenceId [Android] open var conferenceId : String The conference ID. fileId [Android] open var fileId : String The file ID. imageCount [Android] open var imageCount : Int The number of images of the presented file. position [Android] open var position : Int The currently displayed page of the shared file. userId [Android] open var userId : String The file owner's ID.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-started/#filepresentationstarted","text":"[Android] open class FilePresentationStarted : Event Emitted when the presenter started the file presentation.","title":"FilePresentationStarted"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-started/#properties","text":"Name Summary conferenceId [Android] open var conferenceId : String The conference ID. fileId [Android] open var fileId : String The file ID. imageCount [Android] open var imageCount : Int The number of images of the presented file. position [Android] open var position : Int The currently displayed page of the shared file. userId [Android] open var userId : String The file owner's ID.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-started/conference-id/","text":"// sdk / com.voxeet.sdk.json / FilePresentationStarted / conferenceId conferenceId \u00b6 [Android] open var conferenceId : String The conference ID.","title":"Conference id"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-started/conference-id/#conferenceid","text":"[Android] open var conferenceId : String The conference ID.","title":"conferenceId"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-started/file-id/","text":"// sdk / com.voxeet.sdk.json / FilePresentationStarted / fileId fileId \u00b6 [Android] open var fileId : String The file ID.","title":"File id"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-started/file-id/#fileid","text":"[Android] open var fileId : String The file ID.","title":"fileId"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-started/image-count/","text":"// sdk / com.voxeet.sdk.json / FilePresentationStarted / imageCount imageCount \u00b6 [Android] open var imageCount : Int The number of images of the presented file.","title":"Image count"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-started/image-count/#imagecount","text":"[Android] open var imageCount : Int The number of images of the presented file.","title":"imageCount"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-started/position/","text":"// sdk / com.voxeet.sdk.json / FilePresentationStarted / position position \u00b6 [Android] open var position : Int The currently displayed page of the shared file.","title":"Position"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-started/position/#position","text":"[Android] open var position : Int The currently displayed page of the shared file.","title":"position"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-started/user-id/","text":"// sdk / com.voxeet.sdk.json / FilePresentationStarted / userId userId \u00b6 [Android] open var userId : String The file owner's ID.","title":"User id"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-started/user-id/#userid","text":"[Android] open var userId : String The file owner's ID.","title":"userId"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-stopped/","text":"// sdk / com.voxeet.sdk.json / FilePresentationStopped FilePresentationStopped \u00b6 [Android] open class FilePresentationStopped : Event Emitted when the presenter ended the file presentation. Properties \u00b6 Name Summary conferenceId [Android] open var conferenceId : String The conference ID. fileId [Android] open var fileId : String The file ID. userId [Android] open var userId : String The file owner's ID.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-stopped/#filepresentationstopped","text":"[Android] open class FilePresentationStopped : Event Emitted when the presenter ended the file presentation.","title":"FilePresentationStopped"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-stopped/#properties","text":"Name Summary conferenceId [Android] open var conferenceId : String The conference ID. fileId [Android] open var fileId : String The file ID. userId [Android] open var userId : String The file owner's ID.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-stopped/conference-id/","text":"// sdk / com.voxeet.sdk.json / FilePresentationStopped / conferenceId conferenceId \u00b6 [Android] open var conferenceId : String The conference ID.","title":"Conference id"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-stopped/conference-id/#conferenceid","text":"[Android] open var conferenceId : String The conference ID.","title":"conferenceId"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-stopped/file-id/","text":"// sdk / com.voxeet.sdk.json / FilePresentationStopped / fileId fileId \u00b6 [Android] open var fileId : String The file ID.","title":"File id"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-stopped/file-id/#fileid","text":"[Android] open var fileId : String The file ID.","title":"fileId"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-stopped/user-id/","text":"// sdk / com.voxeet.sdk.json / FilePresentationStopped / userId userId \u00b6 [Android] open var userId : String The file owner's ID.","title":"User id"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-stopped/user-id/#userid","text":"[Android] open var userId : String The file owner's ID.","title":"userId"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-updated/","text":"// sdk / com.voxeet.sdk.json / FilePresentationUpdated FilePresentationUpdated \u00b6 [Android] open class FilePresentationUpdated : Event Emitted when the presenter changed the displayed page of the shared file. The event includes information about the current page number. Properties \u00b6 Name Summary conferenceId [Android] open var conferenceId : String The conference ID. fileId [Android] open var fileId : String The file ID. position [Android] open var position : Int The currently displayed page of the shared file. userId [Android] open var userId : String The file owner's ID.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-updated/#filepresentationupdated","text":"[Android] open class FilePresentationUpdated : Event Emitted when the presenter changed the displayed page of the shared file. The event includes information about the current page number.","title":"FilePresentationUpdated"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-updated/#properties","text":"Name Summary conferenceId [Android] open var conferenceId : String The conference ID. fileId [Android] open var fileId : String The file ID. position [Android] open var position : Int The currently displayed page of the shared file. userId [Android] open var userId : String The file owner's ID.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-updated/conference-id/","text":"// sdk / com.voxeet.sdk.json / FilePresentationUpdated / conferenceId conferenceId \u00b6 [Android] open var conferenceId : String The conference ID.","title":"Conference id"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-updated/conference-id/#conferenceid","text":"[Android] open var conferenceId : String The conference ID.","title":"conferenceId"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-updated/file-id/","text":"// sdk / com.voxeet.sdk.json / FilePresentationUpdated / fileId fileId \u00b6 [Android] open var fileId : String The file ID.","title":"File id"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-updated/file-id/#fileid","text":"[Android] open var fileId : String The file ID.","title":"fileId"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-updated/position/","text":"// sdk / com.voxeet.sdk.json / FilePresentationUpdated / position position \u00b6 [Android] open var position : Int The currently displayed page of the shared file.","title":"Position"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-updated/position/#position","text":"[Android] open var position : Int The currently displayed page of the shared file.","title":"position"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-updated/user-id/","text":"// sdk / com.voxeet.sdk.json / FilePresentationUpdated / userId userId \u00b6 [Android] open var userId : String The file owner's ID.","title":"User id"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-file-presentation-updated/user-id/#userid","text":"[Android] open var userId : String The file owner's ID.","title":"userId"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-participant-info/","text":"// sdk / com.voxeet.sdk.json / ParticipantInfo ParticipantInfo \u00b6 [Android] open class ParticipantInfo The ParticipantInfo model represents the participant's information concerning the participant's name, external ID, and avatar URL. Properties \u00b6 Name Summary avatarUrl [Android] @get: Nullable open var avatarUrl : String externalId [Android] @get: Nullable open var externalId : String name [Android] @get: Nullable open var name : String","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-participant-info/#participantinfo","text":"[Android] open class ParticipantInfo The ParticipantInfo model represents the participant's information concerning the participant's name, external ID, and avatar URL.","title":"ParticipantInfo"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-participant-info/#properties","text":"Name Summary avatarUrl [Android] @get: Nullable open var avatarUrl : String externalId [Android] @get: Nullable open var externalId : String name [Android] @get: Nullable open var name : String","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-participant-info/avatar-url/","text":"// sdk / com.voxeet.sdk.json / ParticipantInfo / avatarUrl avatarUrl \u00b6 [Android] @get: Nullable open var avatarUrl : String","title":"Avatar url"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-participant-info/avatar-url/#avatarurl","text":"[Android] @get: Nullable open var avatarUrl : String","title":"avatarUrl"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-participant-info/external-id/","text":"// sdk / com.voxeet.sdk.json / ParticipantInfo / externalId externalId \u00b6 [Android] @get: Nullable open var externalId : String","title":"External id"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-participant-info/external-id/#externalid","text":"[Android] @get: Nullable open var externalId : String","title":"externalId"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-participant-info/name/","text":"// sdk / com.voxeet.sdk.json / ParticipantInfo / name name \u00b6 [Android] @get: Nullable open var name : String","title":"Name"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-participant-info/name/#name","text":"[Android] @get: Nullable open var name : String","title":"name"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-participant-invited/","text":"// sdk / com.voxeet.sdk.json / ParticipantInvited ParticipantInvited \u00b6 [Android] open class ParticipantInvited The ParticipantInvited model contains information about participants invited to a conference and participants' permissions. Properties \u00b6 Name Summary participant [Android] open var participant : ParticipantInfo permissions [Android] open var permissions : Set < ConferencePermission >","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-participant-invited/#participantinvited","text":"[Android] open class ParticipantInvited The ParticipantInvited model contains information about participants invited to a conference and participants' permissions.","title":"ParticipantInvited"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-participant-invited/#properties","text":"Name Summary participant [Android] open var participant : ParticipantInfo permissions [Android] open var permissions : Set < ConferencePermission >","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-participant-invited/participant/","text":"// sdk / com.voxeet.sdk.json / ParticipantInvited / participant participant \u00b6 [Android] open var participant : ParticipantInfo","title":"Participant"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-participant-invited/participant/#participant","text":"[Android] open var participant : ParticipantInfo","title":"participant"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-participant-invited/permissions/","text":"// sdk / com.voxeet.sdk.json / ParticipantInvited / permissions permissions \u00b6 [Android] open var permissions : Set < ConferencePermission >","title":"Permissions"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-participant-invited/permissions/#permissions","text":"[Android] open var permissions : Set < ConferencePermission >","title":"permissions"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-recording-status-updated-event/","text":"// sdk / com.voxeet.sdk.json / RecordingStatusUpdatedEvent RecordingStatusUpdatedEvent \u00b6 [Android] open class RecordingStatusUpdatedEvent : Event Emitted when the recording state of the conference is updated from the remote location. Properties \u00b6 Name Summary conferenceId [Android] open var conferenceId : String The ID of the recorded conference. participantId [Android] open var participantId : String The ID of the participant who has recorded the conference. recordingStatus [Android] open var recordingStatus : String The representation of raw recording status. timeStamp [Android] open var timeStamp : Long The corresponding timestamp.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-recording-status-updated-event/#recordingstatusupdatedevent","text":"[Android] open class RecordingStatusUpdatedEvent : Event Emitted when the recording state of the conference is updated from the remote location.","title":"RecordingStatusUpdatedEvent"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-recording-status-updated-event/#properties","text":"Name Summary conferenceId [Android] open var conferenceId : String The ID of the recorded conference. participantId [Android] open var participantId : String The ID of the participant who has recorded the conference. recordingStatus [Android] open var recordingStatus : String The representation of raw recording status. timeStamp [Android] open var timeStamp : Long The corresponding timestamp.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-recording-status-updated-event/conference-id/","text":"// sdk / com.voxeet.sdk.json / RecordingStatusUpdatedEvent / conferenceId conferenceId \u00b6 [Android] open var conferenceId : String The ID of the recorded conference.","title":"Conference id"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-recording-status-updated-event/conference-id/#conferenceid","text":"[Android] open var conferenceId : String The ID of the recorded conference.","title":"conferenceId"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-recording-status-updated-event/participant-id/","text":"// sdk / com.voxeet.sdk.json / RecordingStatusUpdatedEvent / participantId participantId \u00b6 [Android] open var participantId : String The ID of the participant who has recorded the conference.","title":"Participant id"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-recording-status-updated-event/participant-id/#participantid","text":"[Android] open var participantId : String The ID of the participant who has recorded the conference.","title":"participantId"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-recording-status-updated-event/recording-status/","text":"// sdk / com.voxeet.sdk.json / RecordingStatusUpdatedEvent / recordingStatus recordingStatus \u00b6 [Android] open var recordingStatus : String The representation of raw recording status.","title":"Recording status"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-recording-status-updated-event/recording-status/#recordingstatus","text":"[Android] open var recordingStatus : String The representation of raw recording status.","title":"recordingStatus"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-recording-status-updated-event/time-stamp/","text":"// sdk / com.voxeet.sdk.json / RecordingStatusUpdatedEvent / timeStamp timeStamp \u00b6 [Android] open var timeStamp : Long The corresponding timestamp.","title":"Time stamp"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-recording-status-updated-event/time-stamp/#timestamp","text":"[Android] open var timeStamp : Long The corresponding timestamp.","title":"timeStamp"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-paused/","text":"// sdk / com.voxeet.sdk.json / VideoPresentationPaused VideoPresentationPaused \u00b6 [Android] open class VideoPresentationPaused : Event Emitted when the presenter pauses the shared video. Properties \u00b6 Name Summary conferenceId [Android] open var conferenceId : String The conference ID. key [Android] open var key : String The key of the current video. participantId [Android] open var participantId : String The ID of the participant who shares a video. timestamp [Android] open var timestamp : Long The current timestamp of the shared video.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-paused/#videopresentationpaused","text":"[Android] open class VideoPresentationPaused : Event Emitted when the presenter pauses the shared video.","title":"VideoPresentationPaused"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-paused/#properties","text":"Name Summary conferenceId [Android] open var conferenceId : String The conference ID. key [Android] open var key : String The key of the current video. participantId [Android] open var participantId : String The ID of the participant who shares a video. timestamp [Android] open var timestamp : Long The current timestamp of the shared video.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-paused/conference-id/","text":"// sdk / com.voxeet.sdk.json / VideoPresentationPaused / conferenceId conferenceId \u00b6 [Android] open var conferenceId : String The conference ID.","title":"Conference id"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-paused/conference-id/#conferenceid","text":"[Android] open var conferenceId : String The conference ID.","title":"conferenceId"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-paused/key/","text":"// sdk / com.voxeet.sdk.json / VideoPresentationPaused / key key \u00b6 [Android] open var key : String The key of the current video.","title":"Key"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-paused/key/#key","text":"[Android] open var key : String The key of the current video.","title":"key"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-paused/participant-id/","text":"// sdk / com.voxeet.sdk.json / VideoPresentationPaused / participantId participantId \u00b6 [Android] open var participantId : String The ID of the participant who shares a video.","title":"Participant id"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-paused/participant-id/#participantid","text":"[Android] open var participantId : String The ID of the participant who shares a video.","title":"participantId"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-paused/timestamp/","text":"// sdk / com.voxeet.sdk.json / VideoPresentationPaused / timestamp timestamp \u00b6 [Android] open var timestamp : Long The current timestamp of the shared video.","title":"Timestamp"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-paused/timestamp/#timestamp","text":"[Android] open var timestamp : Long The current timestamp of the shared video.","title":"timestamp"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-play/","text":"// sdk / com.voxeet.sdk.json / VideoPresentationPlay VideoPresentationPlay \u00b6 [Android] open class VideoPresentationPlay : Event Emitted when the presenter resumes the video presentation. Properties \u00b6 Name Summary conferenceId [Android] open var conferenceId : String The conference ID. key [Android] open var key : String The key of the current video. participantId [Android] open var participantId : String The ID of the participant who shares a video. timestamp [Android] open var timestamp : Long The current timestamp of the shared video.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-play/#videopresentationplay","text":"[Android] open class VideoPresentationPlay : Event Emitted when the presenter resumes the video presentation.","title":"VideoPresentationPlay"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-play/#properties","text":"Name Summary conferenceId [Android] open var conferenceId : String The conference ID. key [Android] open var key : String The key of the current video. participantId [Android] open var participantId : String The ID of the participant who shares a video. timestamp [Android] open var timestamp : Long The current timestamp of the shared video.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-play/conference-id/","text":"// sdk / com.voxeet.sdk.json / VideoPresentationPlay / conferenceId conferenceId \u00b6 [Android] open var conferenceId : String The conference ID.","title":"Conference id"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-play/conference-id/#conferenceid","text":"[Android] open var conferenceId : String The conference ID.","title":"conferenceId"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-play/key/","text":"// sdk / com.voxeet.sdk.json / VideoPresentationPlay / key key \u00b6 [Android] open var key : String The key of the current video.","title":"Key"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-play/key/#key","text":"[Android] open var key : String The key of the current video.","title":"key"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-play/participant-id/","text":"// sdk / com.voxeet.sdk.json / VideoPresentationPlay / participantId participantId \u00b6 [Android] open var participantId : String The ID of the participant who shares a video.","title":"Participant id"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-play/participant-id/#participantid","text":"[Android] open var participantId : String The ID of the participant who shares a video.","title":"participantId"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-play/timestamp/","text":"// sdk / com.voxeet.sdk.json / VideoPresentationPlay / timestamp timestamp \u00b6 [Android] open var timestamp : Long The current timestamp of the shared video.","title":"Timestamp"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-play/timestamp/#timestamp","text":"[Android] open var timestamp : Long The current timestamp of the shared video.","title":"timestamp"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-seek/","text":"// sdk / com.voxeet.sdk.json / VideoPresentationSeek VideoPresentationSeek \u00b6 [Android] open class VideoPresentationSeek : Event Emitted when the presenter changes the timestamp of the displayed video. Properties \u00b6 Name Summary conferenceId [Android] open var conferenceId : String The conference ID. key [Android] open var key : String The key of the current video. participantId [Android] open var participantId : String The ID of the participant who shares a video. timestamp [Android] open var timestamp : Long The current timestamp of the shared video.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-seek/#videopresentationseek","text":"[Android] open class VideoPresentationSeek : Event Emitted when the presenter changes the timestamp of the displayed video.","title":"VideoPresentationSeek"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-seek/#properties","text":"Name Summary conferenceId [Android] open var conferenceId : String The conference ID. key [Android] open var key : String The key of the current video. participantId [Android] open var participantId : String The ID of the participant who shares a video. timestamp [Android] open var timestamp : Long The current timestamp of the shared video.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-seek/conference-id/","text":"// sdk / com.voxeet.sdk.json / VideoPresentationSeek / conferenceId conferenceId \u00b6 [Android] open var conferenceId : String The conference ID.","title":"Conference id"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-seek/conference-id/#conferenceid","text":"[Android] open var conferenceId : String The conference ID.","title":"conferenceId"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-seek/key/","text":"// sdk / com.voxeet.sdk.json / VideoPresentationSeek / key key \u00b6 [Android] open var key : String The key of the current video.","title":"Key"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-seek/key/#key","text":"[Android] open var key : String The key of the current video.","title":"key"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-seek/participant-id/","text":"// sdk / com.voxeet.sdk.json / VideoPresentationSeek / participantId participantId \u00b6 [Android] open var participantId : String The ID of the participant who shares a video.","title":"Participant id"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-seek/participant-id/#participantid","text":"[Android] open var participantId : String The ID of the participant who shares a video.","title":"participantId"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-seek/timestamp/","text":"// sdk / com.voxeet.sdk.json / VideoPresentationSeek / timestamp timestamp \u00b6 [Android] open var timestamp : Long The current timestamp of the shared video.","title":"Timestamp"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-seek/timestamp/#timestamp","text":"[Android] open var timestamp : Long The current timestamp of the shared video.","title":"timestamp"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-started/","text":"// sdk / com.voxeet.sdk.json / VideoPresentationStarted VideoPresentationStarted \u00b6 [Android] open class VideoPresentationStarted : Event Emitted when the presenter starts sharing a video. Properties \u00b6 Name Summary conferenceId [Android] open var conferenceId : String The conference ID. key [Android] open var key : String The key of the current video. participantId [Android] open var participantId : String The ID of the participant who shares a video. timestamp [Android] open var timestamp : Long The current timestamp of the shared video. url [Android] open var url : String The URL of the video location.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-started/#videopresentationstarted","text":"[Android] open class VideoPresentationStarted : Event Emitted when the presenter starts sharing a video.","title":"VideoPresentationStarted"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-started/#properties","text":"Name Summary conferenceId [Android] open var conferenceId : String The conference ID. key [Android] open var key : String The key of the current video. participantId [Android] open var participantId : String The ID of the participant who shares a video. timestamp [Android] open var timestamp : Long The current timestamp of the shared video. url [Android] open var url : String The URL of the video location.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-started/conference-id/","text":"// sdk / com.voxeet.sdk.json / VideoPresentationStarted / conferenceId conferenceId \u00b6 [Android] open var conferenceId : String The conference ID.","title":"Conference id"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-started/conference-id/#conferenceid","text":"[Android] open var conferenceId : String The conference ID.","title":"conferenceId"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-started/key/","text":"// sdk / com.voxeet.sdk.json / VideoPresentationStarted / key key \u00b6 [Android] open var key : String The key of the current video.","title":"Key"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-started/key/#key","text":"[Android] open var key : String The key of the current video.","title":"key"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-started/participant-id/","text":"// sdk / com.voxeet.sdk.json / VideoPresentationStarted / participantId participantId \u00b6 [Android] open var participantId : String The ID of the participant who shares a video.","title":"Participant id"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-started/participant-id/#participantid","text":"[Android] open var participantId : String The ID of the participant who shares a video.","title":"participantId"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-started/timestamp/","text":"// sdk / com.voxeet.sdk.json / VideoPresentationStarted / timestamp timestamp \u00b6 [Android] open var timestamp : Long The current timestamp of the shared video.","title":"Timestamp"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-started/timestamp/#timestamp","text":"[Android] open var timestamp : Long The current timestamp of the shared video.","title":"timestamp"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-started/url/","text":"// sdk / com.voxeet.sdk.json / VideoPresentationStarted / url url \u00b6 [Android] open var url : String The URL of the video location.","title":"Url"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-started/url/#url","text":"[Android] open var url : String The URL of the video location.","title":"url"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-stopped/","text":"// sdk / com.voxeet.sdk.json / VideoPresentationStopped VideoPresentationStopped \u00b6 [Android] open class VideoPresentationStopped : Event Emitted when the presenter stops sharing a video. Properties \u00b6 Name Summary conferenceId [Android] open var conferenceId : String The conference ID. key [Android] open var key : String The key of the current video. participantId [Android] open var participantId : String The ID of the participant who shares a video.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-stopped/#videopresentationstopped","text":"[Android] open class VideoPresentationStopped : Event Emitted when the presenter stops sharing a video.","title":"VideoPresentationStopped"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-stopped/#properties","text":"Name Summary conferenceId [Android] open var conferenceId : String The conference ID. key [Android] open var key : String The key of the current video. participantId [Android] open var participantId : String The ID of the participant who shares a video.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-stopped/conference-id/","text":"// sdk / com.voxeet.sdk.json / VideoPresentationStopped / conferenceId conferenceId \u00b6 [Android] open var conferenceId : String The conference ID.","title":"Conference id"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-stopped/conference-id/#conferenceid","text":"[Android] open var conferenceId : String The conference ID.","title":"conferenceId"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-stopped/key/","text":"// sdk / com.voxeet.sdk.json / VideoPresentationStopped / key key \u00b6 [Android] open var key : String The key of the current video.","title":"Key"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-stopped/key/#key","text":"[Android] open var key : String The key of the current video.","title":"key"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-stopped/participant-id/","text":"// sdk / com.voxeet.sdk.json / VideoPresentationStopped / participantId participantId \u00b6 [Android] open var participantId : String The ID of the participant who shares a video.","title":"Participant id"},{"location":"android-reference/sdk/com.voxeet.sdk.json/-video-presentation-stopped/participant-id/#participantid","text":"[Android] open var participantId : String The ID of the participant who shares a video.","title":"participantId"},{"location":"android-reference/sdk/com.voxeet.sdk.json.internal/","text":"// sdk / com.voxeet.sdk.json.internal Package-level declarations \u00b6 Types \u00b6 Name Summary ParamsHolder [Android] open class ParamsHolder The ParamsHolder model allows defining details of a conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.json.internal/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.json.internal/#types","text":"Name Summary ParamsHolder [Android] open class ParamsHolder The ParamsHolder model allows defining details of a conference.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.json.internal/-params-holder/","text":"// sdk / com.voxeet.sdk.json.internal / ParamsHolder ParamsHolder \u00b6 [Android] open class ParamsHolder The ParamsHolder model allows defining details of a conference. Functions \u00b6 Name Summary build [Android] @ NonNull open fun build (): HashMap < String , Any > Builds a holder in a native HashMap. setAudioOnly [Android] open fun setAudioOnly (audioOnly: Boolean ): ParamsHolder A boolean that indicates whether the application wishes to create an audio-only conference. setDolbyVoice [Android] open fun setDolbyVoice (activate: Boolean ): ParamsHolder Creates a conference enabled with Dolby Voice. setLiveRecording [Android] open fun setLiveRecording (isEnabled: Boolean ): ParamsHolder A boolean that enables and disables live recording. setRtcpMode [Android] open fun setRtcpMode (mode: String ): ParamsHolder The bitrate adaptation mode for video transmission. setSimulcast [Android] open fun setSimulcast (state: Boolean ): ParamsHolder Sets the Simulcast transmission for a specific conference. setSpatialAudioStyle [Android] open fun setSpatialAudioStyle (@ NonNull spatialAudioStyle: SpatialAudioStyle ): ParamsHolder Defines how the spatial location should be communicated between the SDK and the Dolby.io server. setTtl [Android] open fun setTtl (time: Int ): ParamsHolder The time to live defines the number of seconds a conference is kept running when empty. setVideoCodec [Android] open fun setVideoCodec (@ NonNull videoCodec: String ): ParamsHolder The preferred video codec, either H264, VP8, or none.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.json.internal/-params-holder/#paramsholder","text":"[Android] open class ParamsHolder The ParamsHolder model allows defining details of a conference.","title":"ParamsHolder"},{"location":"android-reference/sdk/com.voxeet.sdk.json.internal/-params-holder/#functions","text":"Name Summary build [Android] @ NonNull open fun build (): HashMap < String , Any > Builds a holder in a native HashMap. setAudioOnly [Android] open fun setAudioOnly (audioOnly: Boolean ): ParamsHolder A boolean that indicates whether the application wishes to create an audio-only conference. setDolbyVoice [Android] open fun setDolbyVoice (activate: Boolean ): ParamsHolder Creates a conference enabled with Dolby Voice. setLiveRecording [Android] open fun setLiveRecording (isEnabled: Boolean ): ParamsHolder A boolean that enables and disables live recording. setRtcpMode [Android] open fun setRtcpMode (mode: String ): ParamsHolder The bitrate adaptation mode for video transmission. setSimulcast [Android] open fun setSimulcast (state: Boolean ): ParamsHolder Sets the Simulcast transmission for a specific conference. setSpatialAudioStyle [Android] open fun setSpatialAudioStyle (@ NonNull spatialAudioStyle: SpatialAudioStyle ): ParamsHolder Defines how the spatial location should be communicated between the SDK and the Dolby.io server. setTtl [Android] open fun setTtl (time: Int ): ParamsHolder The time to live defines the number of seconds a conference is kept running when empty. setVideoCodec [Android] open fun setVideoCodec (@ NonNull videoCodec: String ): ParamsHolder The preferred video codec, either H264, VP8, or none.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.json.internal/-params-holder/build/","text":"// sdk / com.voxeet.sdk.json.internal / ParamsHolder / build build \u00b6 [Android] @ NonNull open fun build (): HashMap < String , Any > Builds a holder in a native HashMap.","title":"Build"},{"location":"android-reference/sdk/com.voxeet.sdk.json.internal/-params-holder/build/#build","text":"[Android] @ NonNull open fun build (): HashMap < String , Any > Builds a holder in a native HashMap.","title":"build"},{"location":"android-reference/sdk/com.voxeet.sdk.json.internal/-params-holder/set-audio-only/","text":"// sdk / com.voxeet.sdk.json.internal / ParamsHolder / setAudioOnly setAudioOnly \u00b6 [Android] open fun setAudioOnly (audioOnly: Boolean ): ParamsHolder A boolean that indicates whether the application wishes to create an audio-only conference. Setting this parameter to true results in creating a conference that does not allow participants to enable their videos . Parameters \u00b6 Android audioOnly A boolean that indicates whether SDK should create an audio-only conference.","title":"Set audio only"},{"location":"android-reference/sdk/com.voxeet.sdk.json.internal/-params-holder/set-audio-only/#setaudioonly","text":"[Android] open fun setAudioOnly (audioOnly: Boolean ): ParamsHolder A boolean that indicates whether the application wishes to create an audio-only conference. Setting this parameter to true results in creating a conference that does not allow participants to enable their videos .","title":"setAudioOnly"},{"location":"android-reference/sdk/com.voxeet.sdk.json.internal/-params-holder/set-audio-only/#parameters","text":"Android audioOnly A boolean that indicates whether SDK should create an audio-only conference.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.json.internal/-params-holder/set-dolby-voice/","text":"// sdk / com.voxeet.sdk.json.internal / ParamsHolder / setDolbyVoice setDolbyVoice \u00b6 [Android] open fun setDolbyVoice (activate: Boolean ): ParamsHolder Creates a conference enabled with Dolby Voice. For more information about Dolby Voice, see this article . By default, the parameter is set to true . Parameters \u00b6 Android activate A boolean that specifies whether the application wishes to create a Dolby Voice conference.","title":"Set dolby voice"},{"location":"android-reference/sdk/com.voxeet.sdk.json.internal/-params-holder/set-dolby-voice/#setdolbyvoice","text":"[Android] open fun setDolbyVoice (activate: Boolean ): ParamsHolder Creates a conference enabled with Dolby Voice. For more information about Dolby Voice, see this article . By default, the parameter is set to true .","title":"setDolbyVoice"},{"location":"android-reference/sdk/com.voxeet.sdk.json.internal/-params-holder/set-dolby-voice/#parameters","text":"Android activate A boolean that specifies whether the application wishes to create a Dolby Voice conference.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.json.internal/-params-holder/set-live-recording/","text":"// sdk / com.voxeet.sdk.json.internal / ParamsHolder / setLiveRecording setLiveRecording \u00b6 [Android] open fun setLiveRecording (isEnabled: Boolean ): ParamsHolder A boolean that enables and disables live recording. Specify this parameter during the conference creation: Recording audio during Dolby Voice conferences does not require setting the liveRecording parameter. The audio recording is always available in MP3 file and can be downloaded just after the end of a conference. This recording mechanism does not use Mixer. If liveRecording is set to true, and the start method is called, the platform uses Mixer to record a conference. After the conference, the recorded file, in MP3 or MP4 format, is available for download. The recording is also available via the replay method. If liveRecording is set to false, the platform uses a recording mechanism that does not use Mixer. The recorded conference is available only via the replay method. This parameter does not start the recording; use the start method to turn it on. Parameters \u00b6 Android isEnabled A boolean that indicates whether liveRecording should be enabled.","title":"Set live recording"},{"location":"android-reference/sdk/com.voxeet.sdk.json.internal/-params-holder/set-live-recording/#setliverecording","text":"[Android] open fun setLiveRecording (isEnabled: Boolean ): ParamsHolder A boolean that enables and disables live recording. Specify this parameter during the conference creation: Recording audio during Dolby Voice conferences does not require setting the liveRecording parameter. The audio recording is always available in MP3 file and can be downloaded just after the end of a conference. This recording mechanism does not use Mixer. If liveRecording is set to true, and the start method is called, the platform uses Mixer to record a conference. After the conference, the recorded file, in MP3 or MP4 format, is available for download. The recording is also available via the replay method. If liveRecording is set to false, the platform uses a recording mechanism that does not use Mixer. The recorded conference is available only via the replay method. This parameter does not start the recording; use the start method to turn it on.","title":"setLiveRecording"},{"location":"android-reference/sdk/com.voxeet.sdk.json.internal/-params-holder/set-live-recording/#parameters","text":"Android isEnabled A boolean that indicates whether liveRecording should be enabled.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.json.internal/-params-holder/set-rtcp-mode/","text":"// sdk / com.voxeet.sdk.json.internal / ParamsHolder / setRtcpMode setRtcpMode \u00b6 [Android] open fun setRtcpMode (mode: String ): ParamsHolder The bitrate adaptation mode for video transmission. The parameter triggers a server to monitor the receivers\u2019 available bandwidth. Based on the analyzed value, the server informs the video sender to automatically adjust the quality of the transmitted video streams. Parameters \u00b6 Android mode The requested rtcpMode, either worst, average (default), or max.","title":"Set rtcp mode"},{"location":"android-reference/sdk/com.voxeet.sdk.json.internal/-params-holder/set-rtcp-mode/#setrtcpmode","text":"[Android] open fun setRtcpMode (mode: String ): ParamsHolder The bitrate adaptation mode for video transmission. The parameter triggers a server to monitor the receivers\u2019 available bandwidth. Based on the analyzed value, the server informs the video sender to automatically adjust the quality of the transmitted video streams.","title":"setRtcpMode"},{"location":"android-reference/sdk/com.voxeet.sdk.json.internal/-params-holder/set-rtcp-mode/#parameters","text":"Android mode The requested rtcpMode, either worst, average (default), or max.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.json.internal/-params-holder/set-simulcast/","text":"// sdk / com.voxeet.sdk.json.internal / ParamsHolder / setSimulcast setSimulcast \u00b6 [Android] open fun setSimulcast (state: Boolean ): ParamsHolder Sets the Simulcast transmission for a specific conference. Parameters \u00b6 Android state A boolean that indicates whether SDK should enable Simulcast.","title":"Set simulcast"},{"location":"android-reference/sdk/com.voxeet.sdk.json.internal/-params-holder/set-simulcast/#setsimulcast","text":"[Android] open fun setSimulcast (state: Boolean ): ParamsHolder Sets the Simulcast transmission for a specific conference.","title":"setSimulcast"},{"location":"android-reference/sdk/com.voxeet.sdk.json.internal/-params-holder/set-simulcast/#parameters","text":"Android state A boolean that indicates whether SDK should enable Simulcast.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.json.internal/-params-holder/set-spatial-audio-style/","text":"// sdk / com.voxeet.sdk.json.internal / ParamsHolder / setSpatialAudioStyle setSpatialAudioStyle \u00b6 [Android] open fun setSpatialAudioStyle (@ NonNull spatialAudioStyle: SpatialAudioStyle ): ParamsHolder Defines how the spatial location should be communicated between the SDK and the Dolby.io server. Setting the spatial audio style is supported only on SDK 3.6 and later versions. The earlier SDK versions support only the individual mode and do not allow participants to join conferences created with the spatial audio style set to shared. Parameters \u00b6 Android spatialAudioStyle The spatial audio style.","title":"Set spatial audio style"},{"location":"android-reference/sdk/com.voxeet.sdk.json.internal/-params-holder/set-spatial-audio-style/#setspatialaudiostyle","text":"[Android] open fun setSpatialAudioStyle (@ NonNull spatialAudioStyle: SpatialAudioStyle ): ParamsHolder Defines how the spatial location should be communicated between the SDK and the Dolby.io server. Setting the spatial audio style is supported only on SDK 3.6 and later versions. The earlier SDK versions support only the individual mode and do not allow participants to join conferences created with the spatial audio style set to shared.","title":"setSpatialAudioStyle"},{"location":"android-reference/sdk/com.voxeet.sdk.json.internal/-params-holder/set-spatial-audio-style/#parameters","text":"Android spatialAudioStyle The spatial audio style.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.json.internal/-params-holder/set-ttl/","text":"// sdk / com.voxeet.sdk.json.internal / ParamsHolder / setTtl setTtl \u00b6 [Android] open fun setTtl (time: Int ): ParamsHolder The time to live defines the number of seconds a conference is kept running when empty. A minimum of 30 seconds is given when creating the conference to allow time for participants to join. The default value is 0. Parameters \u00b6 Android time The time to live (in seconds).","title":"Set ttl"},{"location":"android-reference/sdk/com.voxeet.sdk.json.internal/-params-holder/set-ttl/#setttl","text":"[Android] open fun setTtl (time: Int ): ParamsHolder The time to live defines the number of seconds a conference is kept running when empty. A minimum of 30 seconds is given when creating the conference to allow time for participants to join. The default value is 0.","title":"setTtl"},{"location":"android-reference/sdk/com.voxeet.sdk.json.internal/-params-holder/set-ttl/#parameters","text":"Android time The time to live (in seconds).","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.json.internal/-params-holder/set-video-codec/","text":"// sdk / com.voxeet.sdk.json.internal / ParamsHolder / setVideoCodec setVideoCodec \u00b6 [Android] open fun setVideoCodec (@ NonNull videoCodec: String ): ParamsHolder The preferred video codec, either H264, VP8, or none. By default, the value is set to H264. Setting this parameter to none results in creating a conference that does not allow participants to enable their videos. Parameters \u00b6 Android videoCodec The selected video codec.","title":"Set video codec"},{"location":"android-reference/sdk/com.voxeet.sdk.json.internal/-params-holder/set-video-codec/#setvideocodec","text":"[Android] open fun setVideoCodec (@ NonNull videoCodec: String ): ParamsHolder The preferred video codec, either H264, VP8, or none. By default, the value is set to H264. Setting this parameter to none results in creating a conference that does not allow participants to enable their videos.","title":"setVideoCodec"},{"location":"android-reference/sdk/com.voxeet.sdk.json.internal/-params-holder/set-video-codec/#parameters","text":"Android videoCodec The selected video codec.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/","text":"// sdk / com.voxeet.sdk.media.audio Package-level declarations \u00b6 Types \u00b6 Name Summary ParticipantPosition [Android] open class ParticipantPosition The ParticipantPosition model informs about the participant's position in the spatial audio environment. SoundManager [Android] open class SoundManager : IAudioRouteListener The SoundManager model enables audio stack management.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/#types","text":"Name Summary ParticipantPosition [Android] open class ParticipantPosition The ParticipantPosition model informs about the participant's position in the spatial audio environment. SoundManager [Android] open class SoundManager : IAudioRouteListener The SoundManager model enables audio stack management.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-participant-position/","text":"// sdk / com.voxeet.sdk.media.audio / ParticipantPosition ParticipantPosition \u00b6 [Android] open class ParticipantPosition The ParticipantPosition model informs about the participant's position in the spatial audio environment. It contains information about the distance and angle . Constructors \u00b6 ParticipantPosition [Android] open fun ParticipantPosition (distance: Double , angle: Double ) Constructs a spatial position of the Participant . Properties \u00b6 Name Summary angle [Android] open var angle : Double The angle (in radians). distance [Android] open var distance : Double The distance from the current Participant (in meters).","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-participant-position/#participantposition","text":"[Android] open class ParticipantPosition The ParticipantPosition model informs about the participant's position in the spatial audio environment. It contains information about the distance and angle .","title":"ParticipantPosition"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-participant-position/#constructors","text":"ParticipantPosition [Android] open fun ParticipantPosition (distance: Double , angle: Double ) Constructs a spatial position of the Participant .","title":"Constructors"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-participant-position/#properties","text":"Name Summary angle [Android] open var angle : Double The angle (in radians). distance [Android] open var distance : Double The distance from the current Participant (in meters).","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-participant-position/-participant-position/","text":"// sdk / com.voxeet.sdk.media.audio / ParticipantPosition / ParticipantPosition ParticipantPosition \u00b6 [Android] open fun ParticipantPosition (distance: Double , angle: Double ) Constructs a spatial position of the Participant . Parameters \u00b6 Android distance The distance. angle The angle (in radians).","title":" participant position"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-participant-position/-participant-position/#participantposition","text":"[Android] open fun ParticipantPosition (distance: Double , angle: Double ) Constructs a spatial position of the Participant .","title":"ParticipantPosition"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-participant-position/-participant-position/#parameters","text":"Android distance The distance. angle The angle (in radians).","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-participant-position/angle/","text":"// sdk / com.voxeet.sdk.media.audio / ParticipantPosition / angle angle \u00b6 [Android] open var angle : Double The angle (in radians).","title":"Angle"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-participant-position/angle/#angle","text":"[Android] open var angle : Double The angle (in radians).","title":"angle"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-participant-position/distance/","text":"// sdk / com.voxeet.sdk.media.audio / ParticipantPosition / distance distance \u00b6 [Android] open var distance : Double The distance from the current Participant (in meters).","title":"Distance"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-participant-position/distance/#distance","text":"[Android] open var distance : Double The distance from the current Participant (in meters).","title":"distance"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/","text":"// sdk / com.voxeet.sdk.media.audio / SoundManager SoundManager \u00b6 [Android] open class SoundManager : IAudioRouteListener The SoundManager model enables audio stack management. It allows the application to: Check if Bluetooth or wired headset is connected Register and deregister external listeners to update the media device platform Connect and disconnect the SDK to audio devices List the connected current devices and all devices Check whether the specific types of devices are connected and search for the registered devices that are not compatible Set the media mode Change the current mode to the media mode Calculate the output route and set the proper internal state Acquire or release the audio focus Set the audio type to a proper asset reference and changes the asset reference name to a specific sound and audio type Play a specific audio type in a stream voice call, force or stop a specific audio type, or stop playing sound in a specific mode Reset internal sound type Get the ringtone established by the Android system Enable and disable the sound manager and the internal manager Functions \u00b6 Name Summary abandonAudioFocusRequest [Android] @ NonNull open fun abandonAudioFocusRequest (): SoundManager Releases the AudioFocus. checkOutputRoute [Android] @ NonNull open fun checkOutputRoute (): SoundManager Calculates the output route and sets the internal state accordingly. connect [Android] @ NonNull open fun connect (@ NonNull device: MediaDevice): Promise< Boolean > Connects the SDK to the specific device. current [Android] open fun current (): Promise<MediaDevice> Gets the connected media device. disable [Android] @ NonNull open fun disable (): SoundManager Disables the sound manager and the internal manager. disconnect [Android] @ NonNull open fun disconnect (@ NonNull device: MediaDevice): Promise< Boolean > Disconnects the SDK from a device. enable [Android] @ NonNull open fun enable (): SoundManager Enables the sound manager and the internal manager. enableMedia [Android] @ NonNull open fun enableMedia (): SoundManager Sets the current mode to Media. enumerateDevices [Android] @ NonNull open fun enumerateDevices (): Promise< List <MediaDevice>> Lists audio and media devices connected to the platform. getSystemRingtone [Android] @ Nullable open fun getSystemRingtone (): Ringtone Gets the Ringtone from an Android system. isBluetoothHeadsetConnected [Android] open fun isBluetoothHeadsetConnected (): Boolean Checks for a headset that is connected to the device. isIncompatible [Android] open fun isIncompatible (@ NonNull device: MediaDevice): Boolean Checks if a device, such as a smart watch, is incompatible with the device management. isPlatformConnected [Android] open fun isPlatformConnected (@ NonNull deviceType: DeviceType, @ NonNull state: ConnectionState): Boolean Checks if the specified device type is connected to the native platform. isWiredHeadsetOn [Android] open fun isWiredHeadsetOn (): Boolean Checks for wired headset connected to the device. playSoundType [Android] @ NonNull open fun playSoundType (@ NonNull type: AudioType ): SoundManager Plays given AudioType in a stream voice call. [Android] @ NonNull open fun playSoundType (@ NonNull type: AudioType , soundMode: Int ): SoundManager Plays a given AudioType in a stream voice call for a given sound mode. playSoundTypeForce [Android] @ NonNull open fun playSoundTypeForce (@ NonNull type: AudioType ): SoundManager Forces a given AudioType sound to be played in a stream voice call. [Android] @ NonNull open fun playSoundTypeForce (@ NonNull type: AudioType , soundMode: Int ): SoundManager Forces a given AudioType sound to be played in the given sound mode. registerUpdateDevices [Android] open fun registerUpdateDevices (callback: SoundManager.Call< List <MediaDevice>>): Boolean Registers external listeners to update the MediaDevice platform. requestAudioFocus [Android] @ NonNull open fun requestAudioFocus (): SoundManager Acquires the AudioFocus. resetDefaultSoundType [Android] @ NonNull open fun resetDefaultSoundType (): SoundManager Resets an internal Sound Type to the default type. setMediaRoute [Android] @ NonNull open fun setMediaRoute (): SoundManager Changes the Call mode to the standard Media or System mode. setSound [Android] open fun setSound (@ NonNull type: AudioType , @ NonNull assetName: String ): Boolean Sets the AudioType to the given asset reference in the voice call mode. [Android] open fun setSound (@ NonNull type: AudioType , @ NonNull assetName: String , soundMode: Int ): Boolean Sets the asset reference name for a given soundMode and an AudioType. stop [Android] @ NonNull open fun stop (): SoundManager Stops the sound that is played in a stream voice call mode. [Android] @ NonNull open fun stop (soundMode: Int ): SoundManager Stops the sound that is played in a given mode. stopSoundType [Android] @ NonNull open fun stopSoundType (@ NonNull audioType: AudioType ): SoundManager Stops playing the specified type of sound for the stream voice call. [Android] @ NonNull open fun stopSoundType (@ NonNull audioType: AudioType , soundMode: Int ): SoundManager Stops playing the specified type of sound in a given mode. unregisterUpdateDevices [Android] open fun unregisterUpdateDevices (callback: SoundManager.Call< List <MediaDevice>>) Deregisters external listeners to update the MediaDevice platform.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/#soundmanager","text":"[Android] open class SoundManager : IAudioRouteListener The SoundManager model enables audio stack management. It allows the application to: Check if Bluetooth or wired headset is connected Register and deregister external listeners to update the media device platform Connect and disconnect the SDK to audio devices List the connected current devices and all devices Check whether the specific types of devices are connected and search for the registered devices that are not compatible Set the media mode Change the current mode to the media mode Calculate the output route and set the proper internal state Acquire or release the audio focus Set the audio type to a proper asset reference and changes the asset reference name to a specific sound and audio type Play a specific audio type in a stream voice call, force or stop a specific audio type, or stop playing sound in a specific mode Reset internal sound type Get the ringtone established by the Android system Enable and disable the sound manager and the internal manager","title":"SoundManager"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/#functions","text":"Name Summary abandonAudioFocusRequest [Android] @ NonNull open fun abandonAudioFocusRequest (): SoundManager Releases the AudioFocus. checkOutputRoute [Android] @ NonNull open fun checkOutputRoute (): SoundManager Calculates the output route and sets the internal state accordingly. connect [Android] @ NonNull open fun connect (@ NonNull device: MediaDevice): Promise< Boolean > Connects the SDK to the specific device. current [Android] open fun current (): Promise<MediaDevice> Gets the connected media device. disable [Android] @ NonNull open fun disable (): SoundManager Disables the sound manager and the internal manager. disconnect [Android] @ NonNull open fun disconnect (@ NonNull device: MediaDevice): Promise< Boolean > Disconnects the SDK from a device. enable [Android] @ NonNull open fun enable (): SoundManager Enables the sound manager and the internal manager. enableMedia [Android] @ NonNull open fun enableMedia (): SoundManager Sets the current mode to Media. enumerateDevices [Android] @ NonNull open fun enumerateDevices (): Promise< List <MediaDevice>> Lists audio and media devices connected to the platform. getSystemRingtone [Android] @ Nullable open fun getSystemRingtone (): Ringtone Gets the Ringtone from an Android system. isBluetoothHeadsetConnected [Android] open fun isBluetoothHeadsetConnected (): Boolean Checks for a headset that is connected to the device. isIncompatible [Android] open fun isIncompatible (@ NonNull device: MediaDevice): Boolean Checks if a device, such as a smart watch, is incompatible with the device management. isPlatformConnected [Android] open fun isPlatformConnected (@ NonNull deviceType: DeviceType, @ NonNull state: ConnectionState): Boolean Checks if the specified device type is connected to the native platform. isWiredHeadsetOn [Android] open fun isWiredHeadsetOn (): Boolean Checks for wired headset connected to the device. playSoundType [Android] @ NonNull open fun playSoundType (@ NonNull type: AudioType ): SoundManager Plays given AudioType in a stream voice call. [Android] @ NonNull open fun playSoundType (@ NonNull type: AudioType , soundMode: Int ): SoundManager Plays a given AudioType in a stream voice call for a given sound mode. playSoundTypeForce [Android] @ NonNull open fun playSoundTypeForce (@ NonNull type: AudioType ): SoundManager Forces a given AudioType sound to be played in a stream voice call. [Android] @ NonNull open fun playSoundTypeForce (@ NonNull type: AudioType , soundMode: Int ): SoundManager Forces a given AudioType sound to be played in the given sound mode. registerUpdateDevices [Android] open fun registerUpdateDevices (callback: SoundManager.Call< List <MediaDevice>>): Boolean Registers external listeners to update the MediaDevice platform. requestAudioFocus [Android] @ NonNull open fun requestAudioFocus (): SoundManager Acquires the AudioFocus. resetDefaultSoundType [Android] @ NonNull open fun resetDefaultSoundType (): SoundManager Resets an internal Sound Type to the default type. setMediaRoute [Android] @ NonNull open fun setMediaRoute (): SoundManager Changes the Call mode to the standard Media or System mode. setSound [Android] open fun setSound (@ NonNull type: AudioType , @ NonNull assetName: String ): Boolean Sets the AudioType to the given asset reference in the voice call mode. [Android] open fun setSound (@ NonNull type: AudioType , @ NonNull assetName: String , soundMode: Int ): Boolean Sets the asset reference name for a given soundMode and an AudioType. stop [Android] @ NonNull open fun stop (): SoundManager Stops the sound that is played in a stream voice call mode. [Android] @ NonNull open fun stop (soundMode: Int ): SoundManager Stops the sound that is played in a given mode. stopSoundType [Android] @ NonNull open fun stopSoundType (@ NonNull audioType: AudioType ): SoundManager Stops playing the specified type of sound for the stream voice call. [Android] @ NonNull open fun stopSoundType (@ NonNull audioType: AudioType , soundMode: Int ): SoundManager Stops playing the specified type of sound in a given mode. unregisterUpdateDevices [Android] open fun unregisterUpdateDevices (callback: SoundManager.Call< List <MediaDevice>>) Deregisters external listeners to update the MediaDevice platform.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/abandon-audio-focus-request/","text":"// sdk / com.voxeet.sdk.media.audio / SoundManager / abandonAudioFocusRequest abandonAudioFocusRequest \u00b6 [Android] @ NonNull open fun abandonAudioFocusRequest (): SoundManager Releases the AudioFocus. For more information, see android-sdk-audio . Return \u00b6 the current instance to chain calls.","title":"Abandon audio focus request"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/abandon-audio-focus-request/#abandonaudiofocusrequest","text":"[Android] @ NonNull open fun abandonAudioFocusRequest (): SoundManager Releases the AudioFocus. For more information, see android-sdk-audio .","title":"abandonAudioFocusRequest"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/abandon-audio-focus-request/#return","text":"the current instance to chain calls.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/check-output-route/","text":"// sdk / com.voxeet.sdk.media.audio / SoundManager / checkOutputRoute checkOutputRoute \u00b6 [Android] @ NonNull open fun checkOutputRoute (): SoundManager Calculates the output route and sets the internal state accordingly. Use this method each time it must be recalculated. Return \u00b6 the current instance to chain calls.","title":"Check output route"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/check-output-route/#checkoutputroute","text":"[Android] @ NonNull open fun checkOutputRoute (): SoundManager Calculates the output route and sets the internal state accordingly. Use this method each time it must be recalculated.","title":"checkOutputRoute"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/check-output-route/#return","text":"the current instance to chain calls.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/connect/","text":"// sdk / com.voxeet.sdk.media.audio / SoundManager / connect connect \u00b6 [Android] @ NonNull open fun connect (@ NonNull device: MediaDevice): Promise< Boolean > Connects the SDK to the specific device. Return \u00b6 the promise to resolve. Parameters \u00b6 Android device device","title":"Connect"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/connect/#connect","text":"[Android] @ NonNull open fun connect (@ NonNull device: MediaDevice): Promise< Boolean > Connects the SDK to the specific device.","title":"connect"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/connect/#return","text":"the promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/connect/#parameters","text":"Android device device","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/current/","text":"// sdk / com.voxeet.sdk.media.audio / SoundManager / current current \u00b6 [Android] open fun current (): Promise<MediaDevice> Gets the connected media device. Return \u00b6 the promise to resolve.","title":"Current"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/current/#current","text":"[Android] open fun current (): Promise<MediaDevice> Gets the connected media device.","title":"current"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/current/#return","text":"the promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/disable/","text":"// sdk / com.voxeet.sdk.media.audio / SoundManager / disable disable \u00b6 [Android] @ NonNull open fun disable (): SoundManager Disables the sound manager and the internal manager. Return \u00b6 the current instance to chain calls.","title":"Disable"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/disable/#disable","text":"[Android] @ NonNull open fun disable (): SoundManager Disables the sound manager and the internal manager.","title":"disable"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/disable/#return","text":"the current instance to chain calls.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/disconnect/","text":"// sdk / com.voxeet.sdk.media.audio / SoundManager / disconnect disconnect \u00b6 [Android] @ NonNull open fun disconnect (@ NonNull device: MediaDevice): Promise< Boolean > Disconnects the SDK from a device. Return \u00b6 the promise to resolve. Parameters \u00b6 Android device device","title":"Disconnect"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/disconnect/#disconnect","text":"[Android] @ NonNull open fun disconnect (@ NonNull device: MediaDevice): Promise< Boolean > Disconnects the SDK from a device.","title":"disconnect"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/disconnect/#return","text":"the promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/disconnect/#parameters","text":"Android device device","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/enable-media/","text":"// sdk / com.voxeet.sdk.media.audio / SoundManager / enableMedia enableMedia \u00b6 [Android] @ NonNull open fun enableMedia (): SoundManager Sets the current mode to Media. Return \u00b6 the current instance to chain calls.","title":"Enable media"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/enable-media/#enablemedia","text":"[Android] @ NonNull open fun enableMedia (): SoundManager Sets the current mode to Media.","title":"enableMedia"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/enable-media/#return","text":"the current instance to chain calls.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/enable/","text":"// sdk / com.voxeet.sdk.media.audio / SoundManager / enable enable \u00b6 [Android] @ NonNull open fun enable (): SoundManager Enables the sound manager and the internal manager. Return \u00b6 the current instance to chain calls.","title":"Enable"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/enable/#enable","text":"[Android] @ NonNull open fun enable (): SoundManager Enables the sound manager and the internal manager.","title":"enable"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/enable/#return","text":"the current instance to chain calls.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/enumerate-devices/","text":"// sdk / com.voxeet.sdk.media.audio / SoundManager / enumerateDevices enumerateDevices \u00b6 [Android] @ NonNull open fun enumerateDevices (): Promise< List <MediaDevice>> Lists audio and media devices connected to the platform. Return \u00b6 the promise to resolve.","title":"Enumerate devices"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/enumerate-devices/#enumeratedevices","text":"[Android] @ NonNull open fun enumerateDevices (): Promise< List <MediaDevice>> Lists audio and media devices connected to the platform.","title":"enumerateDevices"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/enumerate-devices/#return","text":"the promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/get-system-ringtone/","text":"// sdk / com.voxeet.sdk.media.audio / SoundManager / getSystemRingtone getSystemRingtone \u00b6 [Android] @ Nullable open fun getSystemRingtone (): Ringtone Gets the Ringtone from an Android system. Return \u00b6 the Ringtone instance corresponding to the instance of the current system.","title":"Get system ringtone"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/get-system-ringtone/#getsystemringtone","text":"[Android] @ Nullable open fun getSystemRingtone (): Ringtone Gets the Ringtone from an Android system.","title":"getSystemRingtone"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/get-system-ringtone/#return","text":"the Ringtone instance corresponding to the instance of the current system.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/is-bluetooth-headset-connected/","text":"// sdk / com.voxeet.sdk.media.audio / SoundManager / isBluetoothHeadsetConnected isBluetoothHeadsetConnected \u00b6 [Android] open fun isBluetoothHeadsetConnected (): Boolean Checks for a headset that is connected to the device. Return \u00b6 the connection state.","title":"Is bluetooth headset connected"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/is-bluetooth-headset-connected/#isbluetoothheadsetconnected","text":"[Android] open fun isBluetoothHeadsetConnected (): Boolean Checks for a headset that is connected to the device.","title":"isBluetoothHeadsetConnected"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/is-bluetooth-headset-connected/#return","text":"the connection state.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/is-incompatible/","text":"// sdk / com.voxeet.sdk.media.audio / SoundManager / isIncompatible isIncompatible \u00b6 [Android] open fun isIncompatible (@ NonNull device: MediaDevice): Boolean Checks if a device, such as a smart watch, is incompatible with the device management. Return \u00b6 A flag indicating if the device is incompatible with the device management. True indicates that the device is incompatible, false indicates that the device is compatible. Parameters \u00b6 Android device The specific device.","title":"Is incompatible"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/is-incompatible/#isincompatible","text":"[Android] open fun isIncompatible (@ NonNull device: MediaDevice): Boolean Checks if a device, such as a smart watch, is incompatible with the device management.","title":"isIncompatible"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/is-incompatible/#return","text":"A flag indicating if the device is incompatible with the device management. True indicates that the device is incompatible, false indicates that the device is compatible.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/is-incompatible/#parameters","text":"Android device The specific device.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/is-platform-connected/","text":"// sdk / com.voxeet.sdk.media.audio / SoundManager / isPlatformConnected isPlatformConnected \u00b6 [Android] open fun isPlatformConnected (@ NonNull deviceType: DeviceType, @ NonNull state: ConnectionState): Boolean Checks if the specified device type is connected to the native platform. Return \u00b6 informs about the state. Parameters \u00b6 Android deviceType device type state connection state to the native platform","title":"Is platform connected"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/is-platform-connected/#isplatformconnected","text":"[Android] open fun isPlatformConnected (@ NonNull deviceType: DeviceType, @ NonNull state: ConnectionState): Boolean Checks if the specified device type is connected to the native platform.","title":"isPlatformConnected"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/is-platform-connected/#return","text":"informs about the state.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/is-platform-connected/#parameters","text":"Android deviceType device type state connection state to the native platform","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/is-wired-headset-on/","text":"// sdk / com.voxeet.sdk.media.audio / SoundManager / isWiredHeadsetOn isWiredHeadsetOn \u00b6 [Android] open fun isWiredHeadsetOn (): Boolean Checks for wired headset connected to the device. Return \u00b6 the connection state.","title":"Is wired headset on"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/is-wired-headset-on/#iswiredheadseton","text":"[Android] open fun isWiredHeadsetOn (): Boolean Checks for wired headset connected to the device.","title":"isWiredHeadsetOn"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/is-wired-headset-on/#return","text":"the connection state.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/play-sound-type-force/","text":"// sdk / com.voxeet.sdk.media.audio / SoundManager / playSoundTypeForce playSoundTypeForce \u00b6 [Android] @ NonNull open fun playSoundTypeForce (@ NonNull type: AudioType ): SoundManager Forces a given AudioType sound to be played in a stream voice call. Return \u00b6 the current instance to chain calls. Parameters \u00b6 Android type AudioType [Android] @ NonNull open fun playSoundTypeForce (@ NonNull type: AudioType , soundMode: Int ): SoundManager Forces a given AudioType sound to be played in the given sound mode. Return \u00b6 the current instance to chain calls. Parameters \u00b6 Android type AudioType soundMode sound mode","title":"Play sound type force"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/play-sound-type-force/#playsoundtypeforce","text":"[Android] @ NonNull open fun playSoundTypeForce (@ NonNull type: AudioType ): SoundManager Forces a given AudioType sound to be played in a stream voice call.","title":"playSoundTypeForce"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/play-sound-type-force/#return","text":"the current instance to chain calls.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/play-sound-type-force/#parameters","text":"Android type AudioType [Android] @ NonNull open fun playSoundTypeForce (@ NonNull type: AudioType , soundMode: Int ): SoundManager Forces a given AudioType sound to be played in the given sound mode.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/play-sound-type-force/#return_1","text":"the current instance to chain calls.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/play-sound-type-force/#parameters_1","text":"Android type AudioType soundMode sound mode","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/play-sound-type/","text":"// sdk / com.voxeet.sdk.media.audio / SoundManager / playSoundType playSoundType \u00b6 [Android] @ NonNull open fun playSoundType (@ NonNull type: AudioType ): SoundManager Plays given AudioType in a stream voice call. Return \u00b6 the current instance to chain calls. Parameters \u00b6 Android type AudioType [Android] @ NonNull open fun playSoundType (@ NonNull type: AudioType , soundMode: Int ): SoundManager Plays a given AudioType in a stream voice call for a given sound mode. Return \u00b6 the current instance to chain calls. Parameters \u00b6 Android type AudioType soundMode sound mode","title":"Play sound type"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/play-sound-type/#playsoundtype","text":"[Android] @ NonNull open fun playSoundType (@ NonNull type: AudioType ): SoundManager Plays given AudioType in a stream voice call.","title":"playSoundType"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/play-sound-type/#return","text":"the current instance to chain calls.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/play-sound-type/#parameters","text":"Android type AudioType [Android] @ NonNull open fun playSoundType (@ NonNull type: AudioType , soundMode: Int ): SoundManager Plays a given AudioType in a stream voice call for a given sound mode.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/play-sound-type/#return_1","text":"the current instance to chain calls.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/play-sound-type/#parameters_1","text":"Android type AudioType soundMode sound mode","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/register-update-devices/","text":"// sdk / com.voxeet.sdk.media.audio / SoundManager / registerUpdateDevices registerUpdateDevices \u00b6 [Android] open fun registerUpdateDevices (callback: SoundManager.Call< List <MediaDevice>>): Boolean Registers external listeners to update the MediaDevice platform. Return \u00b6 informs if the register call has been properly done. Parameters \u00b6 Android callback callback to register","title":"Register update devices"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/register-update-devices/#registerupdatedevices","text":"[Android] open fun registerUpdateDevices (callback: SoundManager.Call< List <MediaDevice>>): Boolean Registers external listeners to update the MediaDevice platform.","title":"registerUpdateDevices"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/register-update-devices/#return","text":"informs if the register call has been properly done.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/register-update-devices/#parameters","text":"Android callback callback to register","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/request-audio-focus/","text":"// sdk / com.voxeet.sdk.media.audio / SoundManager / requestAudioFocus requestAudioFocus \u00b6 [Android] @ NonNull open fun requestAudioFocus (): SoundManager Acquires the AudioFocus. For more information, see android-sdk-audio . Return \u00b6 the current instance to chain calls.","title":"Request audio focus"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/request-audio-focus/#requestaudiofocus","text":"[Android] @ NonNull open fun requestAudioFocus (): SoundManager Acquires the AudioFocus. For more information, see android-sdk-audio .","title":"requestAudioFocus"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/request-audio-focus/#return","text":"the current instance to chain calls.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/reset-default-sound-type/","text":"// sdk / com.voxeet.sdk.media.audio / SoundManager / resetDefaultSoundType resetDefaultSoundType \u00b6 [Android] @ NonNull open fun resetDefaultSoundType (): SoundManager Resets an internal Sound Type to the default type. Return \u00b6 the current instance to chain calls.","title":"Reset default sound type"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/reset-default-sound-type/#resetdefaultsoundtype","text":"[Android] @ NonNull open fun resetDefaultSoundType (): SoundManager Resets an internal Sound Type to the default type.","title":"resetDefaultSoundType"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/reset-default-sound-type/#return","text":"the current instance to chain calls.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/set-media-route/","text":"// sdk / com.voxeet.sdk.media.audio / SoundManager / setMediaRoute setMediaRoute \u00b6 [Android] @ NonNull open fun setMediaRoute (): SoundManager Changes the Call mode to the standard Media or System mode. We do not recommend using this method during conferences. Return \u00b6 the current instance to chain calls.","title":"Set media route"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/set-media-route/#setmediaroute","text":"[Android] @ NonNull open fun setMediaRoute (): SoundManager Changes the Call mode to the standard Media or System mode. We do not recommend using this method during conferences.","title":"setMediaRoute"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/set-media-route/#return","text":"the current instance to chain calls.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/set-sound/","text":"// sdk / com.voxeet.sdk.media.audio / SoundManager / setSound setSound \u00b6 [Android] open fun setSound (@ NonNull type: AudioType , @ NonNull assetName: String ): Boolean Sets the AudioType to the given asset reference in the voice call mode. Return \u00b6 the current instance to chain calls. Parameters \u00b6 Android type AudioType to set in the stream voice call assetName name of the asset [Android] open fun setSound (@ NonNull type: AudioType , @ NonNull assetName: String , soundMode: Int ): Boolean Sets the asset reference name for a given soundMode and an AudioType. Return \u00b6 the current instance to chain calls. Parameters \u00b6 Android type AudioType to set in the stream voice call assetName name of the asset soundMode sound mode for the system","title":"Set sound"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/set-sound/#setsound","text":"[Android] open fun setSound (@ NonNull type: AudioType , @ NonNull assetName: String ): Boolean Sets the AudioType to the given asset reference in the voice call mode.","title":"setSound"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/set-sound/#return","text":"the current instance to chain calls.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/set-sound/#parameters","text":"Android type AudioType to set in the stream voice call assetName name of the asset [Android] open fun setSound (@ NonNull type: AudioType , @ NonNull assetName: String , soundMode: Int ): Boolean Sets the asset reference name for a given soundMode and an AudioType.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/set-sound/#return_1","text":"the current instance to chain calls.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/set-sound/#parameters_1","text":"Android type AudioType to set in the stream voice call assetName name of the asset soundMode sound mode for the system","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/stop-sound-type/","text":"// sdk / com.voxeet.sdk.media.audio / SoundManager / stopSoundType stopSoundType \u00b6 [Android] @ NonNull open fun stopSoundType (@ NonNull audioType: AudioType ): SoundManager Stops playing the specified type of sound for the stream voice call. Return \u00b6 the current instance to chain calls. Parameters \u00b6 Android audioType AudioType [Android] @ NonNull open fun stopSoundType (@ NonNull audioType: AudioType , soundMode: Int ): SoundManager Stops playing the specified type of sound in a given mode. Return \u00b6 the current instance to chain calls. Parameters \u00b6 Android audioType AudioType soundMode sound mode","title":"Stop sound type"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/stop-sound-type/#stopsoundtype","text":"[Android] @ NonNull open fun stopSoundType (@ NonNull audioType: AudioType ): SoundManager Stops playing the specified type of sound for the stream voice call.","title":"stopSoundType"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/stop-sound-type/#return","text":"the current instance to chain calls.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/stop-sound-type/#parameters","text":"Android audioType AudioType [Android] @ NonNull open fun stopSoundType (@ NonNull audioType: AudioType , soundMode: Int ): SoundManager Stops playing the specified type of sound in a given mode.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/stop-sound-type/#return_1","text":"the current instance to chain calls.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/stop-sound-type/#parameters_1","text":"Android audioType AudioType soundMode sound mode","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/stop/","text":"// sdk / com.voxeet.sdk.media.audio / SoundManager / stop stop \u00b6 [Android] @ NonNull open fun stop (soundMode: Int ): SoundManager Stops the sound that is played in a given mode. Return \u00b6 the current instance to chain calls. Parameters \u00b6 Android soundMode sound mode [Android] @ NonNull open fun stop (): SoundManager Stops the sound that is played in a stream voice call mode. Return \u00b6 the current instance to chain calls.","title":"Stop"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/stop/#stop","text":"[Android] @ NonNull open fun stop (soundMode: Int ): SoundManager Stops the sound that is played in a given mode.","title":"stop"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/stop/#return","text":"the current instance to chain calls.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/stop/#parameters","text":"Android soundMode sound mode [Android] @ NonNull open fun stop (): SoundManager Stops the sound that is played in a stream voice call mode.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/stop/#return_1","text":"the current instance to chain calls.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/unregister-update-devices/","text":"// sdk / com.voxeet.sdk.media.audio / SoundManager / unregisterUpdateDevices unregisterUpdateDevices \u00b6 [Android] open fun unregisterUpdateDevices (callback: SoundManager.Call< List <MediaDevice>>) Deregisters external listeners to update the MediaDevice platform. Parameters \u00b6 Android callback callback to deregister","title":"Unregister update devices"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/unregister-update-devices/#unregisterupdatedevices","text":"[Android] open fun unregisterUpdateDevices (callback: SoundManager.Call< List <MediaDevice>>) Deregisters external listeners to update the MediaDevice platform.","title":"unregisterUpdateDevices"},{"location":"android-reference/sdk/com.voxeet.sdk.media.audio/-sound-manager/unregister-update-devices/#parameters","text":"Android callback callback to deregister","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.models/","text":"// sdk / com.voxeet.sdk.models Package-level declarations \u00b6 Types \u00b6 Name Summary Conference [Android] open class Conference : ConferenceProxy The Conference model allows the application to get information about a conference. DemoOptions [Android] open class DemoOptions The DemoOptions model contains options with which a demo conference can be joined. Participant [Android] open class Participant The Participant model contains information about a conference participant. ParticipantNotification [Android] open class ParticipantNotification The ParticipantNotification model gathers information about conference participants mentioned in notifications. ParticipantPermissions [Android] open class ParticipantPermissions The ParticipantPermissions model includes information about the participant's permissions. VideoForwardingStrategy [Android] enum VideoForwardingStrategy The VideoForwardingStrategy model defines how the SDK should select conference participants whose videos will be transmitted to the local participant.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.models/#types","text":"Name Summary Conference [Android] open class Conference : ConferenceProxy The Conference model allows the application to get information about a conference. DemoOptions [Android] open class DemoOptions The DemoOptions model contains options with which a demo conference can be joined. Participant [Android] open class Participant The Participant model contains information about a conference participant. ParticipantNotification [Android] open class ParticipantNotification The ParticipantNotification model gathers information about conference participants mentioned in notifications. ParticipantPermissions [Android] open class ParticipantPermissions The ParticipantPermissions model includes information about the participant's permissions. VideoForwardingStrategy [Android] enum VideoForwardingStrategy The VideoForwardingStrategy model defines how the SDK should select conference participants whose videos will be transmitted to the local participant.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/","text":"// sdk / com.voxeet.sdk.models / Conference Conference \u00b6 [Android] open class Conference : ConferenceProxy The Conference model allows the application to get information about a conference. Functions \u00b6 Name Summary findParticipantByExternalId [Android] @ Nullable open fun findParticipantByExternalId (@ Nullable externalId: String ): Participant Finds a conference participant who has the specific externalId . findParticipantById [Android] @ Nullable open fun findParticipantById (@ Nullable participantId: String ): Participant Finds a conference participant who has the specific participantId . getParticipants [Android] @ NonNull open fun getParticipants (): List < Participant > Gets information about conference participants. getPermissions [Android] @ NonNull open fun getPermissions (): Set < ConferencePermission > Provides a list of the local participant's conference permissions. getSpatialAudioStyle [Android] @ Nullable open fun getSpatialAudioStyle (): SpatialAudioStyle Gets the spatial audio style that is used in the current conference. getState [Android] @ NonNull open fun getState (): ConferenceStatus Provides the current conference status. hasAny [Android] open fun hasAny (@ NonNull status: ConferenceParticipantStatus , @ Nullable excludedId: String ): Boolean Checks if the participants at the current conference have one of the following statuses: - on-air - left - invited hasLocalStreams [Android] open fun hasLocalStreams (@ Nullable excludedId: String ): Boolean Checks if the Conference instance has the locally-based MediaStream. hasMixer [Android] open fun hasMixer (): Boolean Checks if the current Conference has a Mixer participant currently connected. isDolbyVoice [Android] open fun isDolbyVoice (): Boolean Checks if a conference is is enabled with Dolby Voice. Properties \u00b6 Name Summary alias [Android] @ Nullable @get: Nullable open val alias : String conferenceInfos [Android] @ Nullable @get: Nullable open var conferenceInfos : ConferenceInfos id [Android] @ NonNull @get: NonNull open val id : String isNew [Android] @ NonNull open var isNew : Boolean recordingInformation [Android] @ Nullable @get: Nullable open var recordingInformation : Conference.RecordingInformation","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/#conference","text":"[Android] open class Conference : ConferenceProxy The Conference model allows the application to get information about a conference.","title":"Conference"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/#functions","text":"Name Summary findParticipantByExternalId [Android] @ Nullable open fun findParticipantByExternalId (@ Nullable externalId: String ): Participant Finds a conference participant who has the specific externalId . findParticipantById [Android] @ Nullable open fun findParticipantById (@ Nullable participantId: String ): Participant Finds a conference participant who has the specific participantId . getParticipants [Android] @ NonNull open fun getParticipants (): List < Participant > Gets information about conference participants. getPermissions [Android] @ NonNull open fun getPermissions (): Set < ConferencePermission > Provides a list of the local participant's conference permissions. getSpatialAudioStyle [Android] @ Nullable open fun getSpatialAudioStyle (): SpatialAudioStyle Gets the spatial audio style that is used in the current conference. getState [Android] @ NonNull open fun getState (): ConferenceStatus Provides the current conference status. hasAny [Android] open fun hasAny (@ NonNull status: ConferenceParticipantStatus , @ Nullable excludedId: String ): Boolean Checks if the participants at the current conference have one of the following statuses: - on-air - left - invited hasLocalStreams [Android] open fun hasLocalStreams (@ Nullable excludedId: String ): Boolean Checks if the Conference instance has the locally-based MediaStream. hasMixer [Android] open fun hasMixer (): Boolean Checks if the current Conference has a Mixer participant currently connected. isDolbyVoice [Android] open fun isDolbyVoice (): Boolean Checks if a conference is is enabled with Dolby Voice.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/#properties","text":"Name Summary alias [Android] @ Nullable @get: Nullable open val alias : String conferenceInfos [Android] @ Nullable @get: Nullable open var conferenceInfos : ConferenceInfos id [Android] @ NonNull @get: NonNull open val id : String isNew [Android] @ NonNull open var isNew : Boolean recordingInformation [Android] @ Nullable @get: Nullable open var recordingInformation : Conference.RecordingInformation","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/alias/","text":"// sdk / com.voxeet.sdk.models / Conference / alias alias \u00b6 [Android] @ Nullable @get: Nullable open val alias : String","title":"Alias"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/alias/#alias","text":"[Android] @ Nullable @get: Nullable open val alias : String","title":"alias"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/conference-infos/","text":"// sdk / com.voxeet.sdk.models / Conference / conferenceInfos conferenceInfos \u00b6 [Android] @ Nullable @get: Nullable open var conferenceInfos : ConferenceInfos","title":"Conference infos"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/conference-infos/#conferenceinfos","text":"[Android] @ Nullable @get: Nullable open var conferenceInfos : ConferenceInfos","title":"conferenceInfos"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/find-participant-by-external-id/","text":"// sdk / com.voxeet.sdk.models / Conference / findParticipantByExternalId findParticipantByExternalId \u00b6 [Android] @ Nullable open fun findParticipantByExternalId (@ Nullable externalId: String ): Participant Finds a conference participant who has the specific externalId . A null value informs that such participant does not exist at a conference. Return \u00b6 the instance of the participant or a null value. Parameters \u00b6 Android externalId valid external ID of the conference participant","title":"Find participant by external id"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/find-participant-by-external-id/#findparticipantbyexternalid","text":"[Android] @ Nullable open fun findParticipantByExternalId (@ Nullable externalId: String ): Participant Finds a conference participant who has the specific externalId . A null value informs that such participant does not exist at a conference.","title":"findParticipantByExternalId"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/find-participant-by-external-id/#return","text":"the instance of the participant or a null value.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/find-participant-by-external-id/#parameters","text":"Android externalId valid external ID of the conference participant","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/find-participant-by-id/","text":"// sdk / com.voxeet.sdk.models / Conference / findParticipantById findParticipantById \u00b6 [Android] @ Nullable open fun findParticipantById (@ Nullable participantId: String ): Participant Finds a conference participant who has the specific participantId . A null value informs that such a participant does not exist at a conference. Return \u00b6 the instance of the participant or a null value. Parameters \u00b6 Android participantId valid ID of the conference participant","title":"Find participant by id"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/find-participant-by-id/#findparticipantbyid","text":"[Android] @ Nullable open fun findParticipantById (@ Nullable participantId: String ): Participant Finds a conference participant who has the specific participantId . A null value informs that such a participant does not exist at a conference.","title":"findParticipantById"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/find-participant-by-id/#return","text":"the instance of the participant or a null value.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/find-participant-by-id/#parameters","text":"Android participantId valid ID of the conference participant","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/get-participants/","text":"// sdk / com.voxeet.sdk.models / Conference / getParticipants getParticipants \u00b6 [Android] @ NonNull open fun getParticipants (): List < Participant > Gets information about conference participants. Return \u00b6 the direct reference to the array of participants.","title":"Get participants"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/get-participants/#getparticipants","text":"[Android] @ NonNull open fun getParticipants (): List < Participant > Gets information about conference participants.","title":"getParticipants"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/get-participants/#return","text":"the direct reference to the array of participants.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/get-permissions/","text":"// sdk / com.voxeet.sdk.models / Conference / getPermissions getPermissions \u00b6 [Android] @ NonNull open fun getPermissions (): Set < ConferencePermission > Provides a list of the local participant's conference permissions. Return \u00b6 conference permissions.","title":"Get permissions"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/get-permissions/#getpermissions","text":"[Android] @ NonNull open fun getPermissions (): Set < ConferencePermission > Provides a list of the local participant's conference permissions.","title":"getPermissions"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/get-permissions/#return","text":"conference permissions.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/get-spatial-audio-style/","text":"// sdk / com.voxeet.sdk.models / Conference / getSpatialAudioStyle getSpatialAudioStyle \u00b6 [Android] @ Nullable open fun getSpatialAudioStyle (): SpatialAudioStyle Gets the spatial audio style that is used in the current conference.","title":"Get spatial audio style"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/get-spatial-audio-style/#getspatialaudiostyle","text":"[Android] @ Nullable open fun getSpatialAudioStyle (): SpatialAudioStyle Gets the spatial audio style that is used in the current conference.","title":"getSpatialAudioStyle"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/get-state/","text":"// sdk / com.voxeet.sdk.models / Conference / getState getState \u00b6 [Android] @ NonNull open fun getState (): ConferenceStatus Provides the current conference status. Return \u00b6 the valid ConferenceState for a manipulation.","title":"Get state"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/get-state/#getstate","text":"[Android] @ NonNull open fun getState (): ConferenceStatus Provides the current conference status.","title":"getState"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/get-state/#return","text":"the valid ConferenceState for a manipulation.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/has-any/","text":"// sdk / com.voxeet.sdk.models / Conference / hasAny hasAny \u00b6 [Android] open fun hasAny (@ NonNull status: ConferenceParticipantStatus , @ Nullable excludedId: String ): Boolean Checks if the participants at the current conference have one of the following statuses: on-air left invited Return \u00b6 at least one participant with the corresponding state. Parameters \u00b6 Android status participant's status excludedId filter out specifically the local id","title":"Has any"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/has-any/#hasany","text":"[Android] open fun hasAny (@ NonNull status: ConferenceParticipantStatus , @ Nullable excludedId: String ): Boolean Checks if the participants at the current conference have one of the following statuses: on-air left invited","title":"hasAny"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/has-any/#return","text":"at least one participant with the corresponding state.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/has-any/#parameters","text":"Android status participant's status excludedId filter out specifically the local id","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/has-local-streams/","text":"// sdk / com.voxeet.sdk.models / Conference / hasLocalStreams hasLocalStreams \u00b6 [Android] open fun hasLocalStreams (@ Nullable excludedId: String ): Boolean Checks if the Conference instance has the locally-based MediaStream. Return \u00b6 the indicator of the local streams that is in 'connecting' or 'on air' state. Parameters \u00b6 Android excludedId filter out specifically the local id","title":"Has local streams"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/has-local-streams/#haslocalstreams","text":"[Android] open fun hasLocalStreams (@ Nullable excludedId: String ): Boolean Checks if the Conference instance has the locally-based MediaStream.","title":"hasLocalStreams"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/has-local-streams/#return","text":"the indicator of the local streams that is in 'connecting' or 'on air' state.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/has-local-streams/#parameters","text":"Android excludedId filter out specifically the local id","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/has-mixer/","text":"// sdk / com.voxeet.sdk.models / Conference / hasMixer hasMixer \u00b6 [Android] open fun hasMixer (): Boolean Checks if the current Conference has a Mixer participant currently connected. This method returns true if a Mixer participant exists in the conference. Return \u00b6 the presence of an on-air mixer participant at the conference.","title":"Has mixer"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/has-mixer/#hasmixer","text":"[Android] open fun hasMixer (): Boolean Checks if the current Conference has a Mixer participant currently connected. This method returns true if a Mixer participant exists in the conference.","title":"hasMixer"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/has-mixer/#return","text":"the presence of an on-air mixer participant at the conference.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/id/","text":"// sdk / com.voxeet.sdk.models / Conference / id id \u00b6 [Android] @ NonNull @get: NonNull open val id : String","title":"Id"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/id/#id","text":"[Android] @ NonNull @get: NonNull open val id : String","title":"id"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/is-dolby-voice/","text":"// sdk / com.voxeet.sdk.models / Conference / isDolbyVoice isDolbyVoice \u00b6 [Android] open fun isDolbyVoice (): Boolean Checks if a conference is is enabled with Dolby Voice.","title":"Is dolby voice"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/is-dolby-voice/#isdolbyvoice","text":"[Android] open fun isDolbyVoice (): Boolean Checks if a conference is is enabled with Dolby Voice.","title":"isDolbyVoice"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/is-new/","text":"// sdk / com.voxeet.sdk.models / Conference / isNew isNew \u00b6 [Android] @ NonNull open var isNew : Boolean","title":"Is new"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/is-new/#isnew","text":"[Android] @ NonNull open var isNew : Boolean","title":"isNew"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/recording-information/","text":"// sdk / com.voxeet.sdk.models / Conference / recordingInformation recordingInformation \u00b6 [Android] @ Nullable @get: Nullable open var recordingInformation : Conference.RecordingInformation","title":"Recording information"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-conference/recording-information/#recordinginformation","text":"[Android] @ Nullable @get: Nullable open var recordingInformation : Conference.RecordingInformation","title":"recordingInformation"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-demo-options/","text":"// sdk / com.voxeet.sdk.models / DemoOptions DemoOptions \u00b6 [Android] open class DemoOptions The DemoOptions model contains options with which a demo conference can be joined. Types \u00b6 Name Summary Builder [Android] open class Builder The DemoOptions.Builder model is responsible for building demo options. Functions \u00b6 Name Summary isSpatialAudio [Android] open fun isSpatialAudio (): Boolean Returns true if spatial audio will be enabled for this demo conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-demo-options/#demooptions","text":"[Android] open class DemoOptions The DemoOptions model contains options with which a demo conference can be joined.","title":"DemoOptions"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-demo-options/#types","text":"Name Summary Builder [Android] open class Builder The DemoOptions.Builder model is responsible for building demo options.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-demo-options/#functions","text":"Name Summary isSpatialAudio [Android] open fun isSpatialAudio (): Boolean Returns true if spatial audio will be enabled for this demo conference.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-demo-options/is-spatial-audio/","text":"// sdk / com.voxeet.sdk.models / DemoOptions / isSpatialAudio isSpatialAudio \u00b6 [Android] open fun isSpatialAudio (): Boolean Returns true if spatial audio will be enabled for this demo conference. For more information, see the setSpatialAudio method. Return \u00b6 The spatial audio flag.","title":"Is spatial audio"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-demo-options/is-spatial-audio/#isspatialaudio","text":"[Android] open fun isSpatialAudio (): Boolean Returns true if spatial audio will be enabled for this demo conference. For more information, see the setSpatialAudio method.","title":"isSpatialAudio"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-demo-options/is-spatial-audio/#return","text":"The spatial audio flag.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-demo-options/-builder/","text":"// sdk / com.voxeet.sdk.models / DemoOptions / Builder Builder \u00b6 [Android] open class Builder The DemoOptions.Builder model is responsible for building demo options. It creates a new builder and a DemoOptions instance . It also enables and disables spatial audio in demo conferences. Constructors \u00b6 Builder [Android] open fun Builder () Creates a new builder. Functions \u00b6 Name Summary build [Android] @ NonNull open fun build (): DemoOptions Constructs the DemoOptions instance. setSpatialAudio [Android] open fun setSpatialAudio (spatialAudio: Boolean ): DemoOptions.Builder Enables and disables spatial audio.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-demo-options/-builder/#builder","text":"[Android] open class Builder The DemoOptions.Builder model is responsible for building demo options. It creates a new builder and a DemoOptions instance . It also enables and disables spatial audio in demo conferences.","title":"Builder"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-demo-options/-builder/#constructors","text":"Builder [Android] open fun Builder () Creates a new builder.","title":"Constructors"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-demo-options/-builder/#functions","text":"Name Summary build [Android] @ NonNull open fun build (): DemoOptions Constructs the DemoOptions instance. setSpatialAudio [Android] open fun setSpatialAudio (spatialAudio: Boolean ): DemoOptions.Builder Enables and disables spatial audio.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-demo-options/-builder/-builder/","text":"// sdk / com.voxeet.sdk.models / DemoOptions / Builder / Builder Builder \u00b6 [Android] open fun Builder () Creates a new builder.","title":" builder"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-demo-options/-builder/-builder/#builder","text":"[Android] open fun Builder () Creates a new builder.","title":"Builder"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-demo-options/-builder/build/","text":"// sdk / com.voxeet.sdk.models / DemoOptions / Builder / build build \u00b6 [Android] @ NonNull open fun build (): DemoOptions Constructs the DemoOptions instance. Return \u00b6 The DemoOptions instance.","title":"Build"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-demo-options/-builder/build/#build","text":"[Android] @ NonNull open fun build (): DemoOptions Constructs the DemoOptions instance.","title":"build"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-demo-options/-builder/build/#return","text":"The DemoOptions instance.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-demo-options/-builder/set-spatial-audio/","text":"// sdk / com.voxeet.sdk.models / DemoOptions / Builder / setSpatialAudio setSpatialAudio \u00b6 [Android] open fun setSpatialAudio (spatialAudio: Boolean ): DemoOptions.Builder Enables and disables spatial audio. Return \u00b6 The builder instance. Parameters \u00b6 Android spatialAudio A flag indicating if spatial audio should be enabled.","title":"Set spatial audio"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-demo-options/-builder/set-spatial-audio/#setspatialaudio","text":"[Android] open fun setSpatialAudio (spatialAudio: Boolean ): DemoOptions.Builder Enables and disables spatial audio.","title":"setSpatialAudio"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-demo-options/-builder/set-spatial-audio/#return","text":"The builder instance.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-demo-options/-builder/set-spatial-audio/#parameters","text":"Android spatialAudio A flag indicating if spatial audio should be enabled.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant/","text":"// sdk / com.voxeet.sdk.models / Participant Participant \u00b6 [Android] open class Participant The Participant model contains information about a conference participant. Functions \u00b6 Name Summary audioReceivingFrom [Android] open fun audioReceivingFrom (): Boolean Identifies if the local client receives audio from the asked participant. audioTransmitting [Android] open fun audioTransmitting (): Boolean The participant's audio transmitting status modified using start or stop methods on the local participant. getInfo [Android] @ Nullable open fun getInfo (): ParticipantInfo Gets information about the current participant. isLocallyActive [Android] open fun isLocallyActive (): Boolean Checks if the participant is connected to the local device. participantType [Android] @ NonNull open fun participantType (): ParticipantType Gets the participant's type. streams [Android] @ NonNull open fun streams (): List < MediaStream > Gets information about participant's streams. streamsHandler [Android] @ NonNull open fun streamsHandler (): ParticipantMediaStreamHandler Accesses streams manager that allows manipulating the participant's streams. Properties \u00b6 Name Summary id [Android] @ Nullable @get: Nullable open val id : String status [Android] @ NonNull @get: NonNull open val status : ConferenceParticipantStatus","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant/#participant","text":"[Android] open class Participant The Participant model contains information about a conference participant.","title":"Participant"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant/#functions","text":"Name Summary audioReceivingFrom [Android] open fun audioReceivingFrom (): Boolean Identifies if the local client receives audio from the asked participant. audioTransmitting [Android] open fun audioTransmitting (): Boolean The participant's audio transmitting status modified using start or stop methods on the local participant. getInfo [Android] @ Nullable open fun getInfo (): ParticipantInfo Gets information about the current participant. isLocallyActive [Android] open fun isLocallyActive (): Boolean Checks if the participant is connected to the local device. participantType [Android] @ NonNull open fun participantType (): ParticipantType Gets the participant's type. streams [Android] @ NonNull open fun streams (): List < MediaStream > Gets information about participant's streams. streamsHandler [Android] @ NonNull open fun streamsHandler (): ParticipantMediaStreamHandler Accesses streams manager that allows manipulating the participant's streams.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant/#properties","text":"Name Summary id [Android] @ Nullable @get: Nullable open val id : String status [Android] @ NonNull @get: NonNull open val status : ConferenceParticipantStatus","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant/audio-receiving-from/","text":"// sdk / com.voxeet.sdk.models / Participant / audioReceivingFrom audioReceivingFrom \u00b6 [Android] open fun audioReceivingFrom (): Boolean Identifies if the local client receives audio from the asked participant. This can be modified using startAudio or stopAudio methods. For example, if client A calls the stopAudio method to stop receiving audio from participant B and then calls participant.audioReceivingFrom for participant B, client A receives false. This means that client A does not receive audio streams from participant B. If the participants audioTransmitting is false, then its audioReceivingFrom will also be false as the conference is unable to send down audio for a participant that is not sending their audio into the conference. Note : This method is available only in SDK 3.2 and next releases.","title":"Audio receiving from"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant/audio-receiving-from/#audioreceivingfrom","text":"[Android] open fun audioReceivingFrom (): Boolean Identifies if the local client receives audio from the asked participant. This can be modified using startAudio or stopAudio methods. For example, if client A calls the stopAudio method to stop receiving audio from participant B and then calls participant.audioReceivingFrom for participant B, client A receives false. This means that client A does not receive audio streams from participant B. If the participants audioTransmitting is false, then its audioReceivingFrom will also be false as the conference is unable to send down audio for a participant that is not sending their audio into the conference. Note : This method is available only in SDK 3.2 and next releases.","title":"audioReceivingFrom"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant/audio-transmitting/","text":"// sdk / com.voxeet.sdk.models / Participant / audioTransmitting audioTransmitting \u00b6 [Android] open fun audioTransmitting (): Boolean The participant's audio transmitting status modified using start or stop methods on the local participant. This property is true when the participant is transmitting audio to the conference. If this property is false then it indicates that the participant is muted into the conference. Note : This property is available only in SDK 3.2 and next releases.","title":"Audio transmitting"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant/audio-transmitting/#audiotransmitting","text":"[Android] open fun audioTransmitting (): Boolean The participant's audio transmitting status modified using start or stop methods on the local participant. This property is true when the participant is transmitting audio to the conference. If this property is false then it indicates that the participant is muted into the conference. Note : This property is available only in SDK 3.2 and next releases.","title":"audioTransmitting"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant/get-info/","text":"// sdk / com.voxeet.sdk.models / Participant / getInfo getInfo \u00b6 [Android] @ Nullable open fun getInfo (): ParticipantInfo Gets information about the current participant.","title":"Get info"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant/get-info/#getinfo","text":"[Android] @ Nullable open fun getInfo (): ParticipantInfo Gets information about the current participant.","title":"getInfo"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant/id/","text":"// sdk / com.voxeet.sdk.models / Participant / id id \u00b6 [Android] @ Nullable @get: Nullable open val id : String","title":"Id"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant/id/#id","text":"[Android] @ Nullable @get: Nullable open val id : String","title":"id"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant/is-locally-active/","text":"// sdk / com.voxeet.sdk.models / Participant / isLocallyActive isLocallyActive \u00b6 [Android] open fun isLocallyActive (): Boolean Checks if the participant is connected to the local device.","title":"Is locally active"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant/is-locally-active/#islocallyactive","text":"[Android] open fun isLocallyActive (): Boolean Checks if the participant is connected to the local device.","title":"isLocallyActive"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant/participant-type/","text":"// sdk / com.voxeet.sdk.models / Participant / participantType participantType \u00b6 [Android] @ NonNull open fun participantType (): ParticipantType Gets the participant's type.","title":"Participant type"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant/participant-type/#participanttype","text":"[Android] @ NonNull open fun participantType (): ParticipantType Gets the participant's type.","title":"participantType"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant/status/","text":"// sdk / com.voxeet.sdk.models / Participant / status status \u00b6 [Android] @ NonNull @get: NonNull open val status : ConferenceParticipantStatus","title":"Status"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant/status/#status","text":"[Android] @ NonNull @get: NonNull open val status : ConferenceParticipantStatus","title":"status"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant/streams-handler/","text":"// sdk / com.voxeet.sdk.models / Participant / streamsHandler streamsHandler \u00b6 [Android] @ NonNull open fun streamsHandler (): ParticipantMediaStreamHandler Accesses streams manager that allows manipulating the participant's streams.","title":"Streams handler"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant/streams-handler/#streamshandler","text":"[Android] @ NonNull open fun streamsHandler (): ParticipantMediaStreamHandler Accesses streams manager that allows manipulating the participant's streams.","title":"streamsHandler"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant/streams/","text":"// sdk / com.voxeet.sdk.models / Participant / streams streams \u00b6 [Android] @ NonNull open fun streams (): List < MediaStream > Gets information about participant's streams.","title":"Streams"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant/streams/#streams","text":"[Android] @ NonNull open fun streams (): List < MediaStream > Gets information about participant's streams.","title":"streams"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant-notification/","text":"// sdk / com.voxeet.sdk.models / ParticipantNotification ParticipantNotification \u00b6 [Android] open class ParticipantNotification The ParticipantNotification model gathers information about conference participants mentioned in notifications. In includes participant's ID , status, and additional information . Functions \u00b6 Name Summary getInfo [Android] @ Nullable open fun getInfo (): ParticipantInfo Gets information about the current participant. Properties \u00b6 Name Summary id [Android] @ Nullable @get: Nullable open val id : String status [Android] @ NonNull @get: NonNull open val status : ConferenceParticipantStatus","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant-notification/#participantnotification","text":"[Android] open class ParticipantNotification The ParticipantNotification model gathers information about conference participants mentioned in notifications. In includes participant's ID , status, and additional information .","title":"ParticipantNotification"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant-notification/#functions","text":"Name Summary getInfo [Android] @ Nullable open fun getInfo (): ParticipantInfo Gets information about the current participant.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant-notification/#properties","text":"Name Summary id [Android] @ Nullable @get: Nullable open val id : String status [Android] @ NonNull @get: NonNull open val status : ConferenceParticipantStatus","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant-notification/get-info/","text":"// sdk / com.voxeet.sdk.models / ParticipantNotification / getInfo getInfo \u00b6 [Android] @ Nullable open fun getInfo (): ParticipantInfo Gets information about the current participant. Return \u00b6 displayed information.","title":"Get info"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant-notification/get-info/#getinfo","text":"[Android] @ Nullable open fun getInfo (): ParticipantInfo Gets information about the current participant.","title":"getInfo"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant-notification/get-info/#return","text":"displayed information.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant-notification/id/","text":"// sdk / com.voxeet.sdk.models / ParticipantNotification / id id \u00b6 [Android] @ Nullable @get: Nullable open val id : String","title":"Id"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant-notification/id/#id","text":"[Android] @ Nullable @get: Nullable open val id : String","title":"id"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant-notification/status/","text":"// sdk / com.voxeet.sdk.models / ParticipantNotification / status status \u00b6 [Android] @ NonNull @get: NonNull open val status : ConferenceParticipantStatus","title":"Status"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant-notification/status/#status","text":"[Android] @ NonNull @get: NonNull open val status : ConferenceParticipantStatus","title":"status"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant-permissions/","text":"// sdk / com.voxeet.sdk.models / ParticipantPermissions ParticipantPermissions \u00b6 [Android] open class ParticipantPermissions The ParticipantPermissions model includes information about the participant's permissions. The permissions allow the invited participant to perform a specific set of actions within a protected conference. Properties \u00b6 Name Summary participant [Android] @ NonNull open var participant : Participant The participant. permissions [Android] @ NonNull open var permissions : Set < ConferencePermission > The set of participant's conference permissions .","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant-permissions/#participantpermissions","text":"[Android] open class ParticipantPermissions The ParticipantPermissions model includes information about the participant's permissions. The permissions allow the invited participant to perform a specific set of actions within a protected conference.","title":"ParticipantPermissions"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant-permissions/#properties","text":"Name Summary participant [Android] @ NonNull open var participant : Participant The participant. permissions [Android] @ NonNull open var permissions : Set < ConferencePermission > The set of participant's conference permissions .","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant-permissions/participant/","text":"// sdk / com.voxeet.sdk.models / ParticipantPermissions / participant participant \u00b6 [Android] @ NonNull open var participant : Participant The participant.","title":"Participant"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant-permissions/participant/#participant","text":"[Android] @ NonNull open var participant : Participant The participant.","title":"participant"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant-permissions/permissions/","text":"// sdk / com.voxeet.sdk.models / ParticipantPermissions / permissions permissions \u00b6 [Android] @ NonNull open var permissions : Set < ConferencePermission > The set of participant's conference permissions .","title":"Permissions"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-participant-permissions/permissions/#permissions","text":"[Android] @ NonNull open var permissions : Set < ConferencePermission > The set of participant's conference permissions .","title":"permissions"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-video-forwarding-strategy/","text":"// sdk / com.voxeet.sdk.models / VideoForwardingStrategy VideoForwardingStrategy \u00b6 [Android] enum VideoForwardingStrategy The VideoForwardingStrategy model defines how the SDK should select conference participants whose videos will be transmitted to the local participant. There are two possible values; the selection can be either based on the participants' audio volume or the distance from the local participant. Selecting the video forwarding strategy is supported only on SDK 3.6 and later versions. On SDK 3.5 and earlier, the SDK supports only the LAST_SPEAKER strategy. By default, the SDK uses the LAST_SPEAKER strategy. Entries \u00b6 LAST_SPEAKER [Android] LAST_SPEAKER Selects participants based on their audio volume. This allows the local participant to receive video streams only from active speakers. CLOSEST_USER [Android] CLOSEST_USER Selects participants based on their distance from the local participant. This allows the local participant to receive video streams only from the nearest participants. This strategy is available only for participants who enabled spatial audio. Functions \u00b6 Name Summary valueOf [Android] open fun valueOf (name: String ): VideoForwardingStrategy Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < VideoForwardingStrategy > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-video-forwarding-strategy/#videoforwardingstrategy","text":"[Android] enum VideoForwardingStrategy The VideoForwardingStrategy model defines how the SDK should select conference participants whose videos will be transmitted to the local participant. There are two possible values; the selection can be either based on the participants' audio volume or the distance from the local participant. Selecting the video forwarding strategy is supported only on SDK 3.6 and later versions. On SDK 3.5 and earlier, the SDK supports only the LAST_SPEAKER strategy. By default, the SDK uses the LAST_SPEAKER strategy.","title":"VideoForwardingStrategy"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-video-forwarding-strategy/#entries","text":"LAST_SPEAKER [Android] LAST_SPEAKER Selects participants based on their audio volume. This allows the local participant to receive video streams only from active speakers. CLOSEST_USER [Android] CLOSEST_USER Selects participants based on their distance from the local participant. This allows the local participant to receive video streams only from the nearest participants. This strategy is available only for participants who enabled spatial audio.","title":"Entries"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-video-forwarding-strategy/#functions","text":"Name Summary valueOf [Android] open fun valueOf (name: String ): VideoForwardingStrategy Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < VideoForwardingStrategy > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-video-forwarding-strategy/value-of/","text":"// sdk / com.voxeet.sdk.models / VideoForwardingStrategy / valueOf valueOf \u00b6 [Android] open fun valueOf (name: String ): VideoForwardingStrategy Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) Return \u00b6 the enum constant with the specified name Throws \u00b6 IllegalArgumentException if this enum type has no constant with the specified name","title":"Value of"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-video-forwarding-strategy/value-of/#valueof","text":"[Android] open fun valueOf (name: String ): VideoForwardingStrategy Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)","title":"valueOf"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-video-forwarding-strategy/value-of/#return","text":"the enum constant with the specified name","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-video-forwarding-strategy/value-of/#throws","text":"IllegalArgumentException if this enum type has no constant with the specified name","title":"Throws"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-video-forwarding-strategy/values/","text":"// sdk / com.voxeet.sdk.models / VideoForwardingStrategy / values values \u00b6 [Android] open fun values (): Array < VideoForwardingStrategy > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants. Return \u00b6 an array containing the constants of this enum type, in the order they're declared","title":"Values"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-video-forwarding-strategy/values/#values","text":"[Android] open fun values (): Array < VideoForwardingStrategy > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants.","title":"values"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-video-forwarding-strategy/values/#return","text":"an array containing the constants of this enum type, in the order they're declared","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-video-forwarding-strategy/-c-l-o-s-e-s-t_-u-s-e-r/","text":"// sdk / com.voxeet.sdk.models / VideoForwardingStrategy / CLOSEST_USER CLOSEST_USER \u00b6 [Android] CLOSEST_USER Selects participants based on their distance from the local participant. This allows the local participant to receive video streams only from the nearest participants. This strategy is available only for participants who enabled spatial audio.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-video-forwarding-strategy/-c-l-o-s-e-s-t_-u-s-e-r/#closest_user","text":"[Android] CLOSEST_USER Selects participants based on their distance from the local participant. This allows the local participant to receive video streams only from the nearest participants. This strategy is available only for participants who enabled spatial audio.","title":"CLOSEST_USER"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-video-forwarding-strategy/-l-a-s-t_-s-p-e-a-k-e-r/","text":"// sdk / com.voxeet.sdk.models / VideoForwardingStrategy / LAST_SPEAKER LAST_SPEAKER \u00b6 [Android] LAST_SPEAKER Selects participants based on their audio volume. This allows the local participant to receive video streams only from active speakers.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models/-video-forwarding-strategy/-l-a-s-t_-s-p-e-a-k-e-r/#last_speaker","text":"[Android] LAST_SPEAKER Selects participants based on their audio volume. This allows the local participant to receive video streams only from active speakers.","title":"LAST_SPEAKER"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/","text":"// sdk / com.voxeet.sdk.models.v1 Package-level declarations \u00b6 Types \u00b6 Name Summary ConferenceParticipantStatus [Android] enum ConferenceParticipantStatus The ConferenceParticipantStatus represents the statuses of conference participants. CreateConferenceResult [Android] open class CreateConferenceResult The CreateConferenceResult model keeps the results of a conference API call, such as the conference ID and alias . FilePresentationConverted [Android] open class FilePresentationConverted Emitted when file presentation conversion completed.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/#types","text":"Name Summary ConferenceParticipantStatus [Android] enum ConferenceParticipantStatus The ConferenceParticipantStatus represents the statuses of conference participants. CreateConferenceResult [Android] open class CreateConferenceResult The CreateConferenceResult model keeps the results of a conference API call, such as the conference ID and alias . FilePresentationConverted [Android] open class FilePresentationConverted Emitted when file presentation conversion completed.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-conference-participant-status/","text":"// sdk / com.voxeet.sdk.models.v1 / ConferenceParticipantStatus ConferenceParticipantStatus \u00b6 [Android] enum ConferenceParticipantStatus The ConferenceParticipantStatus represents the statuses of conference participants. The following graphic shows possible status changes during a conference: Entries \u00b6 ON_AIR [Android] ON_AIR A participant successfully connected to a conference. In the next release, this status will be replaced with a new status. DECLINE [Android] DECLINE An invited participant declined the conference invitation. LEFT [Android] LEFT A participant left the conference. RESERVED [Android] RESERVED A participant is invited to a conference but has not joined it yet. CONNECTING [Android] CONNECTING A participant received the conference invitation and is connecting to a conference. INACTIVE [Android] INACTIVE A participant did not enable audio, video, or screen-share and, therefore, is not connected to any stream. WARNING [Android] WARNING A participant did not enable audio, video, or screen-share and, therefore, is not connected to any stream. ERROR [Android] ERROR A participant experiences a peer connection problem, which may result in the Error or Connected status. KICKED [Android] KICKED A participant was kicked from the conference. Functions \u00b6 Name Summary valueOf [Android] open fun valueOf (name: String ): ConferenceParticipantStatus Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < ConferenceParticipantStatus > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-conference-participant-status/#conferenceparticipantstatus","text":"[Android] enum ConferenceParticipantStatus The ConferenceParticipantStatus represents the statuses of conference participants. The following graphic shows possible status changes during a conference:","title":"ConferenceParticipantStatus"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-conference-participant-status/#entries","text":"ON_AIR [Android] ON_AIR A participant successfully connected to a conference. In the next release, this status will be replaced with a new status. DECLINE [Android] DECLINE An invited participant declined the conference invitation. LEFT [Android] LEFT A participant left the conference. RESERVED [Android] RESERVED A participant is invited to a conference but has not joined it yet. CONNECTING [Android] CONNECTING A participant received the conference invitation and is connecting to a conference. INACTIVE [Android] INACTIVE A participant did not enable audio, video, or screen-share and, therefore, is not connected to any stream. WARNING [Android] WARNING A participant did not enable audio, video, or screen-share and, therefore, is not connected to any stream. ERROR [Android] ERROR A participant experiences a peer connection problem, which may result in the Error or Connected status. KICKED [Android] KICKED A participant was kicked from the conference.","title":"Entries"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-conference-participant-status/#functions","text":"Name Summary valueOf [Android] open fun valueOf (name: String ): ConferenceParticipantStatus Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < ConferenceParticipantStatus > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-conference-participant-status/value-of/","text":"// sdk / com.voxeet.sdk.models.v1 / ConferenceParticipantStatus / valueOf valueOf \u00b6 [Android] open fun valueOf (name: String ): ConferenceParticipantStatus Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) Return \u00b6 the enum constant with the specified name Throws \u00b6 IllegalArgumentException if this enum type has no constant with the specified name","title":"Value of"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-conference-participant-status/value-of/#valueof","text":"[Android] open fun valueOf (name: String ): ConferenceParticipantStatus Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)","title":"valueOf"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-conference-participant-status/value-of/#return","text":"the enum constant with the specified name","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-conference-participant-status/value-of/#throws","text":"IllegalArgumentException if this enum type has no constant with the specified name","title":"Throws"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-conference-participant-status/values/","text":"// sdk / com.voxeet.sdk.models.v1 / ConferenceParticipantStatus / values values \u00b6 [Android] open fun values (): Array < ConferenceParticipantStatus > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants. Return \u00b6 an array containing the constants of this enum type, in the order they're declared","title":"Values"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-conference-participant-status/values/#values","text":"[Android] open fun values (): Array < ConferenceParticipantStatus > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants.","title":"values"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-conference-participant-status/values/#return","text":"an array containing the constants of this enum type, in the order they're declared","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-conference-participant-status/-c-o-n-n-e-c-t-i-n-g/","text":"// sdk / com.voxeet.sdk.models.v1 / ConferenceParticipantStatus / CONNECTING CONNECTING \u00b6 [Android] CONNECTING A participant received the conference invitation and is connecting to a conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-conference-participant-status/-c-o-n-n-e-c-t-i-n-g/#connecting","text":"[Android] CONNECTING A participant received the conference invitation and is connecting to a conference.","title":"CONNECTING"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-conference-participant-status/-d-e-c-l-i-n-e/","text":"// sdk / com.voxeet.sdk.models.v1 / ConferenceParticipantStatus / DECLINE DECLINE \u00b6 [Android] DECLINE An invited participant declined the conference invitation.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-conference-participant-status/-d-e-c-l-i-n-e/#decline","text":"[Android] DECLINE An invited participant declined the conference invitation.","title":"DECLINE"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-conference-participant-status/-e-r-r-o-r/","text":"// sdk / com.voxeet.sdk.models.v1 / ConferenceParticipantStatus / ERROR ERROR \u00b6 [Android] ERROR A participant experiences a peer connection problem, which may result in the Error or Connected status.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-conference-participant-status/-e-r-r-o-r/#error","text":"[Android] ERROR A participant experiences a peer connection problem, which may result in the Error or Connected status.","title":"ERROR"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-conference-participant-status/-i-n-a-c-t-i-v-e/","text":"// sdk / com.voxeet.sdk.models.v1 / ConferenceParticipantStatus / INACTIVE INACTIVE \u00b6 [Android] INACTIVE A participant did not enable audio, video, or screen-share and, therefore, is not connected to any stream.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-conference-participant-status/-i-n-a-c-t-i-v-e/#inactive","text":"[Android] INACTIVE A participant did not enable audio, video, or screen-share and, therefore, is not connected to any stream.","title":"INACTIVE"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-conference-participant-status/-k-i-c-k-e-d/","text":"// sdk / com.voxeet.sdk.models.v1 / ConferenceParticipantStatus / KICKED KICKED \u00b6 [Android] KICKED A participant was kicked from the conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-conference-participant-status/-k-i-c-k-e-d/#kicked","text":"[Android] KICKED A participant was kicked from the conference.","title":"KICKED"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-conference-participant-status/-l-e-f-t/","text":"// sdk / com.voxeet.sdk.models.v1 / ConferenceParticipantStatus / LEFT LEFT \u00b6 [Android] LEFT A participant left the conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-conference-participant-status/-l-e-f-t/#left","text":"[Android] LEFT A participant left the conference.","title":"LEFT"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-conference-participant-status/-o-n_-a-i-r/","text":"// sdk / com.voxeet.sdk.models.v1 / ConferenceParticipantStatus / ON_AIR ON_AIR \u00b6 [Android] ON_AIR A participant successfully connected to a conference. In the next release, this status will be replaced with a new status.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-conference-participant-status/-o-n_-a-i-r/#on_air","text":"[Android] ON_AIR A participant successfully connected to a conference. In the next release, this status will be replaced with a new status.","title":"ON_AIR"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-conference-participant-status/-r-e-s-e-r-v-e-d/","text":"// sdk / com.voxeet.sdk.models.v1 / ConferenceParticipantStatus / RESERVED RESERVED \u00b6 [Android] RESERVED A participant is invited to a conference but has not joined it yet.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-conference-participant-status/-r-e-s-e-r-v-e-d/#reserved","text":"[Android] RESERVED A participant is invited to a conference but has not joined it yet.","title":"RESERVED"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-conference-participant-status/-w-a-r-n-i-n-g/","text":"// sdk / com.voxeet.sdk.models.v1 / ConferenceParticipantStatus / WARNING WARNING \u00b6 [Android] WARNING A participant did not enable audio, video, or screen-share and, therefore, is not connected to any stream.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-conference-participant-status/-w-a-r-n-i-n-g/#warning","text":"[Android] WARNING A participant did not enable audio, video, or screen-share and, therefore, is not connected to any stream.","title":"WARNING"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-create-conference-result/","text":"// sdk / com.voxeet.sdk.models.v1 / CreateConferenceResult CreateConferenceResult \u00b6 [Android] open class CreateConferenceResult The CreateConferenceResult model keeps the results of a conference API call, such as the conference ID and alias . It also checks if the conference is new . Properties \u00b6 Name Summary conferenceAlias [Android] open var conferenceAlias : String Keeps the conference alias if provided by developers. conferenceId [Android] open var conferenceId : String Keeps the conference ID generated by Voxeet servers. isNew [Android] open var isNew : Boolean Indicates if a conference creation leads to a new conference or it already existed. ownerToken [Android] open var ownerToken : String owner Conference Access Token.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-create-conference-result/#createconferenceresult","text":"[Android] open class CreateConferenceResult The CreateConferenceResult model keeps the results of a conference API call, such as the conference ID and alias . It also checks if the conference is new .","title":"CreateConferenceResult"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-create-conference-result/#properties","text":"Name Summary conferenceAlias [Android] open var conferenceAlias : String Keeps the conference alias if provided by developers. conferenceId [Android] open var conferenceId : String Keeps the conference ID generated by Voxeet servers. isNew [Android] open var isNew : Boolean Indicates if a conference creation leads to a new conference or it already existed. ownerToken [Android] open var ownerToken : String owner Conference Access Token.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-create-conference-result/conference-alias/","text":"// sdk / com.voxeet.sdk.models.v1 / CreateConferenceResult / conferenceAlias conferenceAlias \u00b6 [Android] open var conferenceAlias : String Keeps the conference alias if provided by developers.","title":"Conference alias"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-create-conference-result/conference-alias/#conferencealias","text":"[Android] open var conferenceAlias : String Keeps the conference alias if provided by developers.","title":"conferenceAlias"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-create-conference-result/conference-id/","text":"// sdk / com.voxeet.sdk.models.v1 / CreateConferenceResult / conferenceId conferenceId \u00b6 [Android] open var conferenceId : String Keeps the conference ID generated by Voxeet servers.","title":"Conference id"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-create-conference-result/conference-id/#conferenceid","text":"[Android] open var conferenceId : String Keeps the conference ID generated by Voxeet servers.","title":"conferenceId"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-create-conference-result/is-new/","text":"// sdk / com.voxeet.sdk.models.v1 / CreateConferenceResult / isNew isNew \u00b6 [Android] open var isNew : Boolean Indicates if a conference creation leads to a new conference or it already existed.","title":"Is new"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-create-conference-result/is-new/#isnew","text":"[Android] open var isNew : Boolean Indicates if a conference creation leads to a new conference or it already existed.","title":"isNew"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-create-conference-result/owner-token/","text":"// sdk / com.voxeet.sdk.models.v1 / CreateConferenceResult / ownerToken ownerToken \u00b6 [Android] open var ownerToken : String owner Conference Access Token.","title":"Owner token"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-create-conference-result/owner-token/#ownertoken","text":"[Android] open var ownerToken : String owner Conference Access Token.","title":"ownerToken"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-file-presentation-converted/","text":"// sdk / com.voxeet.sdk.models.v1 / FilePresentationConverted FilePresentationConverted \u00b6 [Android] open class FilePresentationConverted Emitted when file presentation conversion completed. Properties \u00b6 Name Summary fileId [Android] open var fileId : String The file ID. name [Android] open var name : String The file title nbImageConverted [Android] open var nbImageConverted : Int The number of images of the presented file. size [Android] open var size : Long The file size","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-file-presentation-converted/#filepresentationconverted","text":"[Android] open class FilePresentationConverted Emitted when file presentation conversion completed.","title":"FilePresentationConverted"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-file-presentation-converted/#properties","text":"Name Summary fileId [Android] open var fileId : String The file ID. name [Android] open var name : String The file title nbImageConverted [Android] open var nbImageConverted : Int The number of images of the presented file. size [Android] open var size : Long The file size","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-file-presentation-converted/file-id/","text":"// sdk / com.voxeet.sdk.models.v1 / FilePresentationConverted / fileId fileId \u00b6 [Android] open var fileId : String The file ID.","title":"File id"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-file-presentation-converted/file-id/#fileid","text":"[Android] open var fileId : String The file ID.","title":"fileId"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-file-presentation-converted/name/","text":"// sdk / com.voxeet.sdk.models.v1 / FilePresentationConverted / name name \u00b6 [Android] open var name : String The file title","title":"Name"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-file-presentation-converted/name/#name","text":"[Android] open var name : String The file title","title":"name"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-file-presentation-converted/nb-image-converted/","text":"// sdk / com.voxeet.sdk.models.v1 / FilePresentationConverted / nbImageConverted nbImageConverted \u00b6 [Android] open var nbImageConverted : Int The number of images of the presented file.","title":"Nb image converted"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-file-presentation-converted/nb-image-converted/#nbimageconverted","text":"[Android] open var nbImageConverted : Int The number of images of the presented file.","title":"nbImageConverted"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-file-presentation-converted/size/","text":"// sdk / com.voxeet.sdk.models.v1 / FilePresentationConverted / size size \u00b6 [Android] open var size : Long The file size","title":"Size"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v1/-file-presentation-converted/size/#size","text":"[Android] open var size : Long The file size","title":"size"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/","text":"// sdk / com.voxeet.sdk.models.v2 Package-level declarations \u00b6 Types \u00b6 Name Summary ChatMessageType [Android] enum ChatMessageType The ChatMessageType model represents the types of messages sent via chat. ParticipantMediaStreamHandler [Android] open class ParticipantMediaStreamHandler The ParticipantMediaStreamHandler model manages media streams for the specific conference participants. ParticipantType [Android] enum ParticipantType : Comparable < T > The ParticipantType model gathers the possible types of a conference participant. ServerErrorOrigin [Android] enum ServerErrorOrigin The ServerErrorOrigin model gathers information about server errors.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/#types","text":"Name Summary ChatMessageType [Android] enum ChatMessageType The ChatMessageType model represents the types of messages sent via chat. ParticipantMediaStreamHandler [Android] open class ParticipantMediaStreamHandler The ParticipantMediaStreamHandler model manages media streams for the specific conference participants. ParticipantType [Android] enum ParticipantType : Comparable < T > The ParticipantType model gathers the possible types of a conference participant. ServerErrorOrigin [Android] enum ServerErrorOrigin The ServerErrorOrigin model gathers information about server errors.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-chat-message-type/","text":"// sdk / com.voxeet.sdk.models.v2 / ChatMessageType ChatMessageType \u00b6 [Android] enum ChatMessageType The ChatMessageType model represents the types of messages sent via chat. Only the text message is currently available. Functions \u00b6 Name Summary text [Android] @ Nullable open fun text (): String Provides the content of the chat message. valueOf [Android] open fun valueOf (name: String ): ChatMessageType Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < ChatMessageType > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-chat-message-type/#chatmessagetype","text":"[Android] enum ChatMessageType The ChatMessageType model represents the types of messages sent via chat. Only the text message is currently available.","title":"ChatMessageType"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-chat-message-type/#functions","text":"Name Summary text [Android] @ Nullable open fun text (): String Provides the content of the chat message. valueOf [Android] open fun valueOf (name: String ): ChatMessageType Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < ChatMessageType > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-chat-message-type/text/","text":"// sdk / com.voxeet.sdk.models.v2 / ChatMessageType / text text \u00b6 [Android] @ Nullable open fun text (): String Provides the content of the chat message. Return \u00b6 the content of the message or a null value if the message is empty.","title":"Text"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-chat-message-type/text/#text","text":"[Android] @ Nullable open fun text (): String Provides the content of the chat message.","title":"text"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-chat-message-type/text/#return","text":"the content of the message or a null value if the message is empty.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-chat-message-type/value-of/","text":"// sdk / com.voxeet.sdk.models.v2 / ChatMessageType / valueOf valueOf \u00b6 [Android] open fun valueOf (name: String ): ChatMessageType Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) Return \u00b6 the enum constant with the specified name Throws \u00b6 IllegalArgumentException if this enum type has no constant with the specified name","title":"Value of"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-chat-message-type/value-of/#valueof","text":"[Android] open fun valueOf (name: String ): ChatMessageType Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)","title":"valueOf"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-chat-message-type/value-of/#return","text":"the enum constant with the specified name","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-chat-message-type/value-of/#throws","text":"IllegalArgumentException if this enum type has no constant with the specified name","title":"Throws"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-chat-message-type/values/","text":"// sdk / com.voxeet.sdk.models.v2 / ChatMessageType / values values \u00b6 [Android] open fun values (): Array < ChatMessageType > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants. Return \u00b6 an array containing the constants of this enum type, in the order they're declared","title":"Values"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-chat-message-type/values/#values","text":"[Android] open fun values (): Array < ChatMessageType > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants.","title":"values"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-chat-message-type/values/#return","text":"an array containing the constants of this enum type, in the order they're declared","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-media-stream-handler/","text":"// sdk / com.voxeet.sdk.models.v2 / ParticipantMediaStreamHandler ParticipantMediaStreamHandler \u00b6 [Android] open class ParticipantMediaStreamHandler The ParticipantMediaStreamHandler model manages media streams for the specific conference participants. It checks the type of the streams, gets first streams , inserts or updates the streams, removes the specific streamspecific stream or all streams from participants. This model assumes that the RestParticipant.streams method resolves references for RestParticipant streams. Functions \u00b6 Name Summary getFirst [Android] @ Nullable open fun getFirst (@ NonNull type: MediaStreamType ): MediaStream Gets the first MediaStream corresponding to the given type. has [Android] open fun has (@ NonNull type: MediaStreamType ): Boolean Checks if a specific MediaStream Type exists in the current participant lifecycle. insertOrUpdate [Android] @ NonNull open fun insertOrUpdate (@ NonNull mediaStream: MediaStream ): Participant Inserts or updates a stream and manages this process. remove [Android] @ NonNull open fun remove (@ NonNull mediaStream: MediaStream ): Boolean @ NonNull open fun remove (@ NonNull type: MediaStreamType ): Boolean Removes the specific mediaStream from participants. removeAllStreams [Android] @ NonNull open fun removeAllStreams (): Participant Removes streams from the specific participant.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-media-stream-handler/#participantmediastreamhandler","text":"[Android] open class ParticipantMediaStreamHandler The ParticipantMediaStreamHandler model manages media streams for the specific conference participants. It checks the type of the streams, gets first streams , inserts or updates the streams, removes the specific streamspecific stream or all streams from participants. This model assumes that the RestParticipant.streams method resolves references for RestParticipant streams.","title":"ParticipantMediaStreamHandler"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-media-stream-handler/#functions","text":"Name Summary getFirst [Android] @ Nullable open fun getFirst (@ NonNull type: MediaStreamType ): MediaStream Gets the first MediaStream corresponding to the given type. has [Android] open fun has (@ NonNull type: MediaStreamType ): Boolean Checks if a specific MediaStream Type exists in the current participant lifecycle. insertOrUpdate [Android] @ NonNull open fun insertOrUpdate (@ NonNull mediaStream: MediaStream ): Participant Inserts or updates a stream and manages this process. remove [Android] @ NonNull open fun remove (@ NonNull mediaStream: MediaStream ): Boolean @ NonNull open fun remove (@ NonNull type: MediaStreamType ): Boolean Removes the specific mediaStream from participants. removeAllStreams [Android] @ NonNull open fun removeAllStreams (): Participant Removes streams from the specific participant.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-media-stream-handler/get-first/","text":"// sdk / com.voxeet.sdk.models.v2 / ParticipantMediaStreamHandler / getFirst getFirst \u00b6 [Android] @ Nullable open fun getFirst (@ NonNull type: MediaStreamType ): MediaStream Gets the first MediaStream corresponding to the given type. Return \u00b6 the MediaStream instance or a null value. Parameters \u00b6 Android type type of MediaStream","title":"Get first"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-media-stream-handler/get-first/#getfirst","text":"[Android] @ Nullable open fun getFirst (@ NonNull type: MediaStreamType ): MediaStream Gets the first MediaStream corresponding to the given type.","title":"getFirst"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-media-stream-handler/get-first/#return","text":"the MediaStream instance or a null value.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-media-stream-handler/get-first/#parameters","text":"Android type type of MediaStream","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-media-stream-handler/has/","text":"// sdk / com.voxeet.sdk.models.v2 / ParticipantMediaStreamHandler / has has \u00b6 [Android] open fun has (@ NonNull type: MediaStreamType ): Boolean Checks if a specific MediaStream Type exists in the current participant lifecycle. Return \u00b6 the search result. Parameters \u00b6 Android type type of MediaStream","title":"Has"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-media-stream-handler/has/#has","text":"[Android] open fun has (@ NonNull type: MediaStreamType ): Boolean Checks if a specific MediaStream Type exists in the current participant lifecycle.","title":"has"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-media-stream-handler/has/#return","text":"the search result.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-media-stream-handler/has/#parameters","text":"Android type type of MediaStream","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-media-stream-handler/insert-or-update/","text":"// sdk / com.voxeet.sdk.models.v2 / ParticipantMediaStreamHandler / insertOrUpdate insertOrUpdate \u00b6 [Android] @ NonNull open fun insertOrUpdate (@ NonNull mediaStream: MediaStream ): Participant Inserts or updates a stream and manages this process. Return \u00b6 the participant's instance. Parameters \u00b6 Android mediaStream MediaStream","title":"Insert or update"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-media-stream-handler/insert-or-update/#insertorupdate","text":"[Android] @ NonNull open fun insertOrUpdate (@ NonNull mediaStream: MediaStream ): Participant Inserts or updates a stream and manages this process.","title":"insertOrUpdate"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-media-stream-handler/insert-or-update/#return","text":"the participant's instance.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-media-stream-handler/insert-or-update/#parameters","text":"Android mediaStream MediaStream","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-media-stream-handler/remove-all-streams/","text":"// sdk / com.voxeet.sdk.models.v2 / ParticipantMediaStreamHandler / removeAllStreams removeAllStreams \u00b6 [Android] @ NonNull open fun removeAllStreams (): Participant Removes streams from the specific participant. Return \u00b6 the Participant instance","title":"Remove all streams"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-media-stream-handler/remove-all-streams/#removeallstreams","text":"[Android] @ NonNull open fun removeAllStreams (): Participant Removes streams from the specific participant.","title":"removeAllStreams"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-media-stream-handler/remove-all-streams/#return","text":"the Participant instance","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-media-stream-handler/remove/","text":"// sdk / com.voxeet.sdk.models.v2 / ParticipantMediaStreamHandler / remove remove \u00b6 [Android] @ NonNull open fun remove (@ NonNull mediaStream: MediaStream ): Boolean Removes the specific mediaStream from participants. Return \u00b6 the result of the erasure in the list. Parameters \u00b6 Android mediaStream MediaStream for removal [Android] @ NonNull open fun remove (@ NonNull type: MediaStreamType ): Boolean Removes the specific mediaStream from participants. Return \u00b6 if a given stream type was removed. Parameters \u00b6 Android type type of MediaStream to erase from the streams","title":"Remove"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-media-stream-handler/remove/#remove","text":"[Android] @ NonNull open fun remove (@ NonNull mediaStream: MediaStream ): Boolean Removes the specific mediaStream from participants.","title":"remove"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-media-stream-handler/remove/#return","text":"the result of the erasure in the list.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-media-stream-handler/remove/#parameters","text":"Android mediaStream MediaStream for removal [Android] @ NonNull open fun remove (@ NonNull type: MediaStreamType ): Boolean Removes the specific mediaStream from participants.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-media-stream-handler/remove/#return_1","text":"if a given stream type was removed.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-media-stream-handler/remove/#parameters_1","text":"Android type type of MediaStream to erase from the streams","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-type/","text":"// sdk / com.voxeet.sdk.models.v2 / ParticipantType ParticipantType \u00b6 [Android] enum ParticipantType : Comparable < T > The ParticipantType model gathers the possible types of a conference participant. Entries \u00b6 USER [Android] USER A participant who can send and receive audio and video during the conference. LISTENER [Android] LISTENER A participant who cannot send audio and video to a conference. PSTN [Android] PSTN A participant who connected to the conference using Public Switched Telephone Network (PSTN). MIXER [Android] MIXER A special participant who joins a conference to record it. NONE [Android] NONE A participant who does not have an assigned type. ROBOT [Android] ROBOT A USER who is present during a replay of a recorded conference. ROBOT_LISTENER [Android] ROBOT_LISTENER A LISTENER who is present during a replay of a recorded conference. ROBOT_PSTN [Android] ROBOT_PSTN A PSTN participant who is present during a replay of a recorded conference. ROBOT_MIXER [Android] ROBOT_MIXER A MIXER who is present during a replay of a recorded conference. ROBOT_NONE [Android] ROBOT_NONE A participant who does not have an assigned type during a replay of a recorded conference. Functions \u00b6 Name Summary valueOf [Android] open fun valueOf (name: String ): ParticipantType Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < ParticipantType > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-type/#participanttype","text":"[Android] enum ParticipantType : Comparable < T > The ParticipantType model gathers the possible types of a conference participant.","title":"ParticipantType"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-type/#entries","text":"USER [Android] USER A participant who can send and receive audio and video during the conference. LISTENER [Android] LISTENER A participant who cannot send audio and video to a conference. PSTN [Android] PSTN A participant who connected to the conference using Public Switched Telephone Network (PSTN). MIXER [Android] MIXER A special participant who joins a conference to record it. NONE [Android] NONE A participant who does not have an assigned type. ROBOT [Android] ROBOT A USER who is present during a replay of a recorded conference. ROBOT_LISTENER [Android] ROBOT_LISTENER A LISTENER who is present during a replay of a recorded conference. ROBOT_PSTN [Android] ROBOT_PSTN A PSTN participant who is present during a replay of a recorded conference. ROBOT_MIXER [Android] ROBOT_MIXER A MIXER who is present during a replay of a recorded conference. ROBOT_NONE [Android] ROBOT_NONE A participant who does not have an assigned type during a replay of a recorded conference.","title":"Entries"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-type/#functions","text":"Name Summary valueOf [Android] open fun valueOf (name: String ): ParticipantType Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < ParticipantType > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-type/value-of/","text":"// sdk / com.voxeet.sdk.models.v2 / ParticipantType / valueOf valueOf \u00b6 [Android] open fun valueOf (name: String ): ParticipantType Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) Return \u00b6 the enum constant with the specified name Throws \u00b6 IllegalArgumentException if this enum type has no constant with the specified name","title":"Value of"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-type/value-of/#valueof","text":"[Android] open fun valueOf (name: String ): ParticipantType Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)","title":"valueOf"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-type/value-of/#return","text":"the enum constant with the specified name","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-type/value-of/#throws","text":"IllegalArgumentException if this enum type has no constant with the specified name","title":"Throws"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-type/values/","text":"// sdk / com.voxeet.sdk.models.v2 / ParticipantType / values values \u00b6 [Android] open fun values (): Array < ParticipantType > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants. Return \u00b6 an array containing the constants of this enum type, in the order they're declared","title":"Values"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-type/values/#values","text":"[Android] open fun values (): Array < ParticipantType > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants.","title":"values"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-type/values/#return","text":"an array containing the constants of this enum type, in the order they're declared","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-type/-l-i-s-t-e-n-e-r/","text":"// sdk / com.voxeet.sdk.models.v2 / ParticipantType / LISTENER LISTENER \u00b6 [Android] LISTENER A participant who cannot send audio and video to a conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-type/-l-i-s-t-e-n-e-r/#listener","text":"[Android] LISTENER A participant who cannot send audio and video to a conference.","title":"LISTENER"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-type/-m-i-x-e-r/","text":"// sdk / com.voxeet.sdk.models.v2 / ParticipantType / MIXER MIXER \u00b6 [Android] MIXER A special participant who joins a conference to record it.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-type/-m-i-x-e-r/#mixer","text":"[Android] MIXER A special participant who joins a conference to record it.","title":"MIXER"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-type/-n-o-n-e/","text":"// sdk / com.voxeet.sdk.models.v2 / ParticipantType / NONE NONE \u00b6 [Android] NONE A participant who does not have an assigned type.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-type/-n-o-n-e/#none","text":"[Android] NONE A participant who does not have an assigned type.","title":"NONE"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-type/-p-s-t-n/","text":"// sdk / com.voxeet.sdk.models.v2 / ParticipantType / PSTN PSTN \u00b6 [Android] PSTN A participant who connected to the conference using Public Switched Telephone Network (PSTN).","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-type/-p-s-t-n/#pstn","text":"[Android] PSTN A participant who connected to the conference using Public Switched Telephone Network (PSTN).","title":"PSTN"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-type/-r-o-b-o-t/","text":"// sdk / com.voxeet.sdk.models.v2 / ParticipantType / ROBOT ROBOT \u00b6 [Android] ROBOT A USER who is present during a replay of a recorded conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-type/-r-o-b-o-t/#robot","text":"[Android] ROBOT A USER who is present during a replay of a recorded conference.","title":"ROBOT"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-type/-r-o-b-o-t_-l-i-s-t-e-n-e-r/","text":"// sdk / com.voxeet.sdk.models.v2 / ParticipantType / ROBOT_LISTENER ROBOT_LISTENER \u00b6 [Android] ROBOT_LISTENER A LISTENER who is present during a replay of a recorded conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-type/-r-o-b-o-t_-l-i-s-t-e-n-e-r/#robot_listener","text":"[Android] ROBOT_LISTENER A LISTENER who is present during a replay of a recorded conference.","title":"ROBOT_LISTENER"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-type/-r-o-b-o-t_-m-i-x-e-r/","text":"// sdk / com.voxeet.sdk.models.v2 / ParticipantType / ROBOT_MIXER ROBOT_MIXER \u00b6 [Android] ROBOT_MIXER A MIXER who is present during a replay of a recorded conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-type/-r-o-b-o-t_-m-i-x-e-r/#robot_mixer","text":"[Android] ROBOT_MIXER A MIXER who is present during a replay of a recorded conference.","title":"ROBOT_MIXER"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-type/-r-o-b-o-t_-n-o-n-e/","text":"// sdk / com.voxeet.sdk.models.v2 / ParticipantType / ROBOT_NONE ROBOT_NONE \u00b6 [Android] ROBOT_NONE A participant who does not have an assigned type during a replay of a recorded conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-type/-r-o-b-o-t_-n-o-n-e/#robot_none","text":"[Android] ROBOT_NONE A participant who does not have an assigned type during a replay of a recorded conference.","title":"ROBOT_NONE"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-type/-r-o-b-o-t_-p-s-t-n/","text":"// sdk / com.voxeet.sdk.models.v2 / ParticipantType / ROBOT_PSTN ROBOT_PSTN \u00b6 [Android] ROBOT_PSTN A PSTN participant who is present during a replay of a recorded conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-type/-r-o-b-o-t_-p-s-t-n/#robot_pstn","text":"[Android] ROBOT_PSTN A PSTN participant who is present during a replay of a recorded conference.","title":"ROBOT_PSTN"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-type/-u-s-e-r/","text":"// sdk / com.voxeet.sdk.models.v2 / ParticipantType / USER USER \u00b6 [Android] USER A participant who can send and receive audio and video during the conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-participant-type/-u-s-e-r/#user","text":"[Android] USER A participant who can send and receive audio and video during the conference.","title":"USER"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-server-error-origin/","text":"// sdk / com.voxeet.sdk.models.v2 / ServerErrorOrigin ServerErrorOrigin \u00b6 [Android] enum ServerErrorOrigin The ServerErrorOrigin model gathers information about server errors. Functions \u00b6 Name Summary valueOf [Android] open fun valueOf (name: String ): ServerErrorOrigin Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < ServerErrorOrigin > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-server-error-origin/#servererrororigin","text":"[Android] enum ServerErrorOrigin The ServerErrorOrigin model gathers information about server errors.","title":"ServerErrorOrigin"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-server-error-origin/#functions","text":"Name Summary valueOf [Android] open fun valueOf (name: String ): ServerErrorOrigin Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < ServerErrorOrigin > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-server-error-origin/value-of/","text":"// sdk / com.voxeet.sdk.models.v2 / ServerErrorOrigin / valueOf valueOf \u00b6 [Android] open fun valueOf (name: String ): ServerErrorOrigin Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) Return \u00b6 the enum constant with the specified name Throws \u00b6 IllegalArgumentException if this enum type has no constant with the specified name","title":"Value of"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-server-error-origin/value-of/#valueof","text":"[Android] open fun valueOf (name: String ): ServerErrorOrigin Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)","title":"valueOf"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-server-error-origin/value-of/#return","text":"the enum constant with the specified name","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-server-error-origin/value-of/#throws","text":"IllegalArgumentException if this enum type has no constant with the specified name","title":"Throws"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-server-error-origin/values/","text":"// sdk / com.voxeet.sdk.models.v2 / ServerErrorOrigin / values values \u00b6 [Android] open fun values (): Array < ServerErrorOrigin > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants. Return \u00b6 an array containing the constants of this enum type, in the order they're declared","title":"Values"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-server-error-origin/values/#values","text":"[Android] open fun values (): Array < ServerErrorOrigin > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants.","title":"values"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v2/-server-error-origin/values/#return","text":"an array containing the constants of this enum type, in the order they're declared","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v3/","text":"// sdk / com.voxeet.sdk.models.v3 Package-level declarations \u00b6 Types \u00b6 Name Summary ConferenceStatusResult [Android] open class ConferenceStatusResult : ConferenceStatusResult The ConferenceStatusResult model gathers conference information, such as the ID , alias , and information if it is live .","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v3/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v3/#types","text":"Name Summary ConferenceStatusResult [Android] open class ConferenceStatusResult : ConferenceStatusResult The ConferenceStatusResult model gathers conference information, such as the ID , alias , and information if it is live .","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v3/-conference-status-result/","text":"// sdk / com.voxeet.sdk.models.v3 / ConferenceStatusResult ConferenceStatusResult \u00b6 [Android] open class ConferenceStatusResult : ConferenceStatusResult The ConferenceStatusResult model gathers conference information, such as the ID , alias , and information if it is live . It also allows getting a list of conference participants . Functions \u00b6 Name Summary getConferenceUsers [Android] @ NonNull open fun getConferenceUsers (): List < Participant > Get a copy of the participants' list. Properties \u00b6 Name Summary conferenceAlias [Android] @ Nullable open var conferenceAlias : String The conference alias. conferenceId [Android] @ Nullable open var conferenceId : String The conference ID. isLive [Android] open var isLive : Boolean Flag indicating the current live status.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v3/-conference-status-result/#conferencestatusresult","text":"[Android] open class ConferenceStatusResult : ConferenceStatusResult The ConferenceStatusResult model gathers conference information, such as the ID , alias , and information if it is live . It also allows getting a list of conference participants .","title":"ConferenceStatusResult"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v3/-conference-status-result/#functions","text":"Name Summary getConferenceUsers [Android] @ NonNull open fun getConferenceUsers (): List < Participant > Get a copy of the participants' list.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v3/-conference-status-result/#properties","text":"Name Summary conferenceAlias [Android] @ Nullable open var conferenceAlias : String The conference alias. conferenceId [Android] @ Nullable open var conferenceId : String The conference ID. isLive [Android] open var isLive : Boolean Flag indicating the current live status.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v3/-conference-status-result/get-conference-users/","text":"// sdk / com.voxeet.sdk.models.v3 / ConferenceStatusResult / getConferenceUsers getConferenceUsers \u00b6 [Android] @ NonNull open fun getConferenceUsers (): List < Participant > Get a copy of the participants' list. Return \u00b6 list of participants","title":"Get conference users"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v3/-conference-status-result/get-conference-users/#getconferenceusers","text":"[Android] @ NonNull open fun getConferenceUsers (): List < Participant > Get a copy of the participants' list.","title":"getConferenceUsers"},{"location":"android-reference/sdk/com.voxeet.sdk.models.v3/-conference-status-result/get-conference-users/#return","text":"list of participants","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center/","text":"// sdk / com.voxeet.sdk.push.center Package-level declarations \u00b6 Types \u00b6 Name Summary NotificationCenter [Android] open class NotificationCenter The NotificationCenter model represents an interface that is responsible for providing the VideoCapturer on demand for the Media Engine.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center/#types","text":"Name Summary NotificationCenter [Android] open class NotificationCenter The NotificationCenter model represents an interface that is responsible for providing the VideoCapturer on demand for the Media Engine.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center/-notification-center/","text":"// sdk / com.voxeet.sdk.push.center / NotificationCenter NotificationCenter \u00b6 [Android] open class NotificationCenter The NotificationCenter model represents an interface that is responsible for providing the VideoCapturer on demand for the Media Engine. Implements are responsible for tracking the capturers that are sent to the engine. The SDK does not manage the switch when a switchable capturer is provided. The switch needs to be managed by the provider. Functions \u00b6 Name Summary onInvitationCanceledReceived [Android] @ NonNull open fun onInvitationCanceledReceived (@ NonNull context: Context , @ NonNull conferenceId: String ): String Method called by the SDK when WebSocket or a plugin receives a push notification concerning a cancelled invitation. onInvitationReceived [Android] open fun onInvitationReceived (@ NonNull context: Context , @ NonNull invitationBundle: InvitationBundle ) Method called by the SDK when a WebSocket or a plugin receives a push notification concerning an invitation. register [Android] open fun register (@ NonNull notificationMode: NotificationMode , @ Nullable invitationProvider: IIncomingInvitationListener ): NotificationCenter Registers the IIncomingInvitationListener model dedicated to the NotificationMode and replaces the prevoiusly used model if the NotificationMode has already an attached listener. [Android] open fun register (@ NonNull notificationMode: NotificationMode , @ NonNull filter: VersionFilter ): NotificationCenter Registers the VersionFilter model for the specified NotificationMode . setEnforcedNotificationMode [Android] open fun setEnforcedNotificationMode (@ NonNull enforcedNotificationMode: EnforcedNotificationMode ): NotificationCenter Changes the notification management mode into the enforcedNotificationMode.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center/-notification-center/#notificationcenter","text":"[Android] open class NotificationCenter The NotificationCenter model represents an interface that is responsible for providing the VideoCapturer on demand for the Media Engine. Implements are responsible for tracking the capturers that are sent to the engine. The SDK does not manage the switch when a switchable capturer is provided. The switch needs to be managed by the provider.","title":"NotificationCenter"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center/-notification-center/#functions","text":"Name Summary onInvitationCanceledReceived [Android] @ NonNull open fun onInvitationCanceledReceived (@ NonNull context: Context , @ NonNull conferenceId: String ): String Method called by the SDK when WebSocket or a plugin receives a push notification concerning a cancelled invitation. onInvitationReceived [Android] open fun onInvitationReceived (@ NonNull context: Context , @ NonNull invitationBundle: InvitationBundle ) Method called by the SDK when a WebSocket or a plugin receives a push notification concerning an invitation. register [Android] open fun register (@ NonNull notificationMode: NotificationMode , @ Nullable invitationProvider: IIncomingInvitationListener ): NotificationCenter Registers the IIncomingInvitationListener model dedicated to the NotificationMode and replaces the prevoiusly used model if the NotificationMode has already an attached listener. [Android] open fun register (@ NonNull notificationMode: NotificationMode , @ NonNull filter: VersionFilter ): NotificationCenter Registers the VersionFilter model for the specified NotificationMode . setEnforcedNotificationMode [Android] open fun setEnforcedNotificationMode (@ NonNull enforcedNotificationMode: EnforcedNotificationMode ): NotificationCenter Changes the notification management mode into the enforcedNotificationMode.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center/-notification-center/on-invitation-canceled-received/","text":"// sdk / com.voxeet.sdk.push.center / NotificationCenter / onInvitationCanceledReceived onInvitationCanceledReceived \u00b6 [Android] @ NonNull open fun onInvitationCanceledReceived (@ NonNull context: Context , @ NonNull conferenceId: String ): String Method called by the SDK when WebSocket or a plugin receives a push notification concerning a cancelled invitation. It is possible to use this method when the SDK works on a system that is not Firebase compatible or different library is used. If external push notifications are managed elsewhere, then transform the Bundle or data to a valid InvitationBundle model. Return \u00b6 the corresponding conference ID Parameters \u00b6 Android context valid context to use","title":"On invitation canceled received"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center/-notification-center/on-invitation-canceled-received/#oninvitationcanceledreceived","text":"[Android] @ NonNull open fun onInvitationCanceledReceived (@ NonNull context: Context , @ NonNull conferenceId: String ): String Method called by the SDK when WebSocket or a plugin receives a push notification concerning a cancelled invitation. It is possible to use this method when the SDK works on a system that is not Firebase compatible or different library is used. If external push notifications are managed elsewhere, then transform the Bundle or data to a valid InvitationBundle model.","title":"onInvitationCanceledReceived"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center/-notification-center/on-invitation-canceled-received/#return","text":"the corresponding conference ID","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center/-notification-center/on-invitation-canceled-received/#parameters","text":"Android context valid context to use","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center/-notification-center/on-invitation-received/","text":"// sdk / com.voxeet.sdk.push.center / NotificationCenter / onInvitationReceived onInvitationReceived \u00b6 [Android] open fun onInvitationReceived (@ NonNull context: Context , @ NonNull invitationBundle: InvitationBundle ) Method called by the SDK when a WebSocket or a plugin receives a push notification concerning an invitation. It is possible to use this method when the SDK works in a system that is not Firebase compatible or different library is used. If external push notifications are managed elsewhere, then transform the Bundle or data to a valid InvitationBundle model. Parameters \u00b6 Android context valid context to use invitationBundle InvitationBundle instance","title":"On invitation received"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center/-notification-center/on-invitation-received/#oninvitationreceived","text":"[Android] open fun onInvitationReceived (@ NonNull context: Context , @ NonNull invitationBundle: InvitationBundle ) Method called by the SDK when a WebSocket or a plugin receives a push notification concerning an invitation. It is possible to use this method when the SDK works in a system that is not Firebase compatible or different library is used. If external push notifications are managed elsewhere, then transform the Bundle or data to a valid InvitationBundle model.","title":"onInvitationReceived"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center/-notification-center/on-invitation-received/#parameters","text":"Android context valid context to use invitationBundle InvitationBundle instance","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center/-notification-center/register/","text":"// sdk / com.voxeet.sdk.push.center / NotificationCenter / register register \u00b6 [Android] open fun register (@ NonNull notificationMode: NotificationMode , @ Nullable invitationProvider: IIncomingInvitationListener ): NotificationCenter Registers the IIncomingInvitationListener model dedicated to the NotificationMode and replaces the prevoiusly used model if the NotificationMode has already an attached listener. Return \u00b6 the current instance. Parameters \u00b6 Android notificationMode valid NotificationMode that receives the provider invitationProvider instance to register [Android] open fun register (@ NonNull notificationMode: NotificationMode , @ NonNull filter: VersionFilter ): NotificationCenter Registers the VersionFilter model for the specified NotificationMode . Return \u00b6 the current instance. Parameters \u00b6 Android notificationMode valid NotificationMode that receives the filter filter filter to apply","title":"Register"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center/-notification-center/register/#register","text":"[Android] open fun register (@ NonNull notificationMode: NotificationMode , @ Nullable invitationProvider: IIncomingInvitationListener ): NotificationCenter Registers the IIncomingInvitationListener model dedicated to the NotificationMode and replaces the prevoiusly used model if the NotificationMode has already an attached listener.","title":"register"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center/-notification-center/register/#return","text":"the current instance.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center/-notification-center/register/#parameters","text":"Android notificationMode valid NotificationMode that receives the provider invitationProvider instance to register [Android] open fun register (@ NonNull notificationMode: NotificationMode , @ NonNull filter: VersionFilter ): NotificationCenter Registers the VersionFilter model for the specified NotificationMode .","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center/-notification-center/register/#return_1","text":"the current instance.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center/-notification-center/register/#parameters_1","text":"Android notificationMode valid NotificationMode that receives the filter filter filter to apply","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center/-notification-center/set-enforced-notification-mode/","text":"// sdk / com.voxeet.sdk.push.center / NotificationCenter / setEnforcedNotificationMode setEnforcedNotificationMode \u00b6 [Android] open fun setEnforcedNotificationMode (@ NonNull enforcedNotificationMode: EnforcedNotificationMode ): NotificationCenter Changes the notification management mode into the enforcedNotificationMode. Return \u00b6 the current instance. Parameters \u00b6 Android enforcedNotificationMode a new mode","title":"Set enforced notification mode"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center/-notification-center/set-enforced-notification-mode/#setenforcednotificationmode","text":"[Android] open fun setEnforcedNotificationMode (@ NonNull enforcedNotificationMode: EnforcedNotificationMode ): NotificationCenter Changes the notification management mode into the enforcedNotificationMode.","title":"setEnforcedNotificationMode"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center/-notification-center/set-enforced-notification-mode/#return","text":"the current instance.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center/-notification-center/set-enforced-notification-mode/#parameters","text":"Android enforcedNotificationMode a new mode","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/","text":"// sdk / com.voxeet.sdk.push.center.invitation Package-level declarations \u00b6 Types \u00b6 Name Summary IIncomingInvitationListener [Android] interface IIncomingInvitationListener The IIncomingInvitationListener model gathers methods that can be called after receiving conference invitations or information about canceled conferences. InvitationBundle [Android] open class InvitationBundle The InvitationBundle model represents a typical push notification invitation to a conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/#types","text":"Name Summary IIncomingInvitationListener [Android] interface IIncomingInvitationListener The IIncomingInvitationListener model gathers methods that can be called after receiving conference invitations or information about canceled conferences. InvitationBundle [Android] open class InvitationBundle The InvitationBundle model represents a typical push notification invitation to a conference.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/-i-incoming-invitation-listener/","text":"// sdk / com.voxeet.sdk.push.center.invitation / IIncomingInvitationListener IIncomingInvitationListener \u00b6 [Android] interface IIncomingInvitationListener The IIncomingInvitationListener model gathers methods that can be called after receiving conference invitations or information about canceled conferences. Functions \u00b6 Name Summary onInvitation [Android] abstract fun onInvitation (@ NonNull context: Context , @ NonNull invitationBundle: InvitationBundle ) A method called by the SDK when the incoming invitation is received. onInvitationCanceled [Android] abstract fun onInvitationCanceled (@ NonNull context: Context , @ NonNull conferenceId: String ) A method called by the SDK when an invitation is canceled.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/-i-incoming-invitation-listener/#iincominginvitationlistener","text":"[Android] interface IIncomingInvitationListener The IIncomingInvitationListener model gathers methods that can be called after receiving conference invitations or information about canceled conferences.","title":"IIncomingInvitationListener"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/-i-incoming-invitation-listener/#functions","text":"Name Summary onInvitation [Android] abstract fun onInvitation (@ NonNull context: Context , @ NonNull invitationBundle: InvitationBundle ) A method called by the SDK when the incoming invitation is received. onInvitationCanceled [Android] abstract fun onInvitationCanceled (@ NonNull context: Context , @ NonNull conferenceId: String ) A method called by the SDK when an invitation is canceled.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/-i-incoming-invitation-listener/on-invitation-canceled/","text":"// sdk / com.voxeet.sdk.push.center.invitation / IIncomingInvitationListener / onInvitationCanceled onInvitationCanceled \u00b6 [Android] abstract fun onInvitationCanceled (@ NonNull context: Context , @ NonNull conferenceId: String ) A method called by the SDK when an invitation is canceled. Parameters \u00b6 Android context valid application context. conferenceId ID of the cancelled conference.","title":"On invitation canceled"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/-i-incoming-invitation-listener/on-invitation-canceled/#oninvitationcanceled","text":"[Android] abstract fun onInvitationCanceled (@ NonNull context: Context , @ NonNull conferenceId: String ) A method called by the SDK when an invitation is canceled.","title":"onInvitationCanceled"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/-i-incoming-invitation-listener/on-invitation-canceled/#parameters","text":"Android context valid application context. conferenceId ID of the cancelled conference.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/-i-incoming-invitation-listener/on-invitation/","text":"// sdk / com.voxeet.sdk.push.center.invitation / IIncomingInvitationListener / onInvitation onInvitation \u00b6 [Android] abstract fun onInvitation (@ NonNull context: Context , @ NonNull invitationBundle: InvitationBundle ) A method called by the SDK when the incoming invitation is received. Parameters \u00b6 Android context valid application context. invitationBundle underlying invitation.","title":"On invitation"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/-i-incoming-invitation-listener/on-invitation/#oninvitation","text":"[Android] abstract fun onInvitation (@ NonNull context: Context , @ NonNull invitationBundle: InvitationBundle ) A method called by the SDK when the incoming invitation is received.","title":"onInvitation"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/-i-incoming-invitation-listener/on-invitation/#parameters","text":"Android context valid application context. invitationBundle underlying invitation.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/-invitation-bundle/","text":"// sdk / com.voxeet.sdk.push.center.invitation / InvitationBundle InvitationBundle \u00b6 [Android] open class InvitationBundle The InvitationBundle model represents a typical push notification invitation to a conference. The InvitationBundle constructs an invitation that can be transformed as a map or as a bundle . It includes the inviter's name and the conferenceID . Constructors \u00b6 InvitationBundle [Android] open fun InvitationBundle (@ Nullable inviterId: String , @ Nullable inviterName: String , @ Nullable inviterExternalId: String , @ Nullable conferenceId: String , @ Nullable inviterAvatarUrl: String ) Constructs an invitation using raw values. InvitationBundle [Android] open fun InvitationBundle (@ Nullable inviterId: String , @ Nullable inviterName: String , @ Nullable inviterExternalId: String , @ Nullable conferenceId: String , @ Nullable inviterAvatarUrl: String , @ Nullable conferenceAlias: String ) Constructs an invitation using raw values. InvitationBundle [Android] open fun InvitationBundle (@ NonNull bundle: Bundle ) Constructs an invitation using a native Bundle. InvitationBundle [Android] open fun InvitationBundle (@ NonNull remoteMessage: Map < String , String >) Construct an invitation from a Map. Functions \u00b6 Name Summary asBundle [Android] @ NonNull open fun asBundle (): Bundle Transforms this current invitation into a native Bundle. asMap [Android] @ NonNull open fun asMap (): Map < String , String > Transforms the current invitation into a Map. Properties \u00b6 Name Summary conferenceAlias [Android] @ Nullable open var conferenceAlias : String The optional conference Alias. conferenceId [Android] @ Nullable open var conferenceId : String The conference ID. inviter [Android] @ NonNull open var inviter : ParticipantNotification The inviter.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/-invitation-bundle/#invitationbundle","text":"[Android] open class InvitationBundle The InvitationBundle model represents a typical push notification invitation to a conference. The InvitationBundle constructs an invitation that can be transformed as a map or as a bundle . It includes the inviter's name and the conferenceID .","title":"InvitationBundle"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/-invitation-bundle/#constructors","text":"InvitationBundle [Android] open fun InvitationBundle (@ Nullable inviterId: String , @ Nullable inviterName: String , @ Nullable inviterExternalId: String , @ Nullable conferenceId: String , @ Nullable inviterAvatarUrl: String ) Constructs an invitation using raw values. InvitationBundle [Android] open fun InvitationBundle (@ Nullable inviterId: String , @ Nullable inviterName: String , @ Nullable inviterExternalId: String , @ Nullable conferenceId: String , @ Nullable inviterAvatarUrl: String , @ Nullable conferenceAlias: String ) Constructs an invitation using raw values. InvitationBundle [Android] open fun InvitationBundle (@ NonNull bundle: Bundle ) Constructs an invitation using a native Bundle. InvitationBundle [Android] open fun InvitationBundle (@ NonNull remoteMessage: Map < String , String >) Construct an invitation from a Map.","title":"Constructors"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/-invitation-bundle/#functions","text":"Name Summary asBundle [Android] @ NonNull open fun asBundle (): Bundle Transforms this current invitation into a native Bundle. asMap [Android] @ NonNull open fun asMap (): Map < String , String > Transforms the current invitation into a Map.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/-invitation-bundle/#properties","text":"Name Summary conferenceAlias [Android] @ Nullable open var conferenceAlias : String The optional conference Alias. conferenceId [Android] @ Nullable open var conferenceId : String The conference ID. inviter [Android] @ NonNull open var inviter : ParticipantNotification The inviter.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/-invitation-bundle/-invitation-bundle/","text":"// sdk / com.voxeet.sdk.push.center.invitation / InvitationBundle / InvitationBundle InvitationBundle \u00b6 [Android] open fun InvitationBundle (@ Nullable inviterId: String , @ Nullable inviterName: String , @ Nullable inviterExternalId: String , @ Nullable conferenceId: String , @ Nullable inviterAvatarUrl: String ) Constructs an invitation using raw values. Parameters \u00b6 Android inviterId inviter's ID, it has to contain a non-null value to be valid inviterName inviter's name, it can contain a null value inviterExternalId inviter's external ID, it can contain a null value conferenceId ID of the conference, it has to contain a non-null value to be valid inviterAvatarUrl URL of the inviter's avatar, it can contain a null value [Android] open fun InvitationBundle (@ Nullable inviterId: String , @ Nullable inviterName: String , @ Nullable inviterExternalId: String , @ Nullable conferenceId: String , @ Nullable inviterAvatarUrl: String , @ Nullable conferenceAlias: String ) Constructs an invitation using raw values. Parameters \u00b6 Android inviterId inviter's ID, it has to contain a non-null value to be valid inviterName inviter's name, it can contain a null value inviterExternalId inviter's external ID, it can contain a null value conferenceId ID of the conference, it has to contain a non-null value to be valid inviterAvatarUrl URL of the inviter's avatar, it can contain a null value conferenceAlias Optional alias of the conference [Android] open fun InvitationBundle (@ NonNull bundle: Bundle ) Constructs an invitation using a native Bundle. Refer to the Constants for the available keys. Parameters \u00b6 Android bundle Bundle, any null Bundle will trigger an exception [Android] open fun InvitationBundle (@ NonNull remoteMessage: Map < String , String >) Construct an invitation from a Map. Refer to the Constants for the available keys. Parameters \u00b6 Android remoteMessage The remote message. must be non-null, Any null Map will trigger an exception","title":" invitation bundle"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/-invitation-bundle/-invitation-bundle/#invitationbundle","text":"[Android] open fun InvitationBundle (@ Nullable inviterId: String , @ Nullable inviterName: String , @ Nullable inviterExternalId: String , @ Nullable conferenceId: String , @ Nullable inviterAvatarUrl: String ) Constructs an invitation using raw values.","title":"InvitationBundle"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/-invitation-bundle/-invitation-bundle/#parameters","text":"Android inviterId inviter's ID, it has to contain a non-null value to be valid inviterName inviter's name, it can contain a null value inviterExternalId inviter's external ID, it can contain a null value conferenceId ID of the conference, it has to contain a non-null value to be valid inviterAvatarUrl URL of the inviter's avatar, it can contain a null value [Android] open fun InvitationBundle (@ Nullable inviterId: String , @ Nullable inviterName: String , @ Nullable inviterExternalId: String , @ Nullable conferenceId: String , @ Nullable inviterAvatarUrl: String , @ Nullable conferenceAlias: String ) Constructs an invitation using raw values.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/-invitation-bundle/-invitation-bundle/#parameters_1","text":"Android inviterId inviter's ID, it has to contain a non-null value to be valid inviterName inviter's name, it can contain a null value inviterExternalId inviter's external ID, it can contain a null value conferenceId ID of the conference, it has to contain a non-null value to be valid inviterAvatarUrl URL of the inviter's avatar, it can contain a null value conferenceAlias Optional alias of the conference [Android] open fun InvitationBundle (@ NonNull bundle: Bundle ) Constructs an invitation using a native Bundle. Refer to the Constants for the available keys.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/-invitation-bundle/-invitation-bundle/#parameters_2","text":"Android bundle Bundle, any null Bundle will trigger an exception [Android] open fun InvitationBundle (@ NonNull remoteMessage: Map < String , String >) Construct an invitation from a Map. Refer to the Constants for the available keys.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/-invitation-bundle/-invitation-bundle/#parameters_3","text":"Android remoteMessage The remote message. must be non-null, Any null Map will trigger an exception","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/-invitation-bundle/as-bundle/","text":"// sdk / com.voxeet.sdk.push.center.invitation / InvitationBundle / asBundle asBundle \u00b6 [Android] @ NonNull open fun asBundle (): Bundle Transforms this current invitation into a native Bundle. If the invitation is valid, the Bundle is considered as valid. Return \u00b6 The Bundle. Valid if the invitation is valid.","title":"As bundle"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/-invitation-bundle/as-bundle/#asbundle","text":"[Android] @ NonNull open fun asBundle (): Bundle Transforms this current invitation into a native Bundle. If the invitation is valid, the Bundle is considered as valid.","title":"asBundle"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/-invitation-bundle/as-bundle/#return","text":"The Bundle. Valid if the invitation is valid.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/-invitation-bundle/as-map/","text":"// sdk / com.voxeet.sdk.push.center.invitation / InvitationBundle / asMap asMap \u00b6 [Android] @ NonNull open fun asMap (): Map < String , String > Transforms the current invitation into a Map. If the invitation is valid, the Map is considered as valid. Return \u00b6 The Map. Valid if the invitation is valid.","title":"As map"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/-invitation-bundle/as-map/#asmap","text":"[Android] @ NonNull open fun asMap (): Map < String , String > Transforms the current invitation into a Map. If the invitation is valid, the Map is considered as valid.","title":"asMap"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/-invitation-bundle/as-map/#return","text":"The Map. Valid if the invitation is valid.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/-invitation-bundle/conference-alias/","text":"// sdk / com.voxeet.sdk.push.center.invitation / InvitationBundle / conferenceAlias conferenceAlias \u00b6 [Android] @ Nullable open var conferenceAlias : String The optional conference Alias.","title":"Conference alias"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/-invitation-bundle/conference-alias/#conferencealias","text":"[Android] @ Nullable open var conferenceAlias : String The optional conference Alias.","title":"conferenceAlias"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/-invitation-bundle/conference-id/","text":"// sdk / com.voxeet.sdk.push.center.invitation / InvitationBundle / conferenceId conferenceId \u00b6 [Android] @ Nullable open var conferenceId : String The conference ID. A valid invitation must contain a non-null value.","title":"Conference id"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/-invitation-bundle/conference-id/#conferenceid","text":"[Android] @ Nullable open var conferenceId : String The conference ID. A valid invitation must contain a non-null value.","title":"conferenceId"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/-invitation-bundle/inviter/","text":"// sdk / com.voxeet.sdk.push.center.invitation / InvitationBundle / inviter inviter \u00b6 [Android] @ NonNull open var inviter : ParticipantNotification The inviter. A valid invitation must contain non null values.","title":"Inviter"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.invitation/-invitation-bundle/inviter/#inviter","text":"[Android] @ NonNull open var inviter : ParticipantNotification The inviter. A valid invitation must contain non null values.","title":"inviter"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/","text":"// sdk / com.voxeet.sdk.push.center.management Package-level declarations \u00b6 Types \u00b6 Name Summary EnforcedNotificationMode [Android] enum EnforcedNotificationMode The EnforcedNotificationMode model establishes enforced modifications. NotificationMode [Android] enum NotificationMode The NotificationMode model represents the following notification modes: none, fullscreen, and notification. VersionFilter [Android] open class VersionFilter The VersionFilter model represents a blacklist system management represented by the VersionFilter constructor.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/#types","text":"Name Summary EnforcedNotificationMode [Android] enum EnforcedNotificationMode The EnforcedNotificationMode model establishes enforced modifications. NotificationMode [Android] enum NotificationMode The NotificationMode model represents the following notification modes: none, fullscreen, and notification. VersionFilter [Android] open class VersionFilter The VersionFilter model represents a blacklist system management represented by the VersionFilter constructor.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-enforced-notification-mode/","text":"// sdk / com.voxeet.sdk.push.center.management / EnforcedNotificationMode EnforcedNotificationMode \u00b6 [Android] enum EnforcedNotificationMode The EnforcedNotificationMode model establishes enforced modifications. The following options are available: Incoming calls are always visible as full-screen pop-ups Incoming calls are always visible as simple notifications Incoming calls are visible as full-screen pop-ups but in case of the first failure, there is a fallback to the simple notifications Use the NotificationCenter.instance.setEnforcedNotificationMode(EnforcedNotificationMode.TheModeToUse) . Functions \u00b6 Name Summary valueOf [Android] open fun valueOf (name: String ): EnforcedNotificationMode Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < EnforcedNotificationMode > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-enforced-notification-mode/#enforcednotificationmode","text":"[Android] enum EnforcedNotificationMode The EnforcedNotificationMode model establishes enforced modifications. The following options are available: Incoming calls are always visible as full-screen pop-ups Incoming calls are always visible as simple notifications Incoming calls are visible as full-screen pop-ups but in case of the first failure, there is a fallback to the simple notifications Use the NotificationCenter.instance.setEnforcedNotificationMode(EnforcedNotificationMode.TheModeToUse) .","title":"EnforcedNotificationMode"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-enforced-notification-mode/#functions","text":"Name Summary valueOf [Android] open fun valueOf (name: String ): EnforcedNotificationMode Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < EnforcedNotificationMode > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-enforced-notification-mode/value-of/","text":"// sdk / com.voxeet.sdk.push.center.management / EnforcedNotificationMode / valueOf valueOf \u00b6 [Android] open fun valueOf (name: String ): EnforcedNotificationMode Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) Return \u00b6 the enum constant with the specified name Throws \u00b6 IllegalArgumentException if this enum type has no constant with the specified name","title":"Value of"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-enforced-notification-mode/value-of/#valueof","text":"[Android] open fun valueOf (name: String ): EnforcedNotificationMode Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)","title":"valueOf"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-enforced-notification-mode/value-of/#return","text":"the enum constant with the specified name","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-enforced-notification-mode/value-of/#throws","text":"IllegalArgumentException if this enum type has no constant with the specified name","title":"Throws"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-enforced-notification-mode/values/","text":"// sdk / com.voxeet.sdk.push.center.management / EnforcedNotificationMode / values values \u00b6 [Android] open fun values (): Array < EnforcedNotificationMode > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants. Return \u00b6 an array containing the constants of this enum type, in the order they're declared","title":"Values"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-enforced-notification-mode/values/#values","text":"[Android] open fun values (): Array < EnforcedNotificationMode > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants.","title":"values"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-enforced-notification-mode/values/#return","text":"an array containing the constants of this enum type, in the order they're declared","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-notification-mode/","text":"// sdk / com.voxeet.sdk.push.center.management / NotificationMode NotificationMode \u00b6 [Android] enum NotificationMode The NotificationMode model represents the following notification modes: none, fullscreen, and notification. Functions \u00b6 Name Summary valueOf [Android] open fun valueOf (name: String ): NotificationMode Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < NotificationMode > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-notification-mode/#notificationmode","text":"[Android] enum NotificationMode The NotificationMode model represents the following notification modes: none, fullscreen, and notification.","title":"NotificationMode"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-notification-mode/#functions","text":"Name Summary valueOf [Android] open fun valueOf (name: String ): NotificationMode Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < NotificationMode > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-notification-mode/value-of/","text":"// sdk / com.voxeet.sdk.push.center.management / NotificationMode / valueOf valueOf \u00b6 [Android] open fun valueOf (name: String ): NotificationMode Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) Return \u00b6 the enum constant with the specified name Throws \u00b6 IllegalArgumentException if this enum type has no constant with the specified name","title":"Value of"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-notification-mode/value-of/#valueof","text":"[Android] open fun valueOf (name: String ): NotificationMode Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)","title":"valueOf"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-notification-mode/value-of/#return","text":"the enum constant with the specified name","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-notification-mode/value-of/#throws","text":"IllegalArgumentException if this enum type has no constant with the specified name","title":"Throws"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-notification-mode/values/","text":"// sdk / com.voxeet.sdk.push.center.management / NotificationMode / values values \u00b6 [Android] open fun values (): Array < NotificationMode > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants. Return \u00b6 an array containing the constants of this enum type, in the order they're declared","title":"Values"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-notification-mode/values/#values","text":"[Android] open fun values (): Array < NotificationMode > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants.","title":"values"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-notification-mode/values/#return","text":"an array containing the constants of this enum type, in the order they're declared","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-version-filter/","text":"// sdk / com.voxeet.sdk.push.center.management / VersionFilter VersionFilter \u00b6 [Android] open class VersionFilter The VersionFilter model represents a blacklist system management represented by the VersionFilter constructor. It is based on: The manufacturer's ID The minimum Android API version The mustFilter method informs whether the filter is applied. Constructors \u00b6 VersionFilter [Android] open fun VersionFilter (@ Nullable manufacturer: String , minimumAPIVersion: Int ) Constructs the filter. Functions \u00b6 Name Summary mustFilter [Android] open fun mustFilter (@ NonNull manufacturer: String , systemAPIVersion: Int ): Boolean Checks if a specific filter is applied. Properties \u00b6 Name Summary manufacturer [Android] @ Nullable open var manufacturer : String The manufacturer's identifier. minimumAPIVersion [Android] open var minimumAPIVersion : Int The earliest Android API version that should be impacted by the blacklist filers.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-version-filter/#versionfilter","text":"[Android] open class VersionFilter The VersionFilter model represents a blacklist system management represented by the VersionFilter constructor. It is based on: The manufacturer's ID The minimum Android API version The mustFilter method informs whether the filter is applied.","title":"VersionFilter"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-version-filter/#constructors","text":"VersionFilter [Android] open fun VersionFilter (@ Nullable manufacturer: String , minimumAPIVersion: Int ) Constructs the filter.","title":"Constructors"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-version-filter/#functions","text":"Name Summary mustFilter [Android] open fun mustFilter (@ NonNull manufacturer: String , systemAPIVersion: Int ): Boolean Checks if a specific filter is applied.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-version-filter/#properties","text":"Name Summary manufacturer [Android] @ Nullable open var manufacturer : String The manufacturer's identifier. minimumAPIVersion [Android] open var minimumAPIVersion : Int The earliest Android API version that should be impacted by the blacklist filers.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-version-filter/-version-filter/","text":"// sdk / com.voxeet.sdk.push.center.management / VersionFilter / VersionFilter VersionFilter \u00b6 [Android] open fun VersionFilter (@ Nullable manufacturer: String , minimumAPIVersion: Int ) Constructs the filter. Parameters \u00b6 Android manufacturer The manufacturer or a null value. minimumAPIVersion The minimum API version.","title":" version filter"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-version-filter/-version-filter/#versionfilter","text":"[Android] open fun VersionFilter (@ Nullable manufacturer: String , minimumAPIVersion: Int ) Constructs the filter.","title":"VersionFilter"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-version-filter/-version-filter/#parameters","text":"Android manufacturer The manufacturer or a null value. minimumAPIVersion The minimum API version.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-version-filter/manufacturer/","text":"// sdk / com.voxeet.sdk.push.center.management / VersionFilter / manufacturer manufacturer \u00b6 [Android] @ Nullable open var manufacturer : String The manufacturer's identifier. The null value indicates all manufacturers.","title":"Manufacturer"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-version-filter/manufacturer/#manufacturer","text":"[Android] @ Nullable open var manufacturer : String The manufacturer's identifier. The null value indicates all manufacturers.","title":"manufacturer"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-version-filter/minimum-a-p-i-version/","text":"// sdk / com.voxeet.sdk.push.center.management / VersionFilter / minimumAPIVersion minimumAPIVersion \u00b6 [Android] open var minimumAPIVersion : Int The earliest Android API version that should be impacted by the blacklist filers. By default, the filters set a black screen for full-screen notifications on Android 10.","title":"Minimum a p i version"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-version-filter/minimum-a-p-i-version/#minimumapiversion","text":"[Android] open var minimumAPIVersion : Int The earliest Android API version that should be impacted by the blacklist filers. By default, the filters set a black screen for full-screen notifications on Android 10.","title":"minimumAPIVersion"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-version-filter/must-filter/","text":"// sdk / com.voxeet.sdk.push.center.management / VersionFilter / mustFilter mustFilter \u00b6 [Android] open fun mustFilter (@ NonNull manufacturer: String , systemAPIVersion: Int ): Boolean Checks if a specific filter is applied. Return \u00b6 Returns true if the filter is applied. Parameters \u00b6 Android manufacturer The manufacturer of the currently used device. systemAPIVersion The version of the currently used operating system.","title":"Must filter"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-version-filter/must-filter/#mustfilter","text":"[Android] open fun mustFilter (@ NonNull manufacturer: String , systemAPIVersion: Int ): Boolean Checks if a specific filter is applied.","title":"mustFilter"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-version-filter/must-filter/#return","text":"Returns true if the filter is applied.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.management/-version-filter/must-filter/#parameters","text":"Android manufacturer The manufacturer of the currently used device. systemAPIVersion The version of the currently used operating system.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.event/","text":"// sdk / com.voxeet.sdk.push.center.subscription.event Package-level declarations \u00b6 Types \u00b6 Name Summary ActiveParticipantsEvent [Android] open class ActiveParticipantsEvent : BaseNotificationEvent Emitted when a list of active participants changes. ConferenceCreatedNotificationEvent [Android] open class ConferenceCreatedNotificationEvent : BaseNotificationEvent Emitted when the subscribed conference has been created. ConferenceEndedNotificationEvent [Android] open class ConferenceEndedNotificationEvent : BaseNotificationEvent Emitted when a subscribed conference has ended. InvitationReceivedNotificationEvent [Android] open class InvitationReceivedNotificationEvent : BaseNotificationEvent Emitted when the invitation has been received. ParticipantJoinedNotificationEvent [Android] open class ParticipantJoinedNotificationEvent : BaseNotificationEvent Emitted when a participant has joined a specific conference. ParticipantLeftNotificationEvent [Android] open class ParticipantLeftNotificationEvent : BaseNotificationEvent Emitted when a participant has left a specific conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.event/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.event/#types","text":"Name Summary ActiveParticipantsEvent [Android] open class ActiveParticipantsEvent : BaseNotificationEvent Emitted when a list of active participants changes. ConferenceCreatedNotificationEvent [Android] open class ConferenceCreatedNotificationEvent : BaseNotificationEvent Emitted when the subscribed conference has been created. ConferenceEndedNotificationEvent [Android] open class ConferenceEndedNotificationEvent : BaseNotificationEvent Emitted when a subscribed conference has ended. InvitationReceivedNotificationEvent [Android] open class InvitationReceivedNotificationEvent : BaseNotificationEvent Emitted when the invitation has been received. ParticipantJoinedNotificationEvent [Android] open class ParticipantJoinedNotificationEvent : BaseNotificationEvent Emitted when a participant has joined a specific conference. ParticipantLeftNotificationEvent [Android] open class ParticipantLeftNotificationEvent : BaseNotificationEvent Emitted when a participant has left a specific conference.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.event/-active-participants-event/","text":"// sdk / com.voxeet.sdk.push.center.subscription.event / ActiveParticipantsEvent ActiveParticipantsEvent \u00b6 [Android] open class ActiveParticipantsEvent : BaseNotificationEvent Emitted when a list of active participants changes. The event informs how many participants are present at a conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.event/-active-participants-event/#activeparticipantsevent","text":"[Android] open class ActiveParticipantsEvent : BaseNotificationEvent Emitted when a list of active participants changes. The event informs how many participants are present at a conference.","title":"ActiveParticipantsEvent"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.event/-conference-created-notification-event/","text":"// sdk / com.voxeet.sdk.push.center.subscription.event / ConferenceCreatedNotificationEvent ConferenceCreatedNotificationEvent \u00b6 [Android] open class ConferenceCreatedNotificationEvent : BaseNotificationEvent Emitted when the subscribed conference has been created.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.event/-conference-created-notification-event/#conferencecreatednotificationevent","text":"[Android] open class ConferenceCreatedNotificationEvent : BaseNotificationEvent Emitted when the subscribed conference has been created.","title":"ConferenceCreatedNotificationEvent"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.event/-conference-ended-notification-event/","text":"// sdk / com.voxeet.sdk.push.center.subscription.event / ConferenceEndedNotificationEvent ConferenceEndedNotificationEvent \u00b6 [Android] open class ConferenceEndedNotificationEvent : BaseNotificationEvent Emitted when a subscribed conference has ended. Properties \u00b6 Name Summary conferenceAlias [Android] @ NonNull val conferenceAlias : String The conference alias","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.event/-conference-ended-notification-event/#conferenceendednotificationevent","text":"[Android] open class ConferenceEndedNotificationEvent : BaseNotificationEvent Emitted when a subscribed conference has ended.","title":"ConferenceEndedNotificationEvent"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.event/-conference-ended-notification-event/#properties","text":"Name Summary conferenceAlias [Android] @ NonNull val conferenceAlias : String The conference alias","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.event/-conference-ended-notification-event/conference-alias/","text":"// sdk / com.voxeet.sdk.push.center.subscription.event / ConferenceEndedNotificationEvent / conferenceAlias conferenceAlias \u00b6 [Android] @ NonNull val conferenceAlias : String The conference alias","title":"Conference alias"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.event/-conference-ended-notification-event/conference-alias/#conferencealias","text":"[Android] @ NonNull val conferenceAlias : String The conference alias","title":"conferenceAlias"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.event/-invitation-received-notification-event/","text":"// sdk / com.voxeet.sdk.push.center.subscription.event / InvitationReceivedNotificationEvent InvitationReceivedNotificationEvent \u00b6 [Android] open class InvitationReceivedNotificationEvent : BaseNotificationEvent Emitted when the invitation has been received. Properties \u00b6 Name Summary invitation [Android] @ NonNull open var invitation : InvitationBundle The invitation bundle","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.event/-invitation-received-notification-event/#invitationreceivednotificationevent","text":"[Android] open class InvitationReceivedNotificationEvent : BaseNotificationEvent Emitted when the invitation has been received.","title":"InvitationReceivedNotificationEvent"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.event/-invitation-received-notification-event/#properties","text":"Name Summary invitation [Android] @ NonNull open var invitation : InvitationBundle The invitation bundle","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.event/-invitation-received-notification-event/invitation/","text":"// sdk / com.voxeet.sdk.push.center.subscription.event / InvitationReceivedNotificationEvent / invitation invitation \u00b6 [Android] @ NonNull open var invitation : InvitationBundle The invitation bundle","title":"Invitation"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.event/-invitation-received-notification-event/invitation/#invitation","text":"[Android] @ NonNull open var invitation : InvitationBundle The invitation bundle","title":"invitation"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.event/-participant-joined-notification-event/","text":"// sdk / com.voxeet.sdk.push.center.subscription.event / ParticipantJoinedNotificationEvent ParticipantJoinedNotificationEvent \u00b6 [Android] open class ParticipantJoinedNotificationEvent : BaseNotificationEvent Emitted when a participant has joined a specific conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.event/-participant-joined-notification-event/#participantjoinednotificationevent","text":"[Android] open class ParticipantJoinedNotificationEvent : BaseNotificationEvent Emitted when a participant has joined a specific conference.","title":"ParticipantJoinedNotificationEvent"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.event/-participant-left-notification-event/","text":"// sdk / com.voxeet.sdk.push.center.subscription.event / ParticipantLeftNotificationEvent ParticipantLeftNotificationEvent \u00b6 [Android] open class ParticipantLeftNotificationEvent : BaseNotificationEvent Emitted when a participant has left a specific conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.event/-participant-left-notification-event/#participantleftnotificationevent","text":"[Android] open class ParticipantLeftNotificationEvent : BaseNotificationEvent Emitted when a participant has left a specific conference.","title":"ParticipantLeftNotificationEvent"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/","text":"// sdk / com.voxeet.sdk.push.center.subscription.register Package-level declarations \u00b6 Types \u00b6 Name Summary BaseSubscription [Android] open class BaseSubscription The BaseSubscription model gathers all models responsible for notifying about created and ended conferences, received invitations, participants joining and leaving conferences: - SubscribeConferenceCreated - SubscribeConferenceEnded - SubscribeInvitation - SubscribeParticipantJoined - SubscribeParticipantLeft - SubscribeActiveParticipants SubscribeActiveParticipants [Android] open class SubscribeActiveParticipants : BaseSubscriptionWithAlias The SubscribeActiveParticipants model notifies about changes in a list of conference participants. SubscribeConferenceCreated [Android] open class SubscribeConferenceCreated : BaseSubscriptionWithAlias The SubscribeConferenceCreated model sends a notification informing about created conferences. SubscribeConferenceEnded [Android] open class SubscribeConferenceEnded : BaseSubscriptionWithAlias The SubscribeConferenceEnded model sends a notification informing about ended conferences. SubscribeInvitation [Android] open class SubscribeInvitation : BaseSubscription The SubscribeInvitation model sends a notification informing about received conference invitations. SubscribeParticipantJoined [Android] open class SubscribeParticipantJoined : BaseSubscriptionWithAlias The SubscribeParticipantJoined model sends a notification informing which participant has joined a specific conference. SubscribeParticipantLeft [Android] open class SubscribeParticipantLeft : BaseSubscriptionWithAlias The SubscribeParticipantLeft model sends a notification informing which participants has left a specific conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/#types","text":"Name Summary BaseSubscription [Android] open class BaseSubscription The BaseSubscription model gathers all models responsible for notifying about created and ended conferences, received invitations, participants joining and leaving conferences: - SubscribeConferenceCreated - SubscribeConferenceEnded - SubscribeInvitation - SubscribeParticipantJoined - SubscribeParticipantLeft - SubscribeActiveParticipants SubscribeActiveParticipants [Android] open class SubscribeActiveParticipants : BaseSubscriptionWithAlias The SubscribeActiveParticipants model notifies about changes in a list of conference participants. SubscribeConferenceCreated [Android] open class SubscribeConferenceCreated : BaseSubscriptionWithAlias The SubscribeConferenceCreated model sends a notification informing about created conferences. SubscribeConferenceEnded [Android] open class SubscribeConferenceEnded : BaseSubscriptionWithAlias The SubscribeConferenceEnded model sends a notification informing about ended conferences. SubscribeInvitation [Android] open class SubscribeInvitation : BaseSubscription The SubscribeInvitation model sends a notification informing about received conference invitations. SubscribeParticipantJoined [Android] open class SubscribeParticipantJoined : BaseSubscriptionWithAlias The SubscribeParticipantJoined model sends a notification informing which participant has joined a specific conference. SubscribeParticipantLeft [Android] open class SubscribeParticipantLeft : BaseSubscriptionWithAlias The SubscribeParticipantLeft model sends a notification informing which participants has left a specific conference.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-base-subscription/","text":"// sdk / com.voxeet.sdk.push.center.subscription.register / BaseSubscription BaseSubscription \u00b6 [Android] open class BaseSubscription The BaseSubscription model gathers all models responsible for notifying about created and ended conferences, received invitations, participants joining and leaving conferences: SubscribeConferenceCreated SubscribeConferenceEnded SubscribeInvitation SubscribeParticipantJoined SubscribeParticipantLeft SubscribeActiveParticipants Inheritors \u00b6 Name SubscribeInvitation","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-base-subscription/#basesubscription","text":"[Android] open class BaseSubscription The BaseSubscription model gathers all models responsible for notifying about created and ended conferences, received invitations, participants joining and leaving conferences: SubscribeConferenceCreated SubscribeConferenceEnded SubscribeInvitation SubscribeParticipantJoined SubscribeParticipantLeft SubscribeActiveParticipants","title":"BaseSubscription"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-base-subscription/#inheritors","text":"Name SubscribeInvitation","title":"Inheritors"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-active-participants/","text":"// sdk / com.voxeet.sdk.push.center.subscription.register / SubscribeActiveParticipants SubscribeActiveParticipants \u00b6 [Android] open class SubscribeActiveParticipants : BaseSubscriptionWithAlias The SubscribeActiveParticipants model notifies about changes in a list of conference participants. Constructors \u00b6 SubscribeActiveParticipants [Android] open fun SubscribeActiveParticipants (@ NonNull conferenceAlias: String ) Constructs a request with a specified conference alias.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-active-participants/#subscribeactiveparticipants","text":"[Android] open class SubscribeActiveParticipants : BaseSubscriptionWithAlias The SubscribeActiveParticipants model notifies about changes in a list of conference participants.","title":"SubscribeActiveParticipants"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-active-participants/#constructors","text":"SubscribeActiveParticipants [Android] open fun SubscribeActiveParticipants (@ NonNull conferenceAlias: String ) Constructs a request with a specified conference alias.","title":"Constructors"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-active-participants/-subscribe-active-participants/","text":"// sdk / com.voxeet.sdk.push.center.subscription.register / SubscribeActiveParticipants / SubscribeActiveParticipants SubscribeActiveParticipants \u00b6 [Android] open fun SubscribeActiveParticipants (@ NonNull conferenceAlias: String ) Constructs a request with a specified conference alias. Parameters \u00b6 Android conferenceAlias The conference alias.","title":" subscribe active participants"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-active-participants/-subscribe-active-participants/#subscribeactiveparticipants","text":"[Android] open fun SubscribeActiveParticipants (@ NonNull conferenceAlias: String ) Constructs a request with a specified conference alias.","title":"SubscribeActiveParticipants"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-active-participants/-subscribe-active-participants/#parameters","text":"Android conferenceAlias The conference alias.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-conference-created/","text":"// sdk / com.voxeet.sdk.push.center.subscription.register / SubscribeConferenceCreated SubscribeConferenceCreated \u00b6 [Android] open class SubscribeConferenceCreated : BaseSubscriptionWithAlias The SubscribeConferenceCreated model sends a notification informing about created conferences. Constructors \u00b6 SubscribeConferenceCreated [Android] open fun SubscribeConferenceCreated (@ NonNull conferenceAlias: String ) Constructs a request with a specified conference alias.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-conference-created/#subscribeconferencecreated","text":"[Android] open class SubscribeConferenceCreated : BaseSubscriptionWithAlias The SubscribeConferenceCreated model sends a notification informing about created conferences.","title":"SubscribeConferenceCreated"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-conference-created/#constructors","text":"SubscribeConferenceCreated [Android] open fun SubscribeConferenceCreated (@ NonNull conferenceAlias: String ) Constructs a request with a specified conference alias.","title":"Constructors"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-conference-created/-subscribe-conference-created/","text":"// sdk / com.voxeet.sdk.push.center.subscription.register / SubscribeConferenceCreated / SubscribeConferenceCreated SubscribeConferenceCreated \u00b6 [Android] open fun SubscribeConferenceCreated (@ NonNull conferenceAlias: String ) Constructs a request with a specified conference alias. Parameters \u00b6 Android conferenceAlias conference alias.","title":" subscribe conference created"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-conference-created/-subscribe-conference-created/#subscribeconferencecreated","text":"[Android] open fun SubscribeConferenceCreated (@ NonNull conferenceAlias: String ) Constructs a request with a specified conference alias.","title":"SubscribeConferenceCreated"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-conference-created/-subscribe-conference-created/#parameters","text":"Android conferenceAlias conference alias.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-conference-ended/","text":"// sdk / com.voxeet.sdk.push.center.subscription.register / SubscribeConferenceEnded SubscribeConferenceEnded \u00b6 [Android] open class SubscribeConferenceEnded : BaseSubscriptionWithAlias The SubscribeConferenceEnded model sends a notification informing about ended conferences. Constructors \u00b6 SubscribeConferenceEnded [Android] open fun SubscribeConferenceEnded (@ NonNull conferenceAlias: String ) Constructs a request with a specified conference alias.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-conference-ended/#subscribeconferenceended","text":"[Android] open class SubscribeConferenceEnded : BaseSubscriptionWithAlias The SubscribeConferenceEnded model sends a notification informing about ended conferences.","title":"SubscribeConferenceEnded"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-conference-ended/#constructors","text":"SubscribeConferenceEnded [Android] open fun SubscribeConferenceEnded (@ NonNull conferenceAlias: String ) Constructs a request with a specified conference alias.","title":"Constructors"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-conference-ended/-subscribe-conference-ended/","text":"// sdk / com.voxeet.sdk.push.center.subscription.register / SubscribeConferenceEnded / SubscribeConferenceEnded SubscribeConferenceEnded \u00b6 [Android] open fun SubscribeConferenceEnded (@ NonNull conferenceAlias: String ) Constructs a request with a specified conference alias. Parameters \u00b6 Android conferenceAlias conference alias.","title":" subscribe conference ended"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-conference-ended/-subscribe-conference-ended/#subscribeconferenceended","text":"[Android] open fun SubscribeConferenceEnded (@ NonNull conferenceAlias: String ) Constructs a request with a specified conference alias.","title":"SubscribeConferenceEnded"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-conference-ended/-subscribe-conference-ended/#parameters","text":"Android conferenceAlias conference alias.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-invitation/","text":"// sdk / com.voxeet.sdk.push.center.subscription.register / SubscribeInvitation SubscribeInvitation \u00b6 [Android] open class SubscribeInvitation : BaseSubscription The SubscribeInvitation model sends a notification informing about received conference invitations. Constructors \u00b6 SubscribeInvitation [Android] open fun SubscribeInvitation () Constructs a request.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-invitation/#subscribeinvitation","text":"[Android] open class SubscribeInvitation : BaseSubscription The SubscribeInvitation model sends a notification informing about received conference invitations.","title":"SubscribeInvitation"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-invitation/#constructors","text":"SubscribeInvitation [Android] open fun SubscribeInvitation () Constructs a request.","title":"Constructors"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-invitation/-subscribe-invitation/","text":"// sdk / com.voxeet.sdk.push.center.subscription.register / SubscribeInvitation / SubscribeInvitation SubscribeInvitation \u00b6 [Android] open fun SubscribeInvitation () Constructs a request.","title":" subscribe invitation"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-invitation/-subscribe-invitation/#subscribeinvitation","text":"[Android] open fun SubscribeInvitation () Constructs a request.","title":"SubscribeInvitation"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-participant-joined/","text":"// sdk / com.voxeet.sdk.push.center.subscription.register / SubscribeParticipantJoined SubscribeParticipantJoined \u00b6 [Android] open class SubscribeParticipantJoined : BaseSubscriptionWithAlias The SubscribeParticipantJoined model sends a notification informing which participant has joined a specific conference. Constructors \u00b6 SubscribeParticipantJoined [Android] open fun SubscribeParticipantJoined (@ NonNull conferenceAlias: String ) Construct a request with a specified conference alias.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-participant-joined/#subscribeparticipantjoined","text":"[Android] open class SubscribeParticipantJoined : BaseSubscriptionWithAlias The SubscribeParticipantJoined model sends a notification informing which participant has joined a specific conference.","title":"SubscribeParticipantJoined"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-participant-joined/#constructors","text":"SubscribeParticipantJoined [Android] open fun SubscribeParticipantJoined (@ NonNull conferenceAlias: String ) Construct a request with a specified conference alias.","title":"Constructors"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-participant-joined/-subscribe-participant-joined/","text":"// sdk / com.voxeet.sdk.push.center.subscription.register / SubscribeParticipantJoined / SubscribeParticipantJoined SubscribeParticipantJoined \u00b6 [Android] open fun SubscribeParticipantJoined (@ NonNull conferenceAlias: String ) Construct a request with a specified conference alias. Parameters \u00b6 Android conferenceAlias conference alias.","title":" subscribe participant joined"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-participant-joined/-subscribe-participant-joined/#subscribeparticipantjoined","text":"[Android] open fun SubscribeParticipantJoined (@ NonNull conferenceAlias: String ) Construct a request with a specified conference alias.","title":"SubscribeParticipantJoined"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-participant-joined/-subscribe-participant-joined/#parameters","text":"Android conferenceAlias conference alias.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-participant-left/","text":"// sdk / com.voxeet.sdk.push.center.subscription.register / SubscribeParticipantLeft SubscribeParticipantLeft \u00b6 [Android] open class SubscribeParticipantLeft : BaseSubscriptionWithAlias The SubscribeParticipantLeft model sends a notification informing which participants has left a specific conference. Constructors \u00b6 SubscribeParticipantLeft [Android] open fun SubscribeParticipantLeft (@ NonNull conferenceAlias: String ) Construct a request with a specified conference alias.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-participant-left/#subscribeparticipantleft","text":"[Android] open class SubscribeParticipantLeft : BaseSubscriptionWithAlias The SubscribeParticipantLeft model sends a notification informing which participants has left a specific conference.","title":"SubscribeParticipantLeft"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-participant-left/#constructors","text":"SubscribeParticipantLeft [Android] open fun SubscribeParticipantLeft (@ NonNull conferenceAlias: String ) Construct a request with a specified conference alias.","title":"Constructors"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-participant-left/-subscribe-participant-left/","text":"// sdk / com.voxeet.sdk.push.center.subscription.register / SubscribeParticipantLeft / SubscribeParticipantLeft SubscribeParticipantLeft \u00b6 [Android] open fun SubscribeParticipantLeft (@ NonNull conferenceAlias: String ) Construct a request with a specified conference alias. Parameters \u00b6 Android conferenceAlias conference alias.","title":" subscribe participant left"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-participant-left/-subscribe-participant-left/#subscribeparticipantleft","text":"[Android] open fun SubscribeParticipantLeft (@ NonNull conferenceAlias: String ) Construct a request with a specified conference alias.","title":"SubscribeParticipantLeft"},{"location":"android-reference/sdk/com.voxeet.sdk.push.center.subscription.register/-subscribe-participant-left/-subscribe-participant-left/#parameters","text":"Android conferenceAlias conference alias.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.push.utils/","text":"// sdk / com.voxeet.sdk.push.utils Package-level declarations \u00b6 Types \u00b6 Name Summary NotificationHelper [Android] open class NotificationHelper The NotificationHelper model is a simple firebase wrapper that initializes the application when it is awoken from the killed state.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.push.utils/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.push.utils/#types","text":"Name Summary NotificationHelper [Android] open class NotificationHelper The NotificationHelper model is a simple firebase wrapper that initializes the application when it is awoken from the killed state.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.push.utils/-notification-helper/","text":"// sdk / com.voxeet.sdk.push.utils / NotificationHelper NotificationHelper \u00b6 [Android] open class NotificationHelper The NotificationHelper model is a simple firebase wrapper that initializes the application when it is awoken from the killed state. It gets the firebase channel ID and creates notification channels. Functions \u00b6 Name Summary createNotificationChannel [Android] open fun createNotificationChannel (@ NonNull context: Context ): Boolean Helps to create the Voxeet default channel. [Android] open fun createNotificationChannel (@ NonNull context: Context , @ NonNull id: String , @ NonNull name: CharSequence , @ NonNull description: String , argb: Int ): Boolean Creates the notification channel because Firebase and Android require applications to have their own valid notification channels. getChannelId [Android] open fun getChannelId (@ NonNull context: Context ): String Gets the Firebase channel ID.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.push.utils/-notification-helper/#notificationhelper","text":"[Android] open class NotificationHelper The NotificationHelper model is a simple firebase wrapper that initializes the application when it is awoken from the killed state. It gets the firebase channel ID and creates notification channels.","title":"NotificationHelper"},{"location":"android-reference/sdk/com.voxeet.sdk.push.utils/-notification-helper/#functions","text":"Name Summary createNotificationChannel [Android] open fun createNotificationChannel (@ NonNull context: Context ): Boolean Helps to create the Voxeet default channel. [Android] open fun createNotificationChannel (@ NonNull context: Context , @ NonNull id: String , @ NonNull name: CharSequence , @ NonNull description: String , argb: Int ): Boolean Creates the notification channel because Firebase and Android require applications to have their own valid notification channels. getChannelId [Android] open fun getChannelId (@ NonNull context: Context ): String Gets the Firebase channel ID.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.push.utils/-notification-helper/create-notification-channel/","text":"// sdk / com.voxeet.sdk.push.utils / NotificationHelper / createNotificationChannel createNotificationChannel \u00b6 [Android] open fun createNotificationChannel (@ NonNull context: Context ): Boolean Helps to create the Voxeet default channel. It is used because Firebase and Android require applications to have their own valid notification channels. Return \u00b6 a flag indicating if the channel is set properly. A false value informs that this method was already called for the Android version where it's mandatory. Android versions prior to Android O always return a true value. Parameters \u00b6 Android context that will be manipulated to create the channel [Android] open fun createNotificationChannel (@ NonNull context: Context , @ NonNull id: String , @ NonNull name: CharSequence , @ NonNull description: String , argb: Int ): Boolean Creates the notification channel because Firebase and Android require applications to have their own valid notification channels. Return \u00b6 a flag indicating if the channel is set up properly. A false value informs that this method was already called for the Android version where it is mandatory. Android versions prior to Android O always return a true value. Parameters \u00b6 Android context that will be manipulated to create the channel id channel ID name displayed name of the channel (to be translated) description description of the channel (to be translated) argb color of the notifications in the 0xaarrggbb representation","title":"Create notification channel"},{"location":"android-reference/sdk/com.voxeet.sdk.push.utils/-notification-helper/create-notification-channel/#createnotificationchannel","text":"[Android] open fun createNotificationChannel (@ NonNull context: Context ): Boolean Helps to create the Voxeet default channel. It is used because Firebase and Android require applications to have their own valid notification channels.","title":"createNotificationChannel"},{"location":"android-reference/sdk/com.voxeet.sdk.push.utils/-notification-helper/create-notification-channel/#return","text":"a flag indicating if the channel is set properly. A false value informs that this method was already called for the Android version where it's mandatory. Android versions prior to Android O always return a true value.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.push.utils/-notification-helper/create-notification-channel/#parameters","text":"Android context that will be manipulated to create the channel [Android] open fun createNotificationChannel (@ NonNull context: Context , @ NonNull id: String , @ NonNull name: CharSequence , @ NonNull description: String , argb: Int ): Boolean Creates the notification channel because Firebase and Android require applications to have their own valid notification channels.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.push.utils/-notification-helper/create-notification-channel/#return_1","text":"a flag indicating if the channel is set up properly. A false value informs that this method was already called for the Android version where it is mandatory. Android versions prior to Android O always return a true value.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.push.utils/-notification-helper/create-notification-channel/#parameters_1","text":"Android context that will be manipulated to create the channel id channel ID name displayed name of the channel (to be translated) description description of the channel (to be translated) argb color of the notifications in the 0xaarrggbb representation","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.push.utils/-notification-helper/get-channel-id/","text":"// sdk / com.voxeet.sdk.push.utils / NotificationHelper / getChannelId getChannelId \u00b6 [Android] open fun getChannelId (@ NonNull context: Context ): String Gets the Firebase channel ID. Return \u00b6 The channel ID for Voxeet notifications. Parameters \u00b6 Android context application context","title":"Get channel id"},{"location":"android-reference/sdk/com.voxeet.sdk.push.utils/-notification-helper/get-channel-id/#getchannelid","text":"[Android] open fun getChannelId (@ NonNull context: Context ): String Gets the Firebase channel ID.","title":"getChannelId"},{"location":"android-reference/sdk/com.voxeet.sdk.push.utils/-notification-helper/get-channel-id/#return","text":"The channel ID for Voxeet notifications.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.push.utils/-notification-helper/get-channel-id/#parameters","text":"Android context application context","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/","text":"// sdk / com.voxeet.sdk.services Package-level declarations \u00b6 Types \u00b6 Name Summary AudioService [Android] open class AudioService : AbstractVoxeetService The AudioService allows changing audio settings for the local and remote participants. CommandService [Android] open class CommandService : AbstractVoxeetService The CommandService allows the application to send text messages to all other participants of a specific conference and to redistribute these messages across the EventBus. ConferenceService [Android] open class ConferenceService : AbstractVoxeetService The ConferenceService allows the application to manage the conference life cycle and interact with the conference. FilePresentationService [Android] open class FilePresentationService : AbstractPresentationService<CONSUME_EVENT_TYPE, API_CLASS> The FilePresentationService allows presenting files during a conference. LocalStatsService [Android] open class LocalStatsService : AbstractVoxeetService, Runnable Service responsible for statistics management from the WebRTC implementation. MediaDeviceService [Android] open class MediaDeviceService : AbstractVoxeetService The MediaDeviceService allows the application to manage the devices that are used during the conference. NotificationService [Android] open class NotificationService : AbstractVoxeetService The NotificationService allows an application to subscribe to and unsubscribe from notifications related to: - The number of participants who are present at a conference - Created conferences - Ended conferences - Received invitations - Participants joining conferences - Participants leaving conferences The ConferenceStatusNotificationEvent informs about the conference status. RecordingService [Android] open class RecordingService : AbstractVoxeetService The RecordingService allows an application to record conferences by using the start and stop methods that turn the recording on and off. ScreenShareService [Android] open class ScreenShareService : AbstractVoxeetService The ScreenShareService allows an application to share a screen during the conference. SensorsService [Android] open class SensorsService : AbstractVoxeetService The SensorService allows an application to get access to basic and default sensors and to manage them. SessionService [Android] open class SessionService : AbstractVoxeetService The SessionService allows an application to register participants' information in the Voxeet service. TelemetryService [Android] open class TelemetryService : AbstractVoxeetService Telemetry service used by the Voxeet SDK. VideoPresentationService [Android] open class VideoPresentationService : AbstractPresentationService<CONSUME_EVENT_TYPE, API_CLASS> The VideoPresentationService allows an application to share a hosted video file with conference participants and synchronously control the playback for all participants. VideoService [Android] open class VideoService : AbstractVoxeetService The VideoService allows enabling and disabling video for the local and remote participants.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.services/#types","text":"Name Summary AudioService [Android] open class AudioService : AbstractVoxeetService The AudioService allows changing audio settings for the local and remote participants. CommandService [Android] open class CommandService : AbstractVoxeetService The CommandService allows the application to send text messages to all other participants of a specific conference and to redistribute these messages across the EventBus. ConferenceService [Android] open class ConferenceService : AbstractVoxeetService The ConferenceService allows the application to manage the conference life cycle and interact with the conference. FilePresentationService [Android] open class FilePresentationService : AbstractPresentationService<CONSUME_EVENT_TYPE, API_CLASS> The FilePresentationService allows presenting files during a conference. LocalStatsService [Android] open class LocalStatsService : AbstractVoxeetService, Runnable Service responsible for statistics management from the WebRTC implementation. MediaDeviceService [Android] open class MediaDeviceService : AbstractVoxeetService The MediaDeviceService allows the application to manage the devices that are used during the conference. NotificationService [Android] open class NotificationService : AbstractVoxeetService The NotificationService allows an application to subscribe to and unsubscribe from notifications related to: - The number of participants who are present at a conference - Created conferences - Ended conferences - Received invitations - Participants joining conferences - Participants leaving conferences The ConferenceStatusNotificationEvent informs about the conference status. RecordingService [Android] open class RecordingService : AbstractVoxeetService The RecordingService allows an application to record conferences by using the start and stop methods that turn the recording on and off. ScreenShareService [Android] open class ScreenShareService : AbstractVoxeetService The ScreenShareService allows an application to share a screen during the conference. SensorsService [Android] open class SensorsService : AbstractVoxeetService The SensorService allows an application to get access to basic and default sensors and to manage them. SessionService [Android] open class SessionService : AbstractVoxeetService The SessionService allows an application to register participants' information in the Voxeet service. TelemetryService [Android] open class TelemetryService : AbstractVoxeetService Telemetry service used by the Voxeet SDK. VideoPresentationService [Android] open class VideoPresentationService : AbstractPresentationService<CONSUME_EVENT_TYPE, API_CLASS> The VideoPresentationService allows an application to share a hosted video file with conference participants and synchronously control the playback for all participants. VideoService [Android] open class VideoService : AbstractVoxeetService The VideoService allows enabling and disabling video for the local and remote participants.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-audio-service/","text":"// sdk / com.voxeet.sdk.services / AudioService AudioService \u00b6 [Android] open class AudioService : AbstractVoxeetService The AudioService allows changing audio settings for the local and remote participants. Functions \u00b6 Name Summary getSoundManager [Android] @ Nullable @DeprecatedSince(value = \"3.7\") open fun getSoundManager (): SoundManager Gets the SoundManager instance. Properties \u00b6 Name Summary local [Android] @ NonNull @get: NonNull val local : LocalAudio remote [Android] @ NonNull @get: NonNull val remote : RemoteAudio","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-audio-service/#audioservice","text":"[Android] open class AudioService : AbstractVoxeetService The AudioService allows changing audio settings for the local and remote participants.","title":"AudioService"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-audio-service/#functions","text":"Name Summary getSoundManager [Android] @ Nullable @DeprecatedSince(value = \"3.7\") open fun getSoundManager (): SoundManager Gets the SoundManager instance.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-audio-service/#properties","text":"Name Summary local [Android] @ NonNull @get: NonNull val local : LocalAudio remote [Android] @ NonNull @get: NonNull val remote : RemoteAudio","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-audio-service/get-sound-manager/","text":"// sdk / com.voxeet.sdk.services / AudioService / getSoundManager getSoundManager \u00b6 [Android] @ Nullable @DeprecatedSince(value = \"3.7\") open fun getSoundManager (): SoundManager Deprecated \u00b6 Gets the SoundManager instance.","title":"Get sound manager"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-audio-service/get-sound-manager/#getsoundmanager","text":"[Android] @ Nullable @DeprecatedSince(value = \"3.7\") open fun getSoundManager (): SoundManager","title":"getSoundManager"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-audio-service/get-sound-manager/#deprecated","text":"Gets the SoundManager instance.","title":"Deprecated"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-audio-service/local/","text":"// sdk / com.voxeet.sdk.services / AudioService / local local \u00b6 [Android] @ NonNull @get: NonNull val local : LocalAudio","title":"Local"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-audio-service/local/#local","text":"[Android] @ NonNull @get: NonNull val local : LocalAudio","title":"local"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-audio-service/remote/","text":"// sdk / com.voxeet.sdk.services / AudioService / remote remote \u00b6 [Android] @ NonNull @get: NonNull val remote : RemoteAudio","title":"Remote"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-audio-service/remote/#remote","text":"[Android] @ NonNull @get: NonNull val remote : RemoteAudio","title":"remote"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-command-service/","text":"// sdk / com.voxeet.sdk.services / CommandService CommandService \u00b6 [Android] open class CommandService : AbstractVoxeetService The CommandService allows the application to send text messages to all other participants of a specific conference and to redistribute these messages across the EventBus. It also emits the BroadcastEvent to inform that the message is broadcasted and the MessageReceived event to inform that the message is received at the specific conference. Functions \u00b6 Name Summary send [Android] @ NonNull open fun send (@ NonNull conferenceId: String , @ NonNull message: String ): Promise< Boolean > Sends the message to the conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-command-service/#commandservice","text":"[Android] open class CommandService : AbstractVoxeetService The CommandService allows the application to send text messages to all other participants of a specific conference and to redistribute these messages across the EventBus. It also emits the BroadcastEvent to inform that the message is broadcasted and the MessageReceived event to inform that the message is received at the specific conference.","title":"CommandService"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-command-service/#functions","text":"Name Summary send [Android] @ NonNull open fun send (@ NonNull conferenceId: String , @ NonNull message: String ): Promise< Boolean > Sends the message to the conference.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-command-service/send/","text":"// sdk / com.voxeet.sdk.services / CommandService / send send \u00b6 [Android] @ NonNull open fun send (@ NonNull conferenceId: String , @ NonNull message: String ): Promise< Boolean > Sends the message to the conference. The message must be in the form of a string or a representation of strings (json or base64). Message size is limited to 16KB. Return \u00b6 the promise to resolve. Parameters \u00b6 Android conferenceId ID of the conference to which the message will be send message content of the message (any possible string)","title":"Send"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-command-service/send/#send","text":"[Android] @ NonNull open fun send (@ NonNull conferenceId: String , @ NonNull message: String ): Promise< Boolean > Sends the message to the conference. The message must be in the form of a string or a representation of strings (json or base64). Message size is limited to 16KB.","title":"send"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-command-service/send/#return","text":"the promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-command-service/send/#parameters","text":"Android conferenceId ID of the conference to which the message will be send message content of the message (any possible string)","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/","text":"// sdk / com.voxeet.sdk.services / ConferenceService ConferenceService \u00b6 [Android] open class ConferenceService : AbstractVoxeetService The ConferenceService allows the application to manage the conference life cycle and interact with the conference. Typical application APIs workflow: The application creates a conference The application uses the fetchConference method to obtain the conference object. The application can choose to either: Join a conference Replay a conference Listen to a conference Broadcast a conference The application can request a specific quality of Simulcast video streams through the Simulcast method. The application can start and stop sending the local participant's audio streams to the conference. The application can start and stop sending the local participant's video streams to the conference. The application can also startVideo and stop sending the remote participants' video streams to the local participant. During a conference, the application can: Customize the number of the received video streams, select the video forwarding strategy, and prioritize the selected participants' video streams. Mute the local or remote participant Check if the local participant is muted Control playing remote participants' audio to the local participant. Inform whether the application plays the remote participants' audio to the local participant. Check which participant is speaking Check the audio level of a specific participant Decrease network bandwidth consumption by disabling participants' video streams Get information about the conference, such as the conference type , Conference object , conference status Get information about conference participants, such as the participant instance , information if a participant is present at a conference , a list of invited participants , a list of all conference participants , and information if at least one participant is present at a conference . Cancel timeout Check the standard WebRTC statistics for the application Control the audio processing state through the setAudioProcessing method. Check the audio processing state through the getAudioProcessing method. Kick a participant from a conference. Update the participant's permissions. Set a participant's position to enable the spatial audio experience during a Dolby Voice conference Configure a spatial environment of the application for the spatial audio feature Set the direction a participant is facing during a conference with enabled spatial audio The application calls the leave method to leave a conference. The application can interact with the service through these events: The ConferenceHistoryResult event provides historical conference details. The ConferenceTimeoutNoParticipantsJoinedEvent informs that during the maximum awaiting time nobody has joined the current participant at a conference. The IncomingCallEvent informs about incoming calls. The VideoStateEvent informs about the state of the local video. The ParticipantAddedEvent and the ParticipantUpdatedEvent notify about participants status changes. The QualityIndicators event informs about the audio quality. The ConferenceStatusUpdatedEvent informs about conference status changes. The StreamAddedEvent , StreamUpdatedEvent , and the StreamRemovedEvent notify about changes in stream statuses. Warning: Always implement the error for each called promise. You can also use the execute method, but in case of exceptions, you will trigger errors. Functions \u00b6 Name Summary audioLevel [Android] open fun audioLevel (@ Nullable participant: Participant ): Double Gets the participant's audio level. broadcast [Android] @ NonNull open fun broadcast (@ NonNull conference: Conference ): Promise< Conference > Joins the conference in the broadcaster mode which allows transmitting audio and video. create [Android] @ NonNull open fun create (@ NonNull conferenceCreateOptions: ConferenceCreateOptions ): Promise< Conference > Creates the conference based on information from the ConferenceCreateOptions . fetchConference [Android] @ NonNull open fun fetchConference (@ NonNull conferenceId: String ): Promise< Conference > Provides a Conference object that allows joining a conference. findParticipantById [Android] @ Nullable open fun findParticipantById (@ NonNull participantId: String ): Participant Provides the instance of the desired participant. getAudioProcessing [Android] @ NonNull @DeprecatedSince(value = \"3.7\") open fun getAudioProcessing (): AudioProcessing Note : This method is deprecated in SDK 3. getConference [Android] @ Nullable open fun getConference (): Conference Gets the current Conference object. getConferenceStatus [Android] @ NonNull open fun getConferenceStatus (conferenceId: String ): Promise< ConferenceStatusResult > Gets the conference status. getConferenceType [Android] @ NonNull open fun getConferenceType (): LocalConferenceType Gets the current conference type. getInvitedParticipants [Android] @ NonNull open fun getInvitedParticipants (@ NonNull conferenceId: String ): Promise< ConferenceParticipantsInvitedResult > Retrieves the list of participants invited to the conference. getMaxVideoForwarding [Android] @ Nullable open fun getMaxVideoForwarding (): Integer Gets the maximum number of video streams that may be transmitted to the local participant. getParticipants [Android] @ NonNull open fun getParticipants (): List < Participant > Retrieves a list of conference participants. getVideoForwardingStrategy [Android] @ Nullable open fun getVideoForwardingStrategy (): VideoForwardingStrategy Gets the video forwarding strategy that the local participant uses in the current conference. hasParticipants [Android] open fun hasParticipants (): Boolean Informs that at least one participant is actively connected. isInConference [Android] open fun isInConference (): Boolean Informs if the specific conference exists. isMuted [Android] open fun isMuted (): Boolean Informs whether the local participant is muted. isOutputMuted [Android] open fun isOutputMuted (): Boolean Informs whether the application plays the remote participants' audio to the local participant. isSpeaking [Android] open fun isSpeaking (@ NonNull participant: Participant ): Boolean Indicates whether the current participant is speaking. join [Android] @ NonNull open fun join (@ NonNull options: ConferenceJoinOptions ): Promise< Conference > Joins the conference with the conference. kick [Android] @ NonNull open fun kick (@ NonNull participant: Participant ): Promise< Boolean > Allows the conference owner, or a participant with adequate permissions, to kick another participant from the conference by revoking the conference access token. leave [Android] @ NonNull open fun leave (): Promise< Boolean > Leaves the current conference. listen [Android] @ NonNull open fun listen (@ NonNull conference: Conference ): Promise< Conference > @ NonNull open fun listen (@ NonNull options: ConferenceListenOptions ): Promise< Conference > Joins the conference in the listener mode in which the conference participant can only receive video and audio and cannot transmit any media. localStats [Android] @ NonNull open fun localStats (): Map < String , JSONArray > Provides standard WebRTC statistics for the application to implement its own quality monitoring mechanisms. mute [Android] open fun mute (mute: Boolean ): Boolean Stops playing the local participant's audio to the conference. [Android] open fun mute (@ NonNull participant: Participant , mute: Boolean ): Boolean Stops playing the specified remote participants' audio to the local participant. muteOutput [Android] open fun muteOutput (mute: Boolean ): Boolean Controls playing remote participants' audio to the local participant. replay [Android] @ NonNull open fun replay (@ NonNull conference: Conference , offset: Long ): Promise< Conference > Replays the previously recorded conference. setAudioProcessing [Android] @DeprecatedSince(value = \"3.7\") open fun setAudioProcessing (@ NonNull audioProcessing: AudioProcessing ): Boolean Note : This method is deprecated in SDK 3. setSpatialDirection [Android] open fun setSpatialDirection (@ NonNull direction: SpatialDirection ) Sets the direction the local participant is facing in space. setSpatialEnvironment [Android] open fun setSpatialEnvironment (@ NonNull scale: SpatialScale , @ NonNull forward: SpatialPosition , @ NonNull up: SpatialPosition , @ NonNull right: SpatialPosition ) Configures a spatial environment of an application, so the audio renderer understands which directions the application considers forward, up, and right and which units it uses for distance. setSpatialPosition [Android] open fun setSpatialPosition (@ NonNull position: SpatialPosition ) Sets a location from which the local participant listens to a Dolby Voice conference with enabled spatial audio. [Android] open fun setSpatialPosition (@ NonNull participant: Participant , @ NonNull position: SpatialPosition ) Sets a remote participant's position in space in a Dolby Voice conference to render the participant's audio from the specified location. simulcast [Android] @ NonNull open fun simulcast (@ NonNull requested: List < ParticipantQuality >): Promise< Boolean > Requests a specific quality of the received Simulcast video streams. startAudio [Android] @DeprecatedSince(value = \"3.7\") @ NonNull open fun startAudio (): Promise< Boolean > @DeprecatedSince(value = \"3.7\") @ NonNull open fun startAudio (@ NonNull participant: Participant ): Promise< Boolean > Note : This method is deprecated in SDK 3. startVideo [Android] @DeprecatedSince(value = \"3.7\") @ NonNull open fun startVideo (): Promise< Boolean > @DeprecatedSince(value = \"3.7\") @ NonNull open fun startVideo (@ NonNull participant: Participant ): Promise< Boolean > Note : This method is deprecated in SDK 3. stopAudio [Android] @DeprecatedSince(value = \"3.7\") @ NonNull open fun stopAudio (): Promise< Boolean > @DeprecatedSince(value = \"3.7\") @ NonNull open fun stopAudio (@ NonNull participant: Participant ): Promise< Boolean > Note : This method is deprecated in SDK 3. stopVideo [Android] @DeprecatedSince(value = \"3.7\") @ NonNull open fun stopVideo (): Promise< Boolean > @DeprecatedSince(value = \"3.7\") @ NonNull open fun stopVideo (@ NonNull participant: Participant ): Promise< Boolean > Note : This method is deprecated in SDK 3. updatePermissions [Android] @ NonNull open fun updatePermissions (@ NonNull participantPermissions: List < ParticipantPermissions >): Promise< Boolean > Updates the participant's conference permissions. videoForwarding [Android] @ NonNull open fun videoForwarding (@ NonNull options: VideoForwardingOptions ): Promise< Boolean > Sets the video forwarding functionality for the local participant. [Android] @ NonNull @DeprecatedSince(value = \"3.6\") open fun videoForwarding (max: Int , @ Nullable participants: List < Participant >): Promise< Boolean > Sets the maximum number of video streams that may be transmitted to the local participant.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/#conferenceservice","text":"[Android] open class ConferenceService : AbstractVoxeetService The ConferenceService allows the application to manage the conference life cycle and interact with the conference. Typical application APIs workflow: The application creates a conference The application uses the fetchConference method to obtain the conference object. The application can choose to either: Join a conference Replay a conference Listen to a conference Broadcast a conference The application can request a specific quality of Simulcast video streams through the Simulcast method. The application can start and stop sending the local participant's audio streams to the conference. The application can start and stop sending the local participant's video streams to the conference. The application can also startVideo and stop sending the remote participants' video streams to the local participant. During a conference, the application can: Customize the number of the received video streams, select the video forwarding strategy, and prioritize the selected participants' video streams. Mute the local or remote participant Check if the local participant is muted Control playing remote participants' audio to the local participant. Inform whether the application plays the remote participants' audio to the local participant. Check which participant is speaking Check the audio level of a specific participant Decrease network bandwidth consumption by disabling participants' video streams Get information about the conference, such as the conference type , Conference object , conference status Get information about conference participants, such as the participant instance , information if a participant is present at a conference , a list of invited participants , a list of all conference participants , and information if at least one participant is present at a conference . Cancel timeout Check the standard WebRTC statistics for the application Control the audio processing state through the setAudioProcessing method. Check the audio processing state through the getAudioProcessing method. Kick a participant from a conference. Update the participant's permissions. Set a participant's position to enable the spatial audio experience during a Dolby Voice conference Configure a spatial environment of the application for the spatial audio feature Set the direction a participant is facing during a conference with enabled spatial audio The application calls the leave method to leave a conference. The application can interact with the service through these events: The ConferenceHistoryResult event provides historical conference details. The ConferenceTimeoutNoParticipantsJoinedEvent informs that during the maximum awaiting time nobody has joined the current participant at a conference. The IncomingCallEvent informs about incoming calls. The VideoStateEvent informs about the state of the local video. The ParticipantAddedEvent and the ParticipantUpdatedEvent notify about participants status changes. The QualityIndicators event informs about the audio quality. The ConferenceStatusUpdatedEvent informs about conference status changes. The StreamAddedEvent , StreamUpdatedEvent , and the StreamRemovedEvent notify about changes in stream statuses. Warning: Always implement the error for each called promise. You can also use the execute method, but in case of exceptions, you will trigger errors.","title":"ConferenceService"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/#functions","text":"Name Summary audioLevel [Android] open fun audioLevel (@ Nullable participant: Participant ): Double Gets the participant's audio level. broadcast [Android] @ NonNull open fun broadcast (@ NonNull conference: Conference ): Promise< Conference > Joins the conference in the broadcaster mode which allows transmitting audio and video. create [Android] @ NonNull open fun create (@ NonNull conferenceCreateOptions: ConferenceCreateOptions ): Promise< Conference > Creates the conference based on information from the ConferenceCreateOptions . fetchConference [Android] @ NonNull open fun fetchConference (@ NonNull conferenceId: String ): Promise< Conference > Provides a Conference object that allows joining a conference. findParticipantById [Android] @ Nullable open fun findParticipantById (@ NonNull participantId: String ): Participant Provides the instance of the desired participant. getAudioProcessing [Android] @ NonNull @DeprecatedSince(value = \"3.7\") open fun getAudioProcessing (): AudioProcessing Note : This method is deprecated in SDK 3. getConference [Android] @ Nullable open fun getConference (): Conference Gets the current Conference object. getConferenceStatus [Android] @ NonNull open fun getConferenceStatus (conferenceId: String ): Promise< ConferenceStatusResult > Gets the conference status. getConferenceType [Android] @ NonNull open fun getConferenceType (): LocalConferenceType Gets the current conference type. getInvitedParticipants [Android] @ NonNull open fun getInvitedParticipants (@ NonNull conferenceId: String ): Promise< ConferenceParticipantsInvitedResult > Retrieves the list of participants invited to the conference. getMaxVideoForwarding [Android] @ Nullable open fun getMaxVideoForwarding (): Integer Gets the maximum number of video streams that may be transmitted to the local participant. getParticipants [Android] @ NonNull open fun getParticipants (): List < Participant > Retrieves a list of conference participants. getVideoForwardingStrategy [Android] @ Nullable open fun getVideoForwardingStrategy (): VideoForwardingStrategy Gets the video forwarding strategy that the local participant uses in the current conference. hasParticipants [Android] open fun hasParticipants (): Boolean Informs that at least one participant is actively connected. isInConference [Android] open fun isInConference (): Boolean Informs if the specific conference exists. isMuted [Android] open fun isMuted (): Boolean Informs whether the local participant is muted. isOutputMuted [Android] open fun isOutputMuted (): Boolean Informs whether the application plays the remote participants' audio to the local participant. isSpeaking [Android] open fun isSpeaking (@ NonNull participant: Participant ): Boolean Indicates whether the current participant is speaking. join [Android] @ NonNull open fun join (@ NonNull options: ConferenceJoinOptions ): Promise< Conference > Joins the conference with the conference. kick [Android] @ NonNull open fun kick (@ NonNull participant: Participant ): Promise< Boolean > Allows the conference owner, or a participant with adequate permissions, to kick another participant from the conference by revoking the conference access token. leave [Android] @ NonNull open fun leave (): Promise< Boolean > Leaves the current conference. listen [Android] @ NonNull open fun listen (@ NonNull conference: Conference ): Promise< Conference > @ NonNull open fun listen (@ NonNull options: ConferenceListenOptions ): Promise< Conference > Joins the conference in the listener mode in which the conference participant can only receive video and audio and cannot transmit any media. localStats [Android] @ NonNull open fun localStats (): Map < String , JSONArray > Provides standard WebRTC statistics for the application to implement its own quality monitoring mechanisms. mute [Android] open fun mute (mute: Boolean ): Boolean Stops playing the local participant's audio to the conference. [Android] open fun mute (@ NonNull participant: Participant , mute: Boolean ): Boolean Stops playing the specified remote participants' audio to the local participant. muteOutput [Android] open fun muteOutput (mute: Boolean ): Boolean Controls playing remote participants' audio to the local participant. replay [Android] @ NonNull open fun replay (@ NonNull conference: Conference , offset: Long ): Promise< Conference > Replays the previously recorded conference. setAudioProcessing [Android] @DeprecatedSince(value = \"3.7\") open fun setAudioProcessing (@ NonNull audioProcessing: AudioProcessing ): Boolean Note : This method is deprecated in SDK 3. setSpatialDirection [Android] open fun setSpatialDirection (@ NonNull direction: SpatialDirection ) Sets the direction the local participant is facing in space. setSpatialEnvironment [Android] open fun setSpatialEnvironment (@ NonNull scale: SpatialScale , @ NonNull forward: SpatialPosition , @ NonNull up: SpatialPosition , @ NonNull right: SpatialPosition ) Configures a spatial environment of an application, so the audio renderer understands which directions the application considers forward, up, and right and which units it uses for distance. setSpatialPosition [Android] open fun setSpatialPosition (@ NonNull position: SpatialPosition ) Sets a location from which the local participant listens to a Dolby Voice conference with enabled spatial audio. [Android] open fun setSpatialPosition (@ NonNull participant: Participant , @ NonNull position: SpatialPosition ) Sets a remote participant's position in space in a Dolby Voice conference to render the participant's audio from the specified location. simulcast [Android] @ NonNull open fun simulcast (@ NonNull requested: List < ParticipantQuality >): Promise< Boolean > Requests a specific quality of the received Simulcast video streams. startAudio [Android] @DeprecatedSince(value = \"3.7\") @ NonNull open fun startAudio (): Promise< Boolean > @DeprecatedSince(value = \"3.7\") @ NonNull open fun startAudio (@ NonNull participant: Participant ): Promise< Boolean > Note : This method is deprecated in SDK 3. startVideo [Android] @DeprecatedSince(value = \"3.7\") @ NonNull open fun startVideo (): Promise< Boolean > @DeprecatedSince(value = \"3.7\") @ NonNull open fun startVideo (@ NonNull participant: Participant ): Promise< Boolean > Note : This method is deprecated in SDK 3. stopAudio [Android] @DeprecatedSince(value = \"3.7\") @ NonNull open fun stopAudio (): Promise< Boolean > @DeprecatedSince(value = \"3.7\") @ NonNull open fun stopAudio (@ NonNull participant: Participant ): Promise< Boolean > Note : This method is deprecated in SDK 3. stopVideo [Android] @DeprecatedSince(value = \"3.7\") @ NonNull open fun stopVideo (): Promise< Boolean > @DeprecatedSince(value = \"3.7\") @ NonNull open fun stopVideo (@ NonNull participant: Participant ): Promise< Boolean > Note : This method is deprecated in SDK 3. updatePermissions [Android] @ NonNull open fun updatePermissions (@ NonNull participantPermissions: List < ParticipantPermissions >): Promise< Boolean > Updates the participant's conference permissions. videoForwarding [Android] @ NonNull open fun videoForwarding (@ NonNull options: VideoForwardingOptions ): Promise< Boolean > Sets the video forwarding functionality for the local participant. [Android] @ NonNull @DeprecatedSince(value = \"3.6\") open fun videoForwarding (max: Int , @ Nullable participants: List < Participant >): Promise< Boolean > Sets the maximum number of video streams that may be transmitted to the local participant.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/audio-level/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / audioLevel audioLevel \u00b6 [Android] open fun audioLevel (@ Nullable participant: Participant ): Double Gets the participant's audio level. The audio level value ranges from 0.0 to 1.0. Note : When the local participant is muted, the audioLevel value is set to a non-zero value, and isSpeaking is set to true if the audioLevel is greater than 0.05. This implementation allows adding a warning message to notify the local participant that their audio is not sent to a conference. Return \u00b6 the value between 0 and 1. Parameters \u00b6 Android participant participant, the value can be safely set to an incorrect one","title":"Audio level"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/audio-level/#audiolevel","text":"[Android] open fun audioLevel (@ Nullable participant: Participant ): Double Gets the participant's audio level. The audio level value ranges from 0.0 to 1.0. Note : When the local participant is muted, the audioLevel value is set to a non-zero value, and isSpeaking is set to true if the audioLevel is greater than 0.05. This implementation allows adding a warning message to notify the local participant that their audio is not sent to a conference.","title":"audioLevel"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/audio-level/#return","text":"the value between 0 and 1.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/audio-level/#parameters","text":"Android participant participant, the value can be safely set to an incorrect one","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/broadcast/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / broadcast broadcast \u00b6 [Android] @ NonNull open fun broadcast (@ NonNull conference: Conference ): Promise< Conference > Joins the conference in the broadcaster mode which allows transmitting audio and video. Possible rejection causes: ServerErrorException InConferenceException MediaEngineException ParticipantAddedErrorEventException Return \u00b6 the promise to resolve. Parameters \u00b6 Android conference conference","title":"Broadcast"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/broadcast/#broadcast","text":"[Android] @ NonNull open fun broadcast (@ NonNull conference: Conference ): Promise< Conference > Joins the conference in the broadcaster mode which allows transmitting audio and video. Possible rejection causes: ServerErrorException InConferenceException MediaEngineException ParticipantAddedErrorEventException","title":"broadcast"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/broadcast/#return","text":"the promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/broadcast/#parameters","text":"Android conference conference","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/create/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / create create \u00b6 [Android] @ NonNull open fun create (@ NonNull conferenceCreateOptions: ConferenceCreateOptions ): Promise< Conference > Creates the conference based on information from the ConferenceCreateOptions . Return \u00b6 the conference creation information holder. Parameters \u00b6 Android conferenceCreateOptions information holder where the ID, parameters, and metadata can be passed","title":"Create"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/create/#create","text":"[Android] @ NonNull open fun create (@ NonNull conferenceCreateOptions: ConferenceCreateOptions ): Promise< Conference > Creates the conference based on information from the ConferenceCreateOptions .","title":"create"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/create/#return","text":"the conference creation information holder.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/create/#parameters","text":"Android conferenceCreateOptions information holder where the ID, parameters, and metadata can be passed","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/fetch-conference/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / fetchConference fetchConference \u00b6 [Android] @ NonNull open fun fetchConference (@ NonNull conferenceId: String ): Promise< Conference > Provides a Conference object that allows joining a conference. For more information about using the fetch method, see the Conferencing document. Return \u00b6 the ConferenceInformation in the Promise to resolve. Parameters \u00b6 Android conferenceId conference ID.","title":"Fetch conference"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/fetch-conference/#fetchconference","text":"[Android] @ NonNull open fun fetchConference (@ NonNull conferenceId: String ): Promise< Conference > Provides a Conference object that allows joining a conference. For more information about using the fetch method, see the Conferencing document.","title":"fetchConference"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/fetch-conference/#return","text":"the ConferenceInformation in the Promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/fetch-conference/#parameters","text":"Android conferenceId conference ID.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/find-participant-by-id/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / findParticipantById findParticipantById \u00b6 [Android] @ Nullable open fun findParticipantById (@ NonNull participantId: String ): Participant Provides the instance of the desired participant. Return \u00b6 the instance of the participant. The null value informs that the conference or the participant does not exist in the current time session. Parameters \u00b6 Android participantId participant's ID","title":"Find participant by id"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/find-participant-by-id/#findparticipantbyid","text":"[Android] @ Nullable open fun findParticipantById (@ NonNull participantId: String ): Participant Provides the instance of the desired participant.","title":"findParticipantById"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/find-participant-by-id/#return","text":"the instance of the participant. The null value informs that the conference or the participant does not exist in the current time session.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/find-participant-by-id/#parameters","text":"Android participantId participant's ID","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/get-audio-processing/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / getAudioProcessing getAudioProcessing \u00b6 [Android] @ NonNull @DeprecatedSince(value = \"3.7\") open fun getAudioProcessing (): AudioProcessing Deprecated \u00b6 Note : This method is deprecated in SDK 3.7 and replaced with the getCaptureMode method. Gets the current audio processing state for a conference. Return \u00b6 the audio processing mode.","title":"Get audio processing"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/get-audio-processing/#getaudioprocessing","text":"[Android] @ NonNull @DeprecatedSince(value = \"3.7\") open fun getAudioProcessing (): AudioProcessing","title":"getAudioProcessing"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/get-audio-processing/#deprecated","text":"Note : This method is deprecated in SDK 3.7 and replaced with the getCaptureMode method. Gets the current audio processing state for a conference.","title":"Deprecated"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/get-audio-processing/#return","text":"the audio processing mode.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/get-conference-status/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / getConferenceStatus getConferenceStatus \u00b6 [Android] @ NonNull open fun getConferenceStatus (conferenceId: String ): Promise< ConferenceStatusResult > Gets the conference status. Return \u00b6 the promise to resolve containing the ConferenceStatusResult . Parameters \u00b6 Android conferenceId the conference ID","title":"Get conference status"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/get-conference-status/#getconferencestatus","text":"[Android] @ NonNull open fun getConferenceStatus (conferenceId: String ): Promise< ConferenceStatusResult > Gets the conference status.","title":"getConferenceStatus"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/get-conference-status/#return","text":"the promise to resolve containing the ConferenceStatusResult .","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/get-conference-status/#parameters","text":"Android conferenceId the conference ID","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/get-conference-type/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / getConferenceType getConferenceType \u00b6 [Android] @ NonNull open fun getConferenceType (): LocalConferenceType Gets the current conference type. Return \u00b6 the ConferenceType. the ConferenceType.NONE is a default value.","title":"Get conference type"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/get-conference-type/#getconferencetype","text":"[Android] @ NonNull open fun getConferenceType (): LocalConferenceType Gets the current conference type.","title":"getConferenceType"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/get-conference-type/#return","text":"the ConferenceType. the ConferenceType.NONE is a default value.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/get-conference/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / getConference getConference \u00b6 [Android] @ Nullable open fun getConference (): Conference Gets the current Conference object. Return \u00b6 the nullable object.","title":"Get conference"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/get-conference/#getconference","text":"[Android] @ Nullable open fun getConference (): Conference Gets the current Conference object.","title":"getConference"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/get-conference/#return","text":"the nullable object.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/get-invited-participants/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / getInvitedParticipants getInvitedParticipants \u00b6 [Android] @ NonNull open fun getInvitedParticipants (@ NonNull conferenceId: String ): Promise< ConferenceParticipantsInvitedResult > Retrieves the list of participants invited to the conference. Return \u00b6 the promise to resolve. Parameters \u00b6 Android conferenceId conference ID","title":"Get invited participants"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/get-invited-participants/#getinvitedparticipants","text":"[Android] @ NonNull open fun getInvitedParticipants (@ NonNull conferenceId: String ): Promise< ConferenceParticipantsInvitedResult > Retrieves the list of participants invited to the conference.","title":"getInvitedParticipants"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/get-invited-participants/#return","text":"the promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/get-invited-participants/#parameters","text":"Android conferenceId conference ID","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/get-max-video-forwarding/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / getMaxVideoForwarding getMaxVideoForwarding \u00b6 [Android] @ Nullable open fun getMaxVideoForwarding (): Integer Gets the maximum number of video streams that may be transmitted to the local participant. Return \u00b6 The maximum number of video streams that the local participant can receive in the current conference.","title":"Get max video forwarding"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/get-max-video-forwarding/#getmaxvideoforwarding","text":"[Android] @ Nullable open fun getMaxVideoForwarding (): Integer Gets the maximum number of video streams that may be transmitted to the local participant.","title":"getMaxVideoForwarding"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/get-max-video-forwarding/#return","text":"The maximum number of video streams that the local participant can receive in the current conference.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/get-participants/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / getParticipants getParticipants \u00b6 [Android] @ NonNull open fun getParticipants (): List < Participant > Retrieves a list of conference participants. Return \u00b6 A list of conference participants.","title":"Get participants"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/get-participants/#getparticipants","text":"[Android] @ NonNull open fun getParticipants (): List < Participant > Retrieves a list of conference participants.","title":"getParticipants"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/get-participants/#return","text":"A list of conference participants.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/get-video-forwarding-strategy/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / getVideoForwardingStrategy getVideoForwardingStrategy \u00b6 [Android] @ Nullable open fun getVideoForwardingStrategy (): VideoForwardingStrategy Gets the video forwarding strategy that the local participant uses in the current conference. This method is available only in SDK 3.6 and later. Return \u00b6 The strategy that the local participant uses in the current conference.","title":"Get video forwarding strategy"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/get-video-forwarding-strategy/#getvideoforwardingstrategy","text":"[Android] @ Nullable open fun getVideoForwardingStrategy (): VideoForwardingStrategy Gets the video forwarding strategy that the local participant uses in the current conference. This method is available only in SDK 3.6 and later.","title":"getVideoForwardingStrategy"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/get-video-forwarding-strategy/#return","text":"The strategy that the local participant uses in the current conference.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/has-participants/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / hasParticipants hasParticipants \u00b6 [Android] open fun hasParticipants (): Boolean Informs that at least one participant is actively connected. Return \u00b6 indicates if at least one participant is actively connected to the conference.","title":"Has participants"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/has-participants/#hasparticipants","text":"[Android] open fun hasParticipants (): Boolean Informs that at least one participant is actively connected.","title":"hasParticipants"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/has-participants/#return","text":"indicates if at least one participant is actively connected to the conference.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/is-in-conference/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / isInConference isInConference \u00b6 [Android] open fun isInConference (): Boolean Informs if the specific conference exists. It can be used together with the ConferenceStatus. Return \u00b6 Returns true if the conference exists or if the connection attempt to the conference is pending.","title":"Is in conference"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/is-in-conference/#isinconference","text":"[Android] open fun isInConference (): Boolean Informs if the specific conference exists. It can be used together with the ConferenceStatus.","title":"isInConference"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/is-in-conference/#return","text":"Returns true if the conference exists or if the connection attempt to the conference is pending.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/is-muted/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / isMuted isMuted \u00b6 [Android] open fun isMuted (): Boolean Informs whether the local participant is muted. Note : This API is no longer supported for remote participants. Return \u00b6 information if the local participant is muted. Returns false if the participant is not muted or is not present at the conference. Returns true if the participant is muted.","title":"Is muted"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/is-muted/#ismuted","text":"[Android] open fun isMuted (): Boolean Informs whether the local participant is muted. Note : This API is no longer supported for remote participants.","title":"isMuted"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/is-muted/#return","text":"information if the local participant is muted. Returns false if the participant is not muted or is not present at the conference. Returns true if the participant is muted.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/is-output-muted/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / isOutputMuted isOutputMuted \u00b6 [Android] open fun isOutputMuted (): Boolean Informs whether the application plays the remote participants' audio to the local participant. Return \u00b6 a boolean indicating whether the application plays the remote participants' audio to the local participant.","title":"Is output muted"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/is-output-muted/#isoutputmuted","text":"[Android] open fun isOutputMuted (): Boolean Informs whether the application plays the remote participants' audio to the local participant.","title":"isOutputMuted"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/is-output-muted/#return","text":"a boolean indicating whether the application plays the remote participants' audio to the local participant.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/is-speaking/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / isSpeaking isSpeaking \u00b6 [Android] open fun isSpeaking (@ NonNull participant: Participant ): Boolean Indicates whether the current participant is speaking. Return \u00b6 a boolean indicating whether the current participant is speaking. Parameters \u00b6 Android participant participant","title":"Is speaking"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/is-speaking/#isspeaking","text":"[Android] open fun isSpeaking (@ NonNull participant: Participant ): Boolean Indicates whether the current participant is speaking.","title":"isSpeaking"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/is-speaking/#return","text":"a boolean indicating whether the current participant is speaking.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/is-speaking/#parameters","text":"Android participant participant","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/join/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / join join \u00b6 [Android] @ NonNull open fun join (@ NonNull options: ConferenceJoinOptions ): Promise< Conference > Joins the conference with the conference. The ConferenceJoinOptions model can be constructed using the ConferenceJoinOptions.Builder model. The possible exception in the rejection: ServerErrorException InConferenceException MediaEngineException ParticipantAddedErrorEventException Return \u00b6 the promise to resolve. Parameters \u00b6 Android options the holder of the options to join","title":"Join"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/join/#join","text":"[Android] @ NonNull open fun join (@ NonNull options: ConferenceJoinOptions ): Promise< Conference > Joins the conference with the conference. The ConferenceJoinOptions model can be constructed using the ConferenceJoinOptions.Builder model. The possible exception in the rejection: ServerErrorException InConferenceException MediaEngineException ParticipantAddedErrorEventException","title":"join"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/join/#return","text":"the promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/join/#parameters","text":"Android options the holder of the options to join","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/kick/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / kick kick \u00b6 [Android] @ NonNull open fun kick (@ NonNull participant: Participant ): Promise< Boolean > Allows the conference owner, or a participant with adequate permissions, to kick another participant from the conference by revoking the conference access token. The kicked participant cannot join the conference again. Return \u00b6 the promise to resolve. Parameters \u00b6 Android participant The participant who needs to be kicked from the conference.","title":"Kick"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/kick/#kick","text":"[Android] @ NonNull open fun kick (@ NonNull participant: Participant ): Promise< Boolean > Allows the conference owner, or a participant with adequate permissions, to kick another participant from the conference by revoking the conference access token. The kicked participant cannot join the conference again.","title":"kick"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/kick/#return","text":"the promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/kick/#parameters","text":"Android participant The participant who needs to be kicked from the conference.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/leave/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / leave leave \u00b6 [Android] @ NonNull open fun leave (): Promise< Boolean > Leaves the current conference.","title":"Leave"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/leave/#leave","text":"[Android] @ NonNull open fun leave (): Promise< Boolean > Leaves the current conference.","title":"leave"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/listen/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / listen listen \u00b6 [Android] @ NonNull open fun listen (@ NonNull conference: Conference ): Promise< Conference > Joins the conference in the listener mode in which the conference participant can only receive video and audio and cannot transmit any media. Possible rejection causes : ServerErrorException InConferenceException MediaEngineException ParticipantAddedErrorEventException Note : Conference events from other listeners are not available for listeners. Only users will receive conference events from other listeners. Return \u00b6 the promise to resolve. Parameters \u00b6 Android conference conference [Android] @ NonNull open fun listen (@ NonNull options: ConferenceListenOptions ): Promise< Conference > Joins the conference in the listener mode in which the conference participant can only receive video and audio and cannot transmit any media. Possible rejection causes : ServerErrorException InConferenceException MediaEngineException ParticipantAddedErrorEventException Return \u00b6 the promise to resolve. Parameters \u00b6 Android options the holder of the options to join","title":"Listen"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/listen/#listen","text":"[Android] @ NonNull open fun listen (@ NonNull conference: Conference ): Promise< Conference > Joins the conference in the listener mode in which the conference participant can only receive video and audio and cannot transmit any media. Possible rejection causes : ServerErrorException InConferenceException MediaEngineException ParticipantAddedErrorEventException Note : Conference events from other listeners are not available for listeners. Only users will receive conference events from other listeners.","title":"listen"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/listen/#return","text":"the promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/listen/#parameters","text":"Android conference conference [Android] @ NonNull open fun listen (@ NonNull options: ConferenceListenOptions ): Promise< Conference > Joins the conference in the listener mode in which the conference participant can only receive video and audio and cannot transmit any media. Possible rejection causes : ServerErrorException InConferenceException MediaEngineException ParticipantAddedErrorEventException","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/listen/#return_1","text":"the promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/listen/#parameters_1","text":"Android options the holder of the options to join","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/local-stats/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / localStats localStats \u00b6 [Android] @ NonNull open fun localStats (): Map < String , JSONArray > Provides standard WebRTC statistics for the application to implement its own quality monitoring mechanisms. Return \u00b6 The WebRTC Stat Matrix.","title":"Local stats"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/local-stats/#localstats","text":"[Android] @ NonNull open fun localStats (): Map < String , JSONArray > Provides standard WebRTC statistics for the application to implement its own quality monitoring mechanisms.","title":"localStats"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/local-stats/#return","text":"The WebRTC Stat Matrix.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/mute-output/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / muteOutput muteOutput \u00b6 [Android] open fun muteOutput (mute: Boolean ): Boolean Controls playing remote participants' audio to the local participant. Note : This API is only supported when the client connects to a Dolby Voice conference. Return \u00b6 a boolean indicating whether remote participants are muted. Parameters \u00b6 Android mute A boolean, true indicates that remote participants are muted, false indicates that remote participants are not muted.","title":"Mute output"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/mute-output/#muteoutput","text":"[Android] open fun muteOutput (mute: Boolean ): Boolean Controls playing remote participants' audio to the local participant. Note : This API is only supported when the client connects to a Dolby Voice conference.","title":"muteOutput"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/mute-output/#return","text":"a boolean indicating whether remote participants are muted.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/mute-output/#parameters","text":"Android mute A boolean, true indicates that remote participants are muted, false indicates that remote participants are not muted.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/mute/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / mute mute \u00b6 [Android] open fun mute (mute: Boolean ): Boolean Stops playing the local participant's audio to the conference. The mute method does not notify the server to stop audio stream transmission. Return \u00b6 informs if the mute state has changed. Parameters \u00b6 Android mute A boolean, true indicates that the local participant is muted, false indicates that a participant is not muted [Android] open fun mute (@ NonNull participant: Participant , mute: Boolean ): Boolean Stops playing the specified remote participants' audio to the local participant. The mute method does not notify the server to stop audio stream transmission. Note : This API is not supported when the client connects to a Dolby Voice conference. If you wish to mute remote participants in Dolby Voice conferences, you must use the stopAudio API. This API allows the conference participants to stop receiving the specific audio streams from the server. Return \u00b6 informs if the mute state has changed. Parameters \u00b6 Android participant A remote participant mute A boolean, true indicates that the participant is muted, false indicates that a participant is not muted","title":"Mute"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/mute/#mute","text":"[Android] open fun mute (mute: Boolean ): Boolean Stops playing the local participant's audio to the conference. The mute method does not notify the server to stop audio stream transmission.","title":"mute"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/mute/#return","text":"informs if the mute state has changed.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/mute/#parameters","text":"Android mute A boolean, true indicates that the local participant is muted, false indicates that a participant is not muted [Android] open fun mute (@ NonNull participant: Participant , mute: Boolean ): Boolean Stops playing the specified remote participants' audio to the local participant. The mute method does not notify the server to stop audio stream transmission. Note : This API is not supported when the client connects to a Dolby Voice conference. If you wish to mute remote participants in Dolby Voice conferences, you must use the stopAudio API. This API allows the conference participants to stop receiving the specific audio streams from the server.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/mute/#return_1","text":"informs if the mute state has changed.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/mute/#parameters_1","text":"Android participant A remote participant mute A boolean, true indicates that the participant is muted, false indicates that a participant is not muted","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/replay/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / replay replay \u00b6 [Android] @ NonNull open fun replay (@ NonNull conference: Conference , offset: Long ): Promise< Conference > Replays the previously recorded conference. For more information, see the Recording Conferences article. Possible rejection causes: ServerErrorException InConferenceException MediaEngineException ParticipantAddedErrorEventException Return \u00b6 the promise to resolve that indicates the result of the request. Parameters \u00b6 Android conference conference offset the offset to start with","title":"Replay"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/replay/#replay","text":"[Android] @ NonNull open fun replay (@ NonNull conference: Conference , offset: Long ): Promise< Conference > Replays the previously recorded conference. For more information, see the Recording Conferences article. Possible rejection causes: ServerErrorException InConferenceException MediaEngineException ParticipantAddedErrorEventException","title":"replay"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/replay/#return","text":"the promise to resolve that indicates the result of the request.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/replay/#parameters","text":"Android conference conference offset the offset to start with","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/set-audio-processing/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / setAudioProcessing setAudioProcessing \u00b6 [Android] @DeprecatedSince(value = \"3.7\") open fun setAudioProcessing (@ NonNull audioProcessing: AudioProcessing ): Boolean Deprecated \u00b6 Note : This method is deprecated in SDK 3.7 and replaced with the setCaptureMode method. Enables and disables audio processing for the local participant. Return \u00b6 a boolean indicating whether the audio processing mode is updated. Parameters \u00b6 Android audioProcessing The audio processing mode","title":"Set audio processing"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/set-audio-processing/#setaudioprocessing","text":"[Android] @DeprecatedSince(value = \"3.7\") open fun setAudioProcessing (@ NonNull audioProcessing: AudioProcessing ): Boolean","title":"setAudioProcessing"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/set-audio-processing/#deprecated","text":"Note : This method is deprecated in SDK 3.7 and replaced with the setCaptureMode method. Enables and disables audio processing for the local participant.","title":"Deprecated"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/set-audio-processing/#return","text":"a boolean indicating whether the audio processing mode is updated.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/set-audio-processing/#parameters","text":"Android audioProcessing The audio processing mode","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/set-spatial-direction/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / setSpatialDirection setSpatialDirection \u00b6 [Android] open fun setSpatialDirection (@ NonNull direction: SpatialDirection ) Sets the direction the local participant is facing in space. This method is available only for participants who joined the conference with the setSpatialAudio parameter enabled. Otherwise, SDK triggers the SpatialAudioException . This method is not available for listeners. To set a spatial direction for listeners, use the Set Spatial Listeners Audio REST API. Using setSpatialDirection for listeners triggers the SpatialAudioException . If the local participant hears audio from the position (0,0,0) facing down the Z-axis and locates a remote participant in the position (1,0,1), the local participant hears the remote participant from their front-right. If the local participant chooses to change the direction they are facing and rotate +90 degrees about the Y-axis, then instead of hearing the speaker from the front-right position, they hear the speaker from the front-left position. The following video presents this example: Sorry, your browser doesn't support embedded videos. Parameters \u00b6 Android direction The direction the local participant is facing in space.","title":"Set spatial direction"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/set-spatial-direction/#setspatialdirection","text":"[Android] open fun setSpatialDirection (@ NonNull direction: SpatialDirection ) Sets the direction the local participant is facing in space. This method is available only for participants who joined the conference with the setSpatialAudio parameter enabled. Otherwise, SDK triggers the SpatialAudioException . This method is not available for listeners. To set a spatial direction for listeners, use the Set Spatial Listeners Audio REST API. Using setSpatialDirection for listeners triggers the SpatialAudioException . If the local participant hears audio from the position (0,0,0) facing down the Z-axis and locates a remote participant in the position (1,0,1), the local participant hears the remote participant from their front-right. If the local participant chooses to change the direction they are facing and rotate +90 degrees about the Y-axis, then instead of hearing the speaker from the front-right position, they hear the speaker from the front-left position. The following video presents this example: Sorry, your browser doesn't support embedded videos.","title":"setSpatialDirection"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/set-spatial-direction/#parameters","text":"Android direction The direction the local participant is facing in space.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/set-spatial-environment/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / setSpatialEnvironment setSpatialEnvironment \u00b6 [Android] open fun setSpatialEnvironment (@ NonNull scale: SpatialScale , @ NonNull forward: SpatialPosition , @ NonNull up: SpatialPosition , @ NonNull right: SpatialPosition ) Configures a spatial environment of an application, so the audio renderer understands which directions the application considers forward, up, and right and which units it uses for distance. This method is available only for participants who joined the conference with the setSpatialAudio parameter enabled. Otherwise, SDK triggers the SpatialAudioException . This method is not available for listeners. To set a spatial environment for listeners, use the Set Spatial Listeners Audio REST API. Using setSpatialEnvironment for listeners triggers the SpatialAudioException . If not called, the SDK uses the default spatial environment, which consists of the following values: forward = (0, 0, 1), where +Z axis is in front up = (0, 1, 0), where +Y axis is above right = (1, 0, 0), where +X axis is to the right scale = (1, 1, 1), where one unit on any axis is 1 meter The default spatial environment is presented in the following diagram: Parameters \u00b6 Android scale A scale that defines how to convert units from the coordinate system of an application (pixels or centimeters) into meters used by the spatial audio coordinate system. For example, if SpatialScale is set to (100,100,100), it indicates that 100 of the applications units (cm) map to 1 meter for the audio coordinates. In such a case, if the listener's location is (0,0,0)cm and a remote participant's location is (200,200,200)cm, the listener has an impression of hearing the remote participant from the (2,2,2)m location. The scale value must be greater than 0. For more information, see the Spatial Audio article. forward A vector describing the direction the application considers as forward. The value can be either +1, 0, or -1 and must be orthogonal to up and right. up A vector describing the direction the application considers as up. The value can be either +1, 0, or -1 and must be orthogonal to forward and right. right A vector describing the direction the application considers as right. The value can be either +1, 0, or -1 and must be orthogonal to forward and up.","title":"Set spatial environment"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/set-spatial-environment/#setspatialenvironment","text":"[Android] open fun setSpatialEnvironment (@ NonNull scale: SpatialScale , @ NonNull forward: SpatialPosition , @ NonNull up: SpatialPosition , @ NonNull right: SpatialPosition ) Configures a spatial environment of an application, so the audio renderer understands which directions the application considers forward, up, and right and which units it uses for distance. This method is available only for participants who joined the conference with the setSpatialAudio parameter enabled. Otherwise, SDK triggers the SpatialAudioException . This method is not available for listeners. To set a spatial environment for listeners, use the Set Spatial Listeners Audio REST API. Using setSpatialEnvironment for listeners triggers the SpatialAudioException . If not called, the SDK uses the default spatial environment, which consists of the following values: forward = (0, 0, 1), where +Z axis is in front up = (0, 1, 0), where +Y axis is above right = (1, 0, 0), where +X axis is to the right scale = (1, 1, 1), where one unit on any axis is 1 meter The default spatial environment is presented in the following diagram:","title":"setSpatialEnvironment"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/set-spatial-environment/#parameters","text":"Android scale A scale that defines how to convert units from the coordinate system of an application (pixels or centimeters) into meters used by the spatial audio coordinate system. For example, if SpatialScale is set to (100,100,100), it indicates that 100 of the applications units (cm) map to 1 meter for the audio coordinates. In such a case, if the listener's location is (0,0,0)cm and a remote participant's location is (200,200,200)cm, the listener has an impression of hearing the remote participant from the (2,2,2)m location. The scale value must be greater than 0. For more information, see the Spatial Audio article. forward A vector describing the direction the application considers as forward. The value can be either +1, 0, or -1 and must be orthogonal to up and right. up A vector describing the direction the application considers as up. The value can be either +1, 0, or -1 and must be orthogonal to forward and right. right A vector describing the direction the application considers as right. The value can be either +1, 0, or -1 and must be orthogonal to forward and up.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/set-spatial-position/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / setSpatialPosition setSpatialPosition \u00b6 [Android] open fun setSpatialPosition (@ NonNull position: SpatialPosition ) Sets a location from which the local participant listens to a Dolby Voice conference with enabled spatial audio. If the local participant does not have an established location, the participant hears audio from the default location (0, 0, 0). This method is available for the local participant only if the participant joined a conference with the setSpatialAudio parameter enabled. Otherwise, SDK triggers the SpatialAudioException . This method is not available for listeners. To set a spatial position for listeners, use the Set Spatial Listeners Audio REST API. Using setSpatialPosition for listeners triggers the SpatialAudioException . For example, if a local participant Eric, who does not have a set direction, calls setSpatialPosition(VoxeetSDK.session.participant, {x:3,y:0,z:0}), Eric hears audio from the position (3,0,0). Parameters \u00b6 Android position The location from which the participant will hear a conference. [Android] open fun setSpatialPosition (@ NonNull participant: Participant , @ NonNull position: SpatialPosition ) Sets a remote participant's position in space in a Dolby Voice conference to render the participant's audio from the specified location. Setting the remote participants\u2019 positions is required in conferences that use the individual SpatialAudioStyle . In these conferences, if a remote participant does not have an established location, the participant does not have a default position and will remain muted until a position is specified. The shared spatial audio style does not support setting the remote participants' positions. In conferences that use the shared style, the spatial scene is shared by all participants, so that each client can set a position and participate in the shared scene. Calling this method for remote participants in the shared spatial audio style triggers the SpatialAudioException . This method is available only for participants who joined a conference using the join method with the setSpatialAudio parameter enabled. Otherwise, SDK triggers the SpatialAudioException . To set a spatial position for listeners, use the Set Spatial Listeners Audio REST API. For example, if a local participant Eric, who does not have a set direction, calls setSpatialPosition(VoxeetSDK.session.participant, {x:3,y:0,z:0}), Eric hears audio from the position (3,0,0). If Eric also calls setSpatialPosition(Sophia, {x:7,y:1,z:2}), he hears Sophia from the position (7,1,2). In this case, Eric hears Sophia 4 meters to the right, 1 meter above, and 2 meters in front. The following graphic presents the participants' locations: Parameters \u00b6 Android participant The selected remote participant. position The participant's audio location from which their audio will be rendered.","title":"Set spatial position"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/set-spatial-position/#setspatialposition","text":"[Android] open fun setSpatialPosition (@ NonNull position: SpatialPosition ) Sets a location from which the local participant listens to a Dolby Voice conference with enabled spatial audio. If the local participant does not have an established location, the participant hears audio from the default location (0, 0, 0). This method is available for the local participant only if the participant joined a conference with the setSpatialAudio parameter enabled. Otherwise, SDK triggers the SpatialAudioException . This method is not available for listeners. To set a spatial position for listeners, use the Set Spatial Listeners Audio REST API. Using setSpatialPosition for listeners triggers the SpatialAudioException . For example, if a local participant Eric, who does not have a set direction, calls setSpatialPosition(VoxeetSDK.session.participant, {x:3,y:0,z:0}), Eric hears audio from the position (3,0,0).","title":"setSpatialPosition"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/set-spatial-position/#parameters","text":"Android position The location from which the participant will hear a conference. [Android] open fun setSpatialPosition (@ NonNull participant: Participant , @ NonNull position: SpatialPosition ) Sets a remote participant's position in space in a Dolby Voice conference to render the participant's audio from the specified location. Setting the remote participants\u2019 positions is required in conferences that use the individual SpatialAudioStyle . In these conferences, if a remote participant does not have an established location, the participant does not have a default position and will remain muted until a position is specified. The shared spatial audio style does not support setting the remote participants' positions. In conferences that use the shared style, the spatial scene is shared by all participants, so that each client can set a position and participate in the shared scene. Calling this method for remote participants in the shared spatial audio style triggers the SpatialAudioException . This method is available only for participants who joined a conference using the join method with the setSpatialAudio parameter enabled. Otherwise, SDK triggers the SpatialAudioException . To set a spatial position for listeners, use the Set Spatial Listeners Audio REST API. For example, if a local participant Eric, who does not have a set direction, calls setSpatialPosition(VoxeetSDK.session.participant, {x:3,y:0,z:0}), Eric hears audio from the position (3,0,0). If Eric also calls setSpatialPosition(Sophia, {x:7,y:1,z:2}), he hears Sophia from the position (7,1,2). In this case, Eric hears Sophia 4 meters to the right, 1 meter above, and 2 meters in front. The following graphic presents the participants' locations:","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/set-spatial-position/#parameters_1","text":"Android participant The selected remote participant. position The participant's audio location from which their audio will be rendered.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/simulcast/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / simulcast simulcast \u00b6 [Android] @ NonNull open fun simulcast (@ NonNull requested: List < ParticipantQuality >): Promise< Boolean > Requests a specific quality of the received Simulcast video streams. Use this method only for selected conference participants or for all participants that are present at the conference. Return \u00b6 the promise to resolve. Parameters \u00b6 Android requested list of simulcast configurations","title":"Simulcast"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/simulcast/#simulcast","text":"[Android] @ NonNull open fun simulcast (@ NonNull requested: List < ParticipantQuality >): Promise< Boolean > Requests a specific quality of the received Simulcast video streams. Use this method only for selected conference participants or for all participants that are present at the conference.","title":"simulcast"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/simulcast/#return","text":"the promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/simulcast/#parameters","text":"Android requested list of simulcast configurations","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/start-audio/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / startAudio startAudio \u00b6 [Android] @DeprecatedSince(value = \"3.7\") @ NonNull open fun startAudio (): Promise< Boolean > Deprecated \u00b6 Note : This method is deprecated in SDK 3.7 and replaced with the start methods that are available in the LocalAudio and RemoteVideo models. Starts sending local participant\u2019s audio streams from the local client to the conference. The startAudio method in Dolby Voice conferences is not available for listeners. The startAudio method requires up to a few seconds to become effective. The possible audio track statuses: starting , started , or stopped . [Android] @DeprecatedSince(value = \"3.7\") @ NonNull open fun startAudio (@ NonNull participant: Participant ): Promise< Boolean > Deprecated \u00b6 Note : This method is deprecated in SDK 3.7 and replaced with the start methods that are available in the LocalAudio and RemoteAudio models. Starts sending remote participant\u2019s audio from the conference to the local client. This allows the local participant to unmute remote participants who are locally muted through the stopAudio method. The startAudio method impacts only the audio streams that the local participant receives; the method does not impact the audio transmission between remote participants and a conference and does not allow the local participant to force sending remote participants\u2019 streams to the conference or to the local participant. The startAudio method in Dolby Voice conferences is not available for listeners. The startAudio method requires up to a few seconds to become effective. Parameters \u00b6 Android participant The participant whose stream should be sent to the local participant.","title":"Start audio"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/start-audio/#startaudio","text":"[Android] @DeprecatedSince(value = \"3.7\") @ NonNull open fun startAudio (): Promise< Boolean >","title":"startAudio"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/start-audio/#deprecated","text":"Note : This method is deprecated in SDK 3.7 and replaced with the start methods that are available in the LocalAudio and RemoteVideo models. Starts sending local participant\u2019s audio streams from the local client to the conference. The startAudio method in Dolby Voice conferences is not available for listeners. The startAudio method requires up to a few seconds to become effective. The possible audio track statuses: starting , started , or stopped . [Android] @DeprecatedSince(value = \"3.7\") @ NonNull open fun startAudio (@ NonNull participant: Participant ): Promise< Boolean >","title":"Deprecated"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/start-audio/#deprecated_1","text":"Note : This method is deprecated in SDK 3.7 and replaced with the start methods that are available in the LocalAudio and RemoteAudio models. Starts sending remote participant\u2019s audio from the conference to the local client. This allows the local participant to unmute remote participants who are locally muted through the stopAudio method. The startAudio method impacts only the audio streams that the local participant receives; the method does not impact the audio transmission between remote participants and a conference and does not allow the local participant to force sending remote participants\u2019 streams to the conference or to the local participant. The startAudio method in Dolby Voice conferences is not available for listeners. The startAudio method requires up to a few seconds to become effective.","title":"Deprecated"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/start-audio/#parameters","text":"Android participant The participant whose stream should be sent to the local participant.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/start-video/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / startVideo startVideo \u00b6 [Android] @DeprecatedSince(value = \"3.7\") @ NonNull open fun startVideo (): Promise< Boolean > Deprecated \u00b6 Note : This method is deprecated in SDK 3.7 and replaced with the start methods that are available in the LocalVideo and RemoteVideo models. Notifies the server to either start sending the local participant's video stream to the conference or start sending a remote participant's video stream to the local participant. The startVideo method does not control the remote participant's video stream; if a remote participant does not transmit any video stream, the local participant cannot change it using the startVideo method. The reject value informs about PromisePermissionRefusedEventException or MediaException . If the application does not have a permission sto start a video stream, it emits PermissionRefusedEvent . [Android] @DeprecatedSince(value = \"3.7\") @ NonNull open fun startVideo (@ NonNull participant: Participant ): Promise< Boolean > Deprecated \u00b6 Note : This method is deprecated in SDK 3.7 and replaced with the start methods that are available in the LocalVideo and RemoteVideo models. Informs the server to start sending video streams of a specific participant.","title":"Start video"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/start-video/#startvideo","text":"[Android] @DeprecatedSince(value = \"3.7\") @ NonNull open fun startVideo (): Promise< Boolean >","title":"startVideo"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/start-video/#deprecated","text":"Note : This method is deprecated in SDK 3.7 and replaced with the start methods that are available in the LocalVideo and RemoteVideo models. Notifies the server to either start sending the local participant's video stream to the conference or start sending a remote participant's video stream to the local participant. The startVideo method does not control the remote participant's video stream; if a remote participant does not transmit any video stream, the local participant cannot change it using the startVideo method. The reject value informs about PromisePermissionRefusedEventException or MediaException . If the application does not have a permission sto start a video stream, it emits PermissionRefusedEvent . [Android] @DeprecatedSince(value = \"3.7\") @ NonNull open fun startVideo (@ NonNull participant: Participant ): Promise< Boolean >","title":"Deprecated"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/start-video/#deprecated_1","text":"Note : This method is deprecated in SDK 3.7 and replaced with the start methods that are available in the LocalVideo and RemoteVideo models. Informs the server to start sending video streams of a specific participant.","title":"Deprecated"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/stop-audio/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / stopAudio stopAudio \u00b6 [Android] @DeprecatedSince(value = \"3.7\") @ NonNull open fun stopAudio (): Promise< Boolean > Deprecated \u00b6 Note : This method is deprecated in SDK 3.7 and replaced with the stop methods that are available in the LocalAudio and RemoteAudio models. Stops sending local participant\u2019s audio from the local client to the conference. The stopAudio method in Dolby Voice conferences is not available for listeners. Leaving a conference resets the stopAudio settings. Participants who rejoin a conference need to provide the desired stopAudio parameters and call the stopAudio method once again. The possible audio track statuses: stopping or started . The stopAudio method requires up to a few seconds to become effective. [Android] @DeprecatedSince(value = \"3.7\") @ NonNull open fun stopAudio (@ NonNull participant: Participant ): Promise< Boolean > Deprecated \u00b6 Note : This method is deprecated in SDK 3.7 and replaced with the stop methods that are available in the LocalAudio and RemoteAudio models. Stops sending remote participant\u2019s audio from the conference to the local client. This allows the local participant to locally mute remote participants. The stopAudio method impacts only the audio streams that the local participant receives; the method does not impact the audio transmission between remote participants and a conference and does not allow the local participant to stop sending remote participants\u2019 streams to the conference. The stopAudio method in Dolby Voice conferences is not available for listeners. Leaving a conference resets the stopAudio settings. Participants who rejoin a conference need to provide the desired stopAudio parameters and call the stopAudio method once again. The stopAudio method requires up to a few seconds to become effective. Parameters \u00b6 Android participant The participant whose stream should not be sent to the local participant.","title":"Stop audio"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/stop-audio/#stopaudio","text":"[Android] @DeprecatedSince(value = \"3.7\") @ NonNull open fun stopAudio (): Promise< Boolean >","title":"stopAudio"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/stop-audio/#deprecated","text":"Note : This method is deprecated in SDK 3.7 and replaced with the stop methods that are available in the LocalAudio and RemoteAudio models. Stops sending local participant\u2019s audio from the local client to the conference. The stopAudio method in Dolby Voice conferences is not available for listeners. Leaving a conference resets the stopAudio settings. Participants who rejoin a conference need to provide the desired stopAudio parameters and call the stopAudio method once again. The possible audio track statuses: stopping or started . The stopAudio method requires up to a few seconds to become effective. [Android] @DeprecatedSince(value = \"3.7\") @ NonNull open fun stopAudio (@ NonNull participant: Participant ): Promise< Boolean >","title":"Deprecated"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/stop-audio/#deprecated_1","text":"Note : This method is deprecated in SDK 3.7 and replaced with the stop methods that are available in the LocalAudio and RemoteAudio models. Stops sending remote participant\u2019s audio from the conference to the local client. This allows the local participant to locally mute remote participants. The stopAudio method impacts only the audio streams that the local participant receives; the method does not impact the audio transmission between remote participants and a conference and does not allow the local participant to stop sending remote participants\u2019 streams to the conference. The stopAudio method in Dolby Voice conferences is not available for listeners. Leaving a conference resets the stopAudio settings. Participants who rejoin a conference need to provide the desired stopAudio parameters and call the stopAudio method once again. The stopAudio method requires up to a few seconds to become effective.","title":"Deprecated"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/stop-audio/#parameters","text":"Android participant The participant whose stream should not be sent to the local participant.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/stop-video/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / stopVideo stopVideo \u00b6 [Android] @DeprecatedSince(value = \"3.7\") @ NonNull open fun stopVideo (): Promise< Boolean > Deprecated \u00b6 Note : This method is deprecated in SDK 3.7 and replaced with the stop methods that are available in the LocalVideo and RemoteVideo models. Notifies the server to either stop sending the local participant's video stream to the conference or stop sending a remote participant's video stream to the local participant. Use this method only when the current participant is at the conference, otherwise the application emits an exception in the catch block of the promise. Return \u00b6 the promise to resolve. [Android] @DeprecatedSince(value = \"3.7\") @ NonNull open fun stopVideo (@ NonNull participant: Participant ): Promise< Boolean > Deprecated \u00b6 Note : This method is deprecated in SDK 3.7 and replaced with the stop methods that are available in the LocalVideo and RemoteVideo models. Informs the server to stop sending video streams of a specific participant. Use this method to decrease network bandwidth consumption.","title":"Stop video"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/stop-video/#stopvideo","text":"[Android] @DeprecatedSince(value = \"3.7\") @ NonNull open fun stopVideo (): Promise< Boolean >","title":"stopVideo"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/stop-video/#deprecated","text":"Note : This method is deprecated in SDK 3.7 and replaced with the stop methods that are available in the LocalVideo and RemoteVideo models. Notifies the server to either stop sending the local participant's video stream to the conference or stop sending a remote participant's video stream to the local participant. Use this method only when the current participant is at the conference, otherwise the application emits an exception in the catch block of the promise.","title":"Deprecated"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/stop-video/#return","text":"the promise to resolve. [Android] @DeprecatedSince(value = \"3.7\") @ NonNull open fun stopVideo (@ NonNull participant: Participant ): Promise< Boolean >","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/stop-video/#deprecated_1","text":"Note : This method is deprecated in SDK 3.7 and replaced with the stop methods that are available in the LocalVideo and RemoteVideo models. Informs the server to stop sending video streams of a specific participant. Use this method to decrease network bandwidth consumption.","title":"Deprecated"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/update-permissions/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / updatePermissions updatePermissions \u00b6 [Android] @ NonNull open fun updatePermissions (@ NonNull participantPermissions: List < ParticipantPermissions >): Promise< Boolean > Updates the participant's conference permissions. If a participant does not have permission to perform a specific action, this action is not available for this participant during a conference, and the participant receives ConferencePermissionException . If a participant started a specific action and then lost permission to perform this action, the SDK stops the blocked action. For example, if a participant started sharing a screen and received the updated permissions that do not allow him to share a screen, the SDK stops the screen sharing session and the participant cannot start sharing the screen again. Return \u00b6 a promise with a boolean indicating conference permissions were successfully updated. Parameters \u00b6 Android participantPermissions An array of ParticipantPermissions that includes the new participant's permissions.","title":"Update permissions"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/update-permissions/#updatepermissions","text":"[Android] @ NonNull open fun updatePermissions (@ NonNull participantPermissions: List < ParticipantPermissions >): Promise< Boolean > Updates the participant's conference permissions. If a participant does not have permission to perform a specific action, this action is not available for this participant during a conference, and the participant receives ConferencePermissionException . If a participant started a specific action and then lost permission to perform this action, the SDK stops the blocked action. For example, if a participant started sharing a screen and received the updated permissions that do not allow him to share a screen, the SDK stops the screen sharing session and the participant cannot start sharing the screen again.","title":"updatePermissions"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/update-permissions/#return","text":"a promise with a boolean indicating conference permissions were successfully updated.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/update-permissions/#parameters","text":"Android participantPermissions An array of ParticipantPermissions that includes the new participant's permissions.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/video-forwarding/","text":"// sdk / com.voxeet.sdk.services / ConferenceService / videoForwarding videoForwarding \u00b6 [Android] @ NonNull open fun videoForwarding (@ NonNull options: VideoForwardingOptions ): Promise< Boolean > Sets the video forwarding functionality for the local participant. The method allows: Setting the maximum number of video streams that may be transmitted to the local participant Prioritizing specific participants' video streams that need to be transmitted to the local participant Changing the VideoForwardingStrategy that defines how the SDK should select conference participants whose videos will be received by the local participant This method is available only in SDK 3.6 and later. Parameters \u00b6 Android options The video forwarding options. [Android] @ NonNull @DeprecatedSince(value = \"3.6\") open fun videoForwarding (max: Int , @ Nullable participants: List < Participant >): Promise< Boolean > Deprecated \u00b6 Sets the maximum number of video streams that may be transmitted to the local participant. This method also allows the local participant to use a pin option to prioritize the specific participant's video streams and display their videos even when these participants do not talk. For more information, see the Video Forwarding article. This method was introduced in SDK 3.1 and deprecated in SDK 3.6. Deprecated \u00b6 Parameters \u00b6 Android max The maximum number of video streams that may be transmitted to the local participant. The valid values are between 0 and 25. The default value is 4. In the case of providing a value smaller than 0, SDK triggers the IllegalStateException error. In the case of providing a value greater than 25, the Dolby.io server triggers an error. participants The list of participant objects.","title":"Video forwarding"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/video-forwarding/#videoforwarding","text":"[Android] @ NonNull open fun videoForwarding (@ NonNull options: VideoForwardingOptions ): Promise< Boolean > Sets the video forwarding functionality for the local participant. The method allows: Setting the maximum number of video streams that may be transmitted to the local participant Prioritizing specific participants' video streams that need to be transmitted to the local participant Changing the VideoForwardingStrategy that defines how the SDK should select conference participants whose videos will be received by the local participant This method is available only in SDK 3.6 and later.","title":"videoForwarding"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/video-forwarding/#parameters","text":"Android options The video forwarding options. [Android] @ NonNull @DeprecatedSince(value = \"3.6\") open fun videoForwarding (max: Int , @ Nullable participants: List < Participant >): Promise< Boolean >","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/video-forwarding/#deprecated","text":"Sets the maximum number of video streams that may be transmitted to the local participant. This method also allows the local participant to use a pin option to prioritize the specific participant's video streams and display their videos even when these participants do not talk. For more information, see the Video Forwarding article. This method was introduced in SDK 3.1 and deprecated in SDK 3.6.","title":"Deprecated"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/video-forwarding/#deprecated_1","text":"","title":"Deprecated"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-conference-service/video-forwarding/#parameters_1","text":"Android max The maximum number of video streams that may be transmitted to the local participant. The valid values are between 0 and 25. The default value is 4. In the case of providing a value smaller than 0, SDK triggers the IllegalStateException error. In the case of providing a value greater than 25, the Dolby.io server triggers an error. participants The list of participant objects.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-file-presentation-service/","text":"// sdk / com.voxeet.sdk.services / FilePresentationService FilePresentationService \u00b6 [Android] open class FilePresentationService : AbstractPresentationService<CONSUME_EVENT_TYPE, API_CLASS> The FilePresentationService allows presenting files during a conference. The Dolby.io Communications APIs service converts the user-provided file into multiple pages, as images, accessible through the image method. The file presentation workflow: The presenter calls the convert method to upload and convert a file. The presenter calls the start method to start presenting the file. The presenter and the viewers receive the FilePresentationStarted event that informs that the file presentation starts. Upon receiving the FilePresentationStarted event, call the image method to get the converted file images URLs and display the proper page of the file by retrieving the individual images. The application is responsible for coordinating the page flip between the local and the presented files. The presenter calls the update method to inform the service to send the updated page number to the participants. The presenter and viewers receive the FilePresentationUpdated event with the current page number. Receiving the FilePresentationUpdated event should trigger calling the image method to display the proper page of the file by retrieving the individual images. The presenter may call the thumbnail method to obtain thumbnail images of the file and implement a carousel control for the presenting user to flip pages locally. The presenter calls the stop method to end the file presentation. The presenter and the viewers receive the FilePresentationStopped event to inform about the end of the file presentation. The following diagram presents the easiest workflow for presenting files during a conference. Functions \u00b6 Name Summary convert [Android] @ NonNull open fun convert (@ NonNull file: File ): Promise< FilePresentation > Converts the user-provided file into multiple pages, as images, that can be shared during the file presentation. image [Android] @ Nullable open fun image (fileId: String , pageNumber: Int ): String Provides the image's URL that refers to a specific page of the presented file. start [Android] @ NonNull open fun start (@ NonNull body: FilePresentationConverted ): Promise< FilePresentation > @ NonNull open fun start (@ NonNull body: FilePresentationConverted , position: Int ): Promise< FilePresentation > Starts a file presentation. stop [Android] @ NonNull open fun stop (@ NonNull fileId: String ): Promise< FilePresentation > Stops the file presentation. thumbnail [Android] @ Nullable open fun thumbnail (fileId: String , pageNumber: Int ): String Provides the thumbnail's URL that refers to a specific page of the presented file. update [Android] @ NonNull open fun update (@ NonNull fileId: String , position: Int ): Promise< FilePresentation > Informs the service to send the updated page number to the conference participants.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-file-presentation-service/#filepresentationservice","text":"[Android] open class FilePresentationService : AbstractPresentationService<CONSUME_EVENT_TYPE, API_CLASS> The FilePresentationService allows presenting files during a conference. The Dolby.io Communications APIs service converts the user-provided file into multiple pages, as images, accessible through the image method. The file presentation workflow: The presenter calls the convert method to upload and convert a file. The presenter calls the start method to start presenting the file. The presenter and the viewers receive the FilePresentationStarted event that informs that the file presentation starts. Upon receiving the FilePresentationStarted event, call the image method to get the converted file images URLs and display the proper page of the file by retrieving the individual images. The application is responsible for coordinating the page flip between the local and the presented files. The presenter calls the update method to inform the service to send the updated page number to the participants. The presenter and viewers receive the FilePresentationUpdated event with the current page number. Receiving the FilePresentationUpdated event should trigger calling the image method to display the proper page of the file by retrieving the individual images. The presenter may call the thumbnail method to obtain thumbnail images of the file and implement a carousel control for the presenting user to flip pages locally. The presenter calls the stop method to end the file presentation. The presenter and the viewers receive the FilePresentationStopped event to inform about the end of the file presentation. The following diagram presents the easiest workflow for presenting files during a conference.","title":"FilePresentationService"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-file-presentation-service/#functions","text":"Name Summary convert [Android] @ NonNull open fun convert (@ NonNull file: File ): Promise< FilePresentation > Converts the user-provided file into multiple pages, as images, that can be shared during the file presentation. image [Android] @ Nullable open fun image (fileId: String , pageNumber: Int ): String Provides the image's URL that refers to a specific page of the presented file. start [Android] @ NonNull open fun start (@ NonNull body: FilePresentationConverted ): Promise< FilePresentation > @ NonNull open fun start (@ NonNull body: FilePresentationConverted , position: Int ): Promise< FilePresentation > Starts a file presentation. stop [Android] @ NonNull open fun stop (@ NonNull fileId: String ): Promise< FilePresentation > Stops the file presentation. thumbnail [Android] @ Nullable open fun thumbnail (fileId: String , pageNumber: Int ): String Provides the thumbnail's URL that refers to a specific page of the presented file. update [Android] @ NonNull open fun update (@ NonNull fileId: String , position: Int ): Promise< FilePresentation > Informs the service to send the updated page number to the conference participants.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-file-presentation-service/convert/","text":"// sdk / com.voxeet.sdk.services / FilePresentationService / convert convert \u00b6 [Android] @ NonNull open fun convert (@ NonNull file: File ): Promise< FilePresentation > Converts the user-provided file into multiple pages, as images, that can be shared during the file presentation. The file is uploaded as FormData. Supported file formats are: doc/docx (Microsoft Word) ppt/pptx pdf After conversion, the files are broken into individual images with maximum resolution capped at 2560x1600 . Only the converted files can be shared during conferences. Return \u00b6 the promise to resolve. Parameters \u00b6 Android file valid The file that the presenter wants to share during the conference.","title":"Convert"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-file-presentation-service/convert/#convert","text":"[Android] @ NonNull open fun convert (@ NonNull file: File ): Promise< FilePresentation > Converts the user-provided file into multiple pages, as images, that can be shared during the file presentation. The file is uploaded as FormData. Supported file formats are: doc/docx (Microsoft Word) ppt/pptx pdf After conversion, the files are broken into individual images with maximum resolution capped at 2560x1600 . Only the converted files can be shared during conferences.","title":"convert"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-file-presentation-service/convert/#return","text":"the promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-file-presentation-service/convert/#parameters","text":"Android file valid The file that the presenter wants to share during the conference.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-file-presentation-service/image/","text":"// sdk / com.voxeet.sdk.services / FilePresentationService / image image \u00b6 [Android] @ Nullable open fun image (fileId: String , pageNumber: Int ): String Provides the image's URL that refers to a specific page of the presented file. Return \u00b6 the formatted string. Parameters \u00b6 Android fileId The ID of the presented file. pageNumber The page number that corresponds to the currently presented page of the shared file.","title":"Image"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-file-presentation-service/image/#image","text":"[Android] @ Nullable open fun image (fileId: String , pageNumber: Int ): String Provides the image's URL that refers to a specific page of the presented file.","title":"image"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-file-presentation-service/image/#return","text":"the formatted string.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-file-presentation-service/image/#parameters","text":"Android fileId The ID of the presented file. pageNumber The page number that corresponds to the currently presented page of the shared file.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-file-presentation-service/start/","text":"// sdk / com.voxeet.sdk.services / FilePresentationService / start start \u00b6 [Android] @ NonNull open fun start (@ NonNull body: FilePresentationConverted ): Promise< FilePresentation > Starts a file presentation. The Dolby.io Communications APIs allow presenting only the converted files. Return \u00b6 the promise to resolve. Parameters \u00b6 Android body The valid descriptor of the file. [Android] @ NonNull open fun start (@ NonNull body: FilePresentationConverted , position: Int ): Promise< FilePresentation > Starts a file presentation. The Dolby.io Communications APIs allow presenting only the converted files. This method allows presenting a specific page of the converted file. Return \u00b6 the promise to resolve. Parameters \u00b6 Android body The valid descriptor of the file. position The page number that should be presented.","title":"Start"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-file-presentation-service/start/#start","text":"[Android] @ NonNull open fun start (@ NonNull body: FilePresentationConverted ): Promise< FilePresentation > Starts a file presentation. The Dolby.io Communications APIs allow presenting only the converted files.","title":"start"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-file-presentation-service/start/#return","text":"the promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-file-presentation-service/start/#parameters","text":"Android body The valid descriptor of the file. [Android] @ NonNull open fun start (@ NonNull body: FilePresentationConverted , position: Int ): Promise< FilePresentation > Starts a file presentation. The Dolby.io Communications APIs allow presenting only the converted files. This method allows presenting a specific page of the converted file.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-file-presentation-service/start/#return_1","text":"the promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-file-presentation-service/start/#parameters_1","text":"Android body The valid descriptor of the file. position The page number that should be presented.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-file-presentation-service/stop/","text":"// sdk / com.voxeet.sdk.services / FilePresentationService / stop stop \u00b6 [Android] @ NonNull open fun stop (@ NonNull fileId: String ): Promise< FilePresentation > Stops the file presentation. Return \u00b6 the promise to resolve. Parameters \u00b6 Android fileId The ID of the presented file.","title":"Stop"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-file-presentation-service/stop/#stop","text":"[Android] @ NonNull open fun stop (@ NonNull fileId: String ): Promise< FilePresentation > Stops the file presentation.","title":"stop"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-file-presentation-service/stop/#return","text":"the promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-file-presentation-service/stop/#parameters","text":"Android fileId The ID of the presented file.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-file-presentation-service/thumbnail/","text":"// sdk / com.voxeet.sdk.services / FilePresentationService / thumbnail thumbnail \u00b6 [Android] @ Nullable open fun thumbnail (fileId: String , pageNumber: Int ): String Provides the thumbnail's URL that refers to a specific page of the presented file. Return \u00b6 the formatted string. Parameters \u00b6 Android fileId The ID of the presented file. pageNumber The page number that corresponds to the currently presented page of the shared file.","title":"Thumbnail"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-file-presentation-service/thumbnail/#thumbnail","text":"[Android] @ Nullable open fun thumbnail (fileId: String , pageNumber: Int ): String Provides the thumbnail's URL that refers to a specific page of the presented file.","title":"thumbnail"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-file-presentation-service/thumbnail/#return","text":"the formatted string.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-file-presentation-service/thumbnail/#parameters","text":"Android fileId The ID of the presented file. pageNumber The page number that corresponds to the currently presented page of the shared file.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-file-presentation-service/update/","text":"// sdk / com.voxeet.sdk.services / FilePresentationService / update update \u00b6 [Android] @ NonNull open fun update (@ NonNull fileId: String , position: Int ): Promise< FilePresentation > Informs the service to send the updated page number to the conference participants. Return \u00b6 the promise to resolve. Parameters \u00b6 Android fileId The ID of the presented file. position The page number that corresponds to the page that should be presented.","title":"Update"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-file-presentation-service/update/#update","text":"[Android] @ NonNull open fun update (@ NonNull fileId: String , position: Int ): Promise< FilePresentation > Informs the service to send the updated page number to the conference participants.","title":"update"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-file-presentation-service/update/#return","text":"the promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-file-presentation-service/update/#parameters","text":"Android fileId The ID of the presented file. position The page number that corresponds to the page that should be presented.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-local-stats-service/","text":"// sdk / com.voxeet.sdk.services / LocalStatsService LocalStatsService \u00b6 [Android] open class LocalStatsService : AbstractVoxeetService, Runnable Service responsible for statistics management from the WebRTC implementation. Every statistics are local only Functions \u00b6 Name Summary getLocalStats [Android] @ Nullable open fun getLocalStats (): List <LocalStats> Gets all participants stats from a local point of view [Android] @ Nullable open fun getLocalStats (@ Nullable peer: String ): LocalStats Gets the specified participant stats from a local point of view startAutoFetch [Android] open fun startAutoFetch (): Boolean Start an autofetch loop which will get the stats information at various times stopAutoFetch [Android] open fun stopAutoFetch (): Boolean Stop any autofetching loop","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-local-stats-service/#localstatsservice","text":"[Android] open class LocalStatsService : AbstractVoxeetService, Runnable Service responsible for statistics management from the WebRTC implementation. Every statistics are local only","title":"LocalStatsService"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-local-stats-service/#functions","text":"Name Summary getLocalStats [Android] @ Nullable open fun getLocalStats (): List <LocalStats> Gets all participants stats from a local point of view [Android] @ Nullable open fun getLocalStats (@ Nullable peer: String ): LocalStats Gets the specified participant stats from a local point of view startAutoFetch [Android] open fun startAutoFetch (): Boolean Start an autofetch loop which will get the stats information at various times stopAutoFetch [Android] open fun stopAutoFetch (): Boolean Stop any autofetching loop","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-local-stats-service/get-local-stats/","text":"// sdk / com.voxeet.sdk.services / LocalStatsService / getLocalStats getLocalStats \u00b6 [Android] @ Nullable open fun getLocalStats (@ Nullable peer: String ): LocalStats Gets the specified participant stats from a local point of view Return \u00b6 LocalStats or null Parameters \u00b6 Android peer the participant id [Android] @ Nullable open fun getLocalStats (): List <LocalStats> Gets all participants stats from a local point of view Return \u00b6 List of LocalStats or null","title":"Get local stats"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-local-stats-service/get-local-stats/#getlocalstats","text":"[Android] @ Nullable open fun getLocalStats (@ Nullable peer: String ): LocalStats Gets the specified participant stats from a local point of view","title":"getLocalStats"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-local-stats-service/get-local-stats/#return","text":"LocalStats or null","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-local-stats-service/get-local-stats/#parameters","text":"Android peer the participant id [Android] @ Nullable open fun getLocalStats (): List <LocalStats> Gets all participants stats from a local point of view","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-local-stats-service/get-local-stats/#return_1","text":"List of LocalStats or null","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-local-stats-service/start-auto-fetch/","text":"// sdk / com.voxeet.sdk.services / LocalStatsService / startAutoFetch startAutoFetch \u00b6 [Android] open fun startAutoFetch (): Boolean Start an autofetch loop which will get the stats information at various times Return \u00b6 an indicator telling if the session is now started or already started","title":"Start auto fetch"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-local-stats-service/start-auto-fetch/#startautofetch","text":"[Android] open fun startAutoFetch (): Boolean Start an autofetch loop which will get the stats information at various times","title":"startAutoFetch"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-local-stats-service/start-auto-fetch/#return","text":"an indicator telling if the session is now started or already started","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-local-stats-service/stop-auto-fetch/","text":"// sdk / com.voxeet.sdk.services / LocalStatsService / stopAutoFetch stopAutoFetch \u00b6 [Android] open fun stopAutoFetch (): Boolean Stop any autofetching loop Return \u00b6 an indicator telling if it's now stoppped or was already stopped","title":"Stop auto fetch"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-local-stats-service/stop-auto-fetch/#stopautofetch","text":"[Android] open fun stopAutoFetch (): Boolean Stop any autofetching loop","title":"stopAutoFetch"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-local-stats-service/stop-auto-fetch/#return","text":"an indicator telling if it's now stoppped or was already stopped","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-media-device-service/","text":"// sdk / com.voxeet.sdk.services / MediaDeviceService MediaDeviceService \u00b6 [Android] open class MediaDeviceService : AbstractVoxeetService The MediaDeviceService allows the application to manage the devices that are used during the conference. Typical application workflow: The application calls the getEglContext method to get the WebRTC EglBaseContext to share WebRTC mechanisms with the application. Then, the application is able to attach the stream to the specific receiver using the attachMediaStream method. The application can detach the stream by calling the unAttachMediaStream method. The application can also check information about the used cameras through the getCameraContext method. The switchCamera method enables the application to change the current camera to a different camera. The application can check the selected comfort noise level for output devices in Dolby Voice conferences, and change the comfort noise level. Functions \u00b6 Name Summary attachMediaStream [Android] @ MainThread open fun attachMediaStream (@ NonNull stream: MediaStream , @ NonNull videoSink: VideoSink): Boolean Attaches a stream to the given receiver. getCameraContext [Android] @ NonNull open fun getCameraContext (): CameraContext Retrieves the instance of the camera information. getComfortNoiseLevel [Android] @DeprecatedSince(value = \"3.7\") open fun getComfortNoiseLevel (): ComfortNoiseLevel Note : This method is deprecated in SDK 3. getEglContext [Android] @ Nullable open fun getEglContext (): EglBaseInteracts.Context Gets EglBaseContext from WebRTC to share WebRTC mechanisms with the application. setComfortNoiseLevel [Android] @DeprecatedSince(value = \"3.7\") open fun setComfortNoiseLevel (level: ComfortNoiseLevel ) Note : This method is deprecated in SDK 3. switchCamera [Android] @ NonNull open fun switchCamera (): Promise< Boolean > Switches the current camera to another available camera that is connected to the device. unAttachMediaStream [Android] @ MainThread open fun unAttachMediaStream (@ NonNull videoSink: VideoSink): Boolean Detaches the stream from the given videoSink. Properties \u00b6 Name Summary media [Android] open val media : MediaSDK","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-media-device-service/#mediadeviceservice","text":"[Android] open class MediaDeviceService : AbstractVoxeetService The MediaDeviceService allows the application to manage the devices that are used during the conference. Typical application workflow: The application calls the getEglContext method to get the WebRTC EglBaseContext to share WebRTC mechanisms with the application. Then, the application is able to attach the stream to the specific receiver using the attachMediaStream method. The application can detach the stream by calling the unAttachMediaStream method. The application can also check information about the used cameras through the getCameraContext method. The switchCamera method enables the application to change the current camera to a different camera. The application can check the selected comfort noise level for output devices in Dolby Voice conferences, and change the comfort noise level.","title":"MediaDeviceService"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-media-device-service/#functions","text":"Name Summary attachMediaStream [Android] @ MainThread open fun attachMediaStream (@ NonNull stream: MediaStream , @ NonNull videoSink: VideoSink): Boolean Attaches a stream to the given receiver. getCameraContext [Android] @ NonNull open fun getCameraContext (): CameraContext Retrieves the instance of the camera information. getComfortNoiseLevel [Android] @DeprecatedSince(value = \"3.7\") open fun getComfortNoiseLevel (): ComfortNoiseLevel Note : This method is deprecated in SDK 3. getEglContext [Android] @ Nullable open fun getEglContext (): EglBaseInteracts.Context Gets EglBaseContext from WebRTC to share WebRTC mechanisms with the application. setComfortNoiseLevel [Android] @DeprecatedSince(value = \"3.7\") open fun setComfortNoiseLevel (level: ComfortNoiseLevel ) Note : This method is deprecated in SDK 3. switchCamera [Android] @ NonNull open fun switchCamera (): Promise< Boolean > Switches the current camera to another available camera that is connected to the device. unAttachMediaStream [Android] @ MainThread open fun unAttachMediaStream (@ NonNull videoSink: VideoSink): Boolean Detaches the stream from the given videoSink.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-media-device-service/#properties","text":"Name Summary media [Android] open val media : MediaSDK","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-media-device-service/attach-media-stream/","text":"// sdk / com.voxeet.sdk.services / MediaDeviceService / attachMediaStream attachMediaStream \u00b6 [Android] @ MainThread open fun attachMediaStream (@ NonNull stream: MediaStream , @ NonNull videoSink: VideoSink): Boolean Attaches a stream to the given receiver. Note: If a stream is already attached to the receiver, this method will detach it. Return \u00b6 Parameters \u00b6 Android stream valid media stream to attach videoSink videosink that will receive updates","title":"Attach media stream"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-media-device-service/attach-media-stream/#attachmediastream","text":"[Android] @ MainThread open fun attachMediaStream (@ NonNull stream: MediaStream , @ NonNull videoSink: VideoSink): Boolean Attaches a stream to the given receiver. Note: If a stream is already attached to the receiver, this method will detach it.","title":"attachMediaStream"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-media-device-service/attach-media-stream/#return","text":"","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-media-device-service/attach-media-stream/#parameters","text":"Android stream valid media stream to attach videoSink videosink that will receive updates","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-media-device-service/get-camera-context/","text":"// sdk / com.voxeet.sdk.services / MediaDeviceService / getCameraContext getCameraContext \u00b6 [Android] @ NonNull open fun getCameraContext (): CameraContext Retrieves the instance of the camera information. Return \u00b6 the CameraContext","title":"Get camera context"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-media-device-service/get-camera-context/#getcameracontext","text":"[Android] @ NonNull open fun getCameraContext (): CameraContext Retrieves the instance of the camera information.","title":"getCameraContext"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-media-device-service/get-camera-context/#return","text":"the CameraContext","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-media-device-service/get-comfort-noise-level/","text":"// sdk / com.voxeet.sdk.services / MediaDeviceService / getComfortNoiseLevel getComfortNoiseLevel \u00b6 [Android] @DeprecatedSince(value = \"3.7\") open fun getComfortNoiseLevel (): ComfortNoiseLevel Deprecated \u00b6 Note : This method is deprecated in SDK 3.7 and replaced with the getComfortNoiseLevel method available in the LocalAudio model. Retrieves the comfort noise level setting for output devices in Dolby Voice conferences. Return \u00b6 The comfort noise level.","title":"Get comfort noise level"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-media-device-service/get-comfort-noise-level/#getcomfortnoiselevel","text":"[Android] @DeprecatedSince(value = \"3.7\") open fun getComfortNoiseLevel (): ComfortNoiseLevel","title":"getComfortNoiseLevel"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-media-device-service/get-comfort-noise-level/#deprecated","text":"Note : This method is deprecated in SDK 3.7 and replaced with the getComfortNoiseLevel method available in the LocalAudio model. Retrieves the comfort noise level setting for output devices in Dolby Voice conferences.","title":"Deprecated"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-media-device-service/get-comfort-noise-level/#return","text":"The comfort noise level.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-media-device-service/get-egl-context/","text":"// sdk / com.voxeet.sdk.services / MediaDeviceService / getEglContext getEglContext \u00b6 [Android] @ Nullable open fun getEglContext (): EglBaseInteracts.Context Gets EglBaseContext from WebRTC to share WebRTC mechanisms with the application. Return \u00b6 the current EglBaseContext or a null value if media are not created.","title":"Get egl context"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-media-device-service/get-egl-context/#geteglcontext","text":"[Android] @ Nullable open fun getEglContext (): EglBaseInteracts.Context Gets EglBaseContext from WebRTC to share WebRTC mechanisms with the application.","title":"getEglContext"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-media-device-service/get-egl-context/#return","text":"the current EglBaseContext or a null value if media are not created.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-media-device-service/media/","text":"// sdk / com.voxeet.sdk.services / MediaDeviceService / media media \u00b6 [Android] open val media : MediaSDK","title":"Media"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-media-device-service/media/#media","text":"[Android] open val media : MediaSDK","title":"media"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-media-device-service/set-comfort-noise-level/","text":"// sdk / com.voxeet.sdk.services / MediaDeviceService / setComfortNoiseLevel setComfortNoiseLevel \u00b6 [Android] @DeprecatedSince(value = \"3.7\") open fun setComfortNoiseLevel (level: ComfortNoiseLevel ) Deprecated \u00b6 Note : This method is deprecated in SDK 3.7 and replaced with the setComfortNoiseLevel method available in the LocalAudio model. Configures the comfort noise level for output devices in Dolby Voice conferences. Parameters \u00b6 Android level The selected comfort noise level.","title":"Set comfort noise level"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-media-device-service/set-comfort-noise-level/#setcomfortnoiselevel","text":"[Android] @DeprecatedSince(value = \"3.7\") open fun setComfortNoiseLevel (level: ComfortNoiseLevel )","title":"setComfortNoiseLevel"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-media-device-service/set-comfort-noise-level/#deprecated","text":"Note : This method is deprecated in SDK 3.7 and replaced with the setComfortNoiseLevel method available in the LocalAudio model. Configures the comfort noise level for output devices in Dolby Voice conferences.","title":"Deprecated"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-media-device-service/set-comfort-noise-level/#parameters","text":"Android level The selected comfort noise level.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-media-device-service/switch-camera/","text":"// sdk / com.voxeet.sdk.services / MediaDeviceService / switchCamera switchCamera \u00b6 [Android] @ NonNull open fun switchCamera (): Promise< Boolean > Switches the current camera to another available camera that is connected to the device. On Android, the second camera exists by default but on other devices, there may be none, one, two, or even more cameras. It updates the camera provider's information with the new camera type: front or back. Return \u00b6 the promise to resolve.","title":"Switch camera"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-media-device-service/switch-camera/#switchcamera","text":"[Android] @ NonNull open fun switchCamera (): Promise< Boolean > Switches the current camera to another available camera that is connected to the device. On Android, the second camera exists by default but on other devices, there may be none, one, two, or even more cameras. It updates the camera provider's information with the new camera type: front or back.","title":"switchCamera"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-media-device-service/switch-camera/#return","text":"the promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-media-device-service/un-attach-media-stream/","text":"// sdk / com.voxeet.sdk.services / MediaDeviceService / unAttachMediaStream unAttachMediaStream \u00b6 [Android] @ MainThread open fun unAttachMediaStream (@ NonNull videoSink: VideoSink): Boolean Detaches the stream from the given videoSink. Return \u00b6 the release indicator. Parameters \u00b6 Android videoSink receiver instance","title":"Un attach media stream"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-media-device-service/un-attach-media-stream/#unattachmediastream","text":"[Android] @ MainThread open fun unAttachMediaStream (@ NonNull videoSink: VideoSink): Boolean Detaches the stream from the given videoSink.","title":"unAttachMediaStream"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-media-device-service/un-attach-media-stream/#return","text":"the release indicator.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-media-device-service/un-attach-media-stream/#parameters","text":"Android videoSink receiver instance","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-notification-service/","text":"// sdk / com.voxeet.sdk.services / NotificationService NotificationService \u00b6 [Android] open class NotificationService : AbstractVoxeetService The NotificationService allows an application to subscribe to and unsubscribe from notifications related to: The number of participants who are present at a conference Created conferences Ended conferences Received invitations Participants joining conferences Participants leaving conferences The ConferenceStatusNotificationEvent informs about the conference status. The NotificationService also allows inviting participants to a conference. Typical application workflow for the inviter: The application calls the invite method to invite specific participants to a conference. The application can also call the inviteWithPermissions method that includes participants' permissions, which allow conference participants to perform a specific set of actions within a protected conference. Typical application workflow for the receiver: The application calls the register method to register the effective notification mode. The application calls the register method to customize notifications. This method registers filters which reject specific invitations. The application calls the setNotificationTokenProvider method to change the notification provider. The getNotificationTokenProvider method checks if the INotificationTokeProvider model is registered to the SDK. Optionally, the application can change the notification management mode into the enforcedNotificationMode by calling the setEnforcedNotificationMode method. The application calls the InvitationBundle constructor from the InvitationBundle model to transform notifications. The application calls the onInvitationReceived or onInvitationCanceledReceived method to show the proper notification. Participants who do not wish to participate at a conference can decline the conference invitation. For more information about the NotificationService, see the Using notifications article. Functions \u00b6 Name Summary decline [Android] @ NonNull open fun decline (@ NonNull conference: Conference ): Promise< Boolean > Declines the conference invitation. invite [Android] @ NonNull open fun invite (@ NonNull conference: Conference , @ NonNull participantOptions: List < ParticipantInfo >): Promise< Void > Notifies conference participants about a conference invitation. inviteWithPermissions [Android] @ NonNull open fun inviteWithPermissions (@ NonNull conference: Conference , @ NonNull participantsInvited: List < ParticipantInvited >): Promise< Void > Notifies conference participants about a conference invitation. subscribe [Android] open fun subscribe (@ NonNull subscriptions: Array < BaseSubscription >): Promise< Boolean > open fun subscribe (@ NonNull subscriptions: List < BaseSubscription >): Promise< Boolean > Turns on the specific subscription. unsubscribe [Android] open fun unsubscribe (@ NonNull subscriptions: Array < BaseSubscription >): Promise< Boolean > open fun unsubscribe (@ NonNull subscriptions: List < BaseSubscription >): Promise< Boolean > Turns off the specific subscription.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-notification-service/#notificationservice","text":"[Android] open class NotificationService : AbstractVoxeetService The NotificationService allows an application to subscribe to and unsubscribe from notifications related to: The number of participants who are present at a conference Created conferences Ended conferences Received invitations Participants joining conferences Participants leaving conferences The ConferenceStatusNotificationEvent informs about the conference status. The NotificationService also allows inviting participants to a conference. Typical application workflow for the inviter: The application calls the invite method to invite specific participants to a conference. The application can also call the inviteWithPermissions method that includes participants' permissions, which allow conference participants to perform a specific set of actions within a protected conference. Typical application workflow for the receiver: The application calls the register method to register the effective notification mode. The application calls the register method to customize notifications. This method registers filters which reject specific invitations. The application calls the setNotificationTokenProvider method to change the notification provider. The getNotificationTokenProvider method checks if the INotificationTokeProvider model is registered to the SDK. Optionally, the application can change the notification management mode into the enforcedNotificationMode by calling the setEnforcedNotificationMode method. The application calls the InvitationBundle constructor from the InvitationBundle model to transform notifications. The application calls the onInvitationReceived or onInvitationCanceledReceived method to show the proper notification. Participants who do not wish to participate at a conference can decline the conference invitation. For more information about the NotificationService, see the Using notifications article.","title":"NotificationService"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-notification-service/#functions","text":"Name Summary decline [Android] @ NonNull open fun decline (@ NonNull conference: Conference ): Promise< Boolean > Declines the conference invitation. invite [Android] @ NonNull open fun invite (@ NonNull conference: Conference , @ NonNull participantOptions: List < ParticipantInfo >): Promise< Void > Notifies conference participants about a conference invitation. inviteWithPermissions [Android] @ NonNull open fun inviteWithPermissions (@ NonNull conference: Conference , @ NonNull participantsInvited: List < ParticipantInvited >): Promise< Void > Notifies conference participants about a conference invitation. subscribe [Android] open fun subscribe (@ NonNull subscriptions: Array < BaseSubscription >): Promise< Boolean > open fun subscribe (@ NonNull subscriptions: List < BaseSubscription >): Promise< Boolean > Turns on the specific subscription. unsubscribe [Android] open fun unsubscribe (@ NonNull subscriptions: Array < BaseSubscription >): Promise< Boolean > open fun unsubscribe (@ NonNull subscriptions: List < BaseSubscription >): Promise< Boolean > Turns off the specific subscription.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-notification-service/decline/","text":"// sdk / com.voxeet.sdk.services / NotificationService / decline decline \u00b6 [Android] @ NonNull open fun decline (@ NonNull conference: Conference ): Promise< Boolean > Declines the conference invitation. Return \u00b6 the promise to resolve. Parameters \u00b6 Android conference the conference to decline the invitation from","title":"Decline"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-notification-service/decline/#decline","text":"[Android] @ NonNull open fun decline (@ NonNull conference: Conference ): Promise< Boolean > Declines the conference invitation.","title":"decline"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-notification-service/decline/#return","text":"the promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-notification-service/decline/#parameters","text":"Android conference the conference to decline the invitation from","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-notification-service/invite-with-permissions/","text":"// sdk / com.voxeet.sdk.services / NotificationService / inviteWithPermissions inviteWithPermissions \u00b6 [Android] @ NonNull open fun inviteWithPermissions (@ NonNull conference: Conference , @ NonNull participantsInvited: List < ParticipantInvited >): Promise< Void > Notifies conference participants about a conference invitation. This method includes participants' permissions. Participants who have permission to invite additional participants to a conference can also use the inviteWithPermissions method. In the invitation, inviters can only grant permissions that the inviters have. For example, a participant who does not have permission to record a conference can only invite new participants who also cannot record this conference. Protected conferences require assigning proper conference permissions to all invited participants. However, the inviter can invite participants to the protected conference without specifying the participants' permissions. If permissions are not specified, the platform assigns the default permissions, which include Join , SendAudio , SendVideo , ShareScreen , ShareVideo , ShareFile , SendMessage , Record , and Stream . If you wish to invite participants to a protected conference, use the invite method after joining the conference. The inviteWithPermissions method includes the Conference object. In the case of inviting participants to a protected conference, inviters can invite participants only to the current conference. Therefore, the invitation has to include the Conference object related to the current conference. For more information about invitations, see the Inviting Participants article. Return \u00b6 a non null promise to resolve. Parameters \u00b6 Android conference The conference object. participantsInvited Information about the invited application users.","title":"Invite with permissions"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-notification-service/invite-with-permissions/#invitewithpermissions","text":"[Android] @ NonNull open fun inviteWithPermissions (@ NonNull conference: Conference , @ NonNull participantsInvited: List < ParticipantInvited >): Promise< Void > Notifies conference participants about a conference invitation. This method includes participants' permissions. Participants who have permission to invite additional participants to a conference can also use the inviteWithPermissions method. In the invitation, inviters can only grant permissions that the inviters have. For example, a participant who does not have permission to record a conference can only invite new participants who also cannot record this conference. Protected conferences require assigning proper conference permissions to all invited participants. However, the inviter can invite participants to the protected conference without specifying the participants' permissions. If permissions are not specified, the platform assigns the default permissions, which include Join , SendAudio , SendVideo , ShareScreen , ShareVideo , ShareFile , SendMessage , Record , and Stream . If you wish to invite participants to a protected conference, use the invite method after joining the conference. The inviteWithPermissions method includes the Conference object. In the case of inviting participants to a protected conference, inviters can invite participants only to the current conference. Therefore, the invitation has to include the Conference object related to the current conference. For more information about invitations, see the Inviting Participants article.","title":"inviteWithPermissions"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-notification-service/invite-with-permissions/#return","text":"a non null promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-notification-service/invite-with-permissions/#parameters","text":"Android conference The conference object. participantsInvited Information about the invited application users.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-notification-service/invite/","text":"// sdk / com.voxeet.sdk.services / NotificationService / invite invite \u00b6 [Android] @ NonNull open fun invite (@ NonNull conference: Conference , @ NonNull participantOptions: List < ParticipantInfo >): Promise< Void > Notifies conference participants about a conference invitation. The Dolby.io Communications APIs offer the invite and inviteWithPermissions method. The inviteWithPermissions method includes participants' permissions, which allow conference participants to perform a specific set of actions within a protected conference. Both invite methods include the Conference object: In the case of inviting participants to a conference that is not protected, inviters can invite participants to any conference. In the case of inviting participants to a protected conference, inviters can invite participants only to the current conference. Therefore, if you wish to invite participants to a protected conference, include in the invitation the Conference object related to the current conference. For more information about invitations, see the Inviting Participants article. Return \u00b6 a non null promise to resolve. Parameters \u00b6 Android conference The conference object. participantOptions Information about the invited application users.","title":"Invite"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-notification-service/invite/#invite","text":"[Android] @ NonNull open fun invite (@ NonNull conference: Conference , @ NonNull participantOptions: List < ParticipantInfo >): Promise< Void > Notifies conference participants about a conference invitation. The Dolby.io Communications APIs offer the invite and inviteWithPermissions method. The inviteWithPermissions method includes participants' permissions, which allow conference participants to perform a specific set of actions within a protected conference. Both invite methods include the Conference object: In the case of inviting participants to a conference that is not protected, inviters can invite participants to any conference. In the case of inviting participants to a protected conference, inviters can invite participants only to the current conference. Therefore, if you wish to invite participants to a protected conference, include in the invitation the Conference object related to the current conference. For more information about invitations, see the Inviting Participants article.","title":"invite"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-notification-service/invite/#return","text":"a non null promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-notification-service/invite/#parameters","text":"Android conference The conference object. participantOptions Information about the invited application users.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-notification-service/subscribe/","text":"// sdk / com.voxeet.sdk.services / NotificationService / subscribe subscribe \u00b6 [Android] open fun subscribe (@ NonNull subscriptions: Array < BaseSubscription >): Promise< Boolean > open fun subscribe (@ NonNull subscriptions: List < BaseSubscription >): Promise< Boolean > Turns on the specific subscription. Return \u00b6 a flag indicating if the subscription is possible Parameters \u00b6 Android subscriptions list of subscriptions","title":"Subscribe"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-notification-service/subscribe/#subscribe","text":"[Android] open fun subscribe (@ NonNull subscriptions: Array < BaseSubscription >): Promise< Boolean > open fun subscribe (@ NonNull subscriptions: List < BaseSubscription >): Promise< Boolean > Turns on the specific subscription.","title":"subscribe"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-notification-service/subscribe/#return","text":"a flag indicating if the subscription is possible","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-notification-service/subscribe/#parameters","text":"Android subscriptions list of subscriptions","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-notification-service/unsubscribe/","text":"// sdk / com.voxeet.sdk.services / NotificationService / unsubscribe unsubscribe \u00b6 [Android] open fun unsubscribe (@ NonNull subscriptions: Array < BaseSubscription >): Promise< Boolean > open fun unsubscribe (@ NonNull subscriptions: List < BaseSubscription >): Promise< Boolean > Turns off the specific subscription. Return \u00b6 a flag indicating if the operation is possible Parameters \u00b6 Android subscriptions list of Subscription","title":"Unsubscribe"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-notification-service/unsubscribe/#unsubscribe","text":"[Android] open fun unsubscribe (@ NonNull subscriptions: Array < BaseSubscription >): Promise< Boolean > open fun unsubscribe (@ NonNull subscriptions: List < BaseSubscription >): Promise< Boolean > Turns off the specific subscription.","title":"unsubscribe"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-notification-service/unsubscribe/#return","text":"a flag indicating if the operation is possible","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-notification-service/unsubscribe/#parameters","text":"Android subscriptions list of Subscription","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-recording-service/","text":"// sdk / com.voxeet.sdk.services / RecordingService RecordingService \u00b6 [Android] open class RecordingService : AbstractVoxeetService The RecordingService allows an application to record conferences by using the start and stop methods that turn the recording on and off. The RecordingStatusUpdatedEvent informs the application about the recording status. Functions \u00b6 Name Summary isRecording [Android] open fun isRecording (): Boolean The recording status. start [Android] open fun start (): Promise< Boolean > Starts recording a conference. stop [Android] open fun stop (): Promise< Boolean > Stops recording a conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-recording-service/#recordingservice","text":"[Android] open class RecordingService : AbstractVoxeetService The RecordingService allows an application to record conferences by using the start and stop methods that turn the recording on and off. The RecordingStatusUpdatedEvent informs the application about the recording status.","title":"RecordingService"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-recording-service/#functions","text":"Name Summary isRecording [Android] open fun isRecording (): Boolean The recording status. start [Android] open fun start (): Promise< Boolean > Starts recording a conference. stop [Android] open fun stop (): Promise< Boolean > Stops recording a conference.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-recording-service/is-recording/","text":"// sdk / com.voxeet.sdk.services / RecordingService / isRecording isRecording \u00b6 [Android] open fun isRecording (): Boolean The recording status. Return \u00b6 Information whether the conference is recorded.","title":"Is recording"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-recording-service/is-recording/#isrecording","text":"[Android] open fun isRecording (): Boolean The recording status.","title":"isRecording"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-recording-service/is-recording/#return","text":"Information whether the conference is recorded.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-recording-service/start/","text":"// sdk / com.voxeet.sdk.services / RecordingService / start start \u00b6 [Android] open fun start (): Promise< Boolean > Starts recording a conference. For more information, see the Recording Conferences article. Return \u00b6 the promise to resolve that indicates the result of the request.","title":"Start"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-recording-service/start/#start","text":"[Android] open fun start (): Promise< Boolean > Starts recording a conference. For more information, see the Recording Conferences article.","title":"start"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-recording-service/start/#return","text":"the promise to resolve that indicates the result of the request.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-recording-service/stop/","text":"// sdk / com.voxeet.sdk.services / RecordingService / stop stop \u00b6 [Android] open fun stop (): Promise< Boolean > Stops recording a conference. Return \u00b6 the promise to resolve that indicates the result of the request.","title":"Stop"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-recording-service/stop/#stop","text":"[Android] open fun stop (): Promise< Boolean > Stops recording a conference.","title":"stop"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-recording-service/stop/#return","text":"the promise to resolve that indicates the result of the request.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/","text":"// sdk / com.voxeet.sdk.services / ScreenShareService ScreenShareService \u00b6 [Android] open class ScreenShareService : AbstractVoxeetService The ScreenShareService allows an application to share a screen during the conference. Typical application workflow: The application calls the sendRequestStartScreenShare method to obtain a screen-sharing permission. The application receives the RequestScreenSharePermissionEvent asking the participant for permission to share the screen. The application calls the sendUserPermissionRequest method that allows sharing the screen. The application calls the consumeRightsToScreenShare method which manages previously received information and grants the right to share the screen. The application starts sharing the screen through the startScreenShare method. If there is a need to share a screen of an external device, the application calls the startCustomScreenShare method. The application gets information about the screen size , modifies the size , and scales the screen . The onActivityResults method manages the activity results. The application calls the stopScreenShare method to stop sharing the screen. Functions \u00b6 Name Summary consumeRightsToScreenShare [Android] open fun consumeRightsToScreenShare () Automatically manages information obtained from the activity lifecycle and calls the startScreenshare method. getScreenSize [Android] @ NonNull open fun getScreenSize (@ NonNull context: Context ): Point Gets the current screen size information. getScreenSizeScaled [Android] @ NonNull open fun getScreenSizeScaled (@ NonNull screen_size: Point , height: Int ): Point Provides the scaled width, based on the provided screen size information and the requested screen height. onActivityResult [Android] open fun onActivityResult (requestCode: Int , resultCode: Int , @ NonNull data: Intent ): Boolean Manages the activity results in the context of sharing the screen. sendRequestStartScreenShare [Android] open fun sendRequestStartScreenShare () Sends a request to share the screen to the VoxeetAppCompatActivity instance which presents the permission request modal to the participant. sendUserPermissionRequest [Android] open fun sendUserPermissionRequest (@ NonNull activity: Activity ): Boolean Enables the proper permission dialog to the given Activity instance. [Android] open fun sendUserPermissionRequest (@ NonNull activity: Activity , full_quality: Boolean ): Boolean Permits the provided activity instance to share the screen. setScreenSizeInformation [Android] open fun setScreenSizeInformation (@ NonNull point: Point ): ScreenShareService Changes the size of the shared screen. startCustomScreenShare [Android] @ NonNull open fun startCustomScreenShare (@ NonNull provider: VideoCapturerProvider ): Promise< Boolean > Starts sharing the screen of an external device during a conference. startScreenShare [Android] @ NonNull open fun startScreenShare (@ NonNull intent: Intent ): Promise< Boolean > Starts sharing the screen. stopScreenShare [Android] @ NonNull open fun stopScreenShare (): Promise< Boolean > Stops sharing the screen.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/#screenshareservice","text":"[Android] open class ScreenShareService : AbstractVoxeetService The ScreenShareService allows an application to share a screen during the conference. Typical application workflow: The application calls the sendRequestStartScreenShare method to obtain a screen-sharing permission. The application receives the RequestScreenSharePermissionEvent asking the participant for permission to share the screen. The application calls the sendUserPermissionRequest method that allows sharing the screen. The application calls the consumeRightsToScreenShare method which manages previously received information and grants the right to share the screen. The application starts sharing the screen through the startScreenShare method. If there is a need to share a screen of an external device, the application calls the startCustomScreenShare method. The application gets information about the screen size , modifies the size , and scales the screen . The onActivityResults method manages the activity results. The application calls the stopScreenShare method to stop sharing the screen.","title":"ScreenShareService"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/#functions","text":"Name Summary consumeRightsToScreenShare [Android] open fun consumeRightsToScreenShare () Automatically manages information obtained from the activity lifecycle and calls the startScreenshare method. getScreenSize [Android] @ NonNull open fun getScreenSize (@ NonNull context: Context ): Point Gets the current screen size information. getScreenSizeScaled [Android] @ NonNull open fun getScreenSizeScaled (@ NonNull screen_size: Point , height: Int ): Point Provides the scaled width, based on the provided screen size information and the requested screen height. onActivityResult [Android] open fun onActivityResult (requestCode: Int , resultCode: Int , @ NonNull data: Intent ): Boolean Manages the activity results in the context of sharing the screen. sendRequestStartScreenShare [Android] open fun sendRequestStartScreenShare () Sends a request to share the screen to the VoxeetAppCompatActivity instance which presents the permission request modal to the participant. sendUserPermissionRequest [Android] open fun sendUserPermissionRequest (@ NonNull activity: Activity ): Boolean Enables the proper permission dialog to the given Activity instance. [Android] open fun sendUserPermissionRequest (@ NonNull activity: Activity , full_quality: Boolean ): Boolean Permits the provided activity instance to share the screen. setScreenSizeInformation [Android] open fun setScreenSizeInformation (@ NonNull point: Point ): ScreenShareService Changes the size of the shared screen. startCustomScreenShare [Android] @ NonNull open fun startCustomScreenShare (@ NonNull provider: VideoCapturerProvider ): Promise< Boolean > Starts sharing the screen of an external device during a conference. startScreenShare [Android] @ NonNull open fun startScreenShare (@ NonNull intent: Intent ): Promise< Boolean > Starts sharing the screen. stopScreenShare [Android] @ NonNull open fun stopScreenShare (): Promise< Boolean > Stops sharing the screen.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/consume-rights-to-screen-share/","text":"// sdk / com.voxeet.sdk.services / ScreenShareService / consumeRightsToScreenShare consumeRightsToScreenShare \u00b6 [Android] open fun consumeRightsToScreenShare () Automatically manages information obtained from the activity lifecycle and calls the startScreenshare method.","title":"Consume rights to screen share"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/consume-rights-to-screen-share/#consumerightstoscreenshare","text":"[Android] open fun consumeRightsToScreenShare () Automatically manages information obtained from the activity lifecycle and calls the startScreenshare method.","title":"consumeRightsToScreenShare"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/get-screen-size-scaled/","text":"// sdk / com.voxeet.sdk.services / ScreenShareService / getScreenSizeScaled getScreenSizeScaled \u00b6 [Android] @ NonNull open fun getScreenSizeScaled (@ NonNull screen_size: Point , height: Int ): Point Provides the scaled width, based on the provided screen size information and the requested screen height. Return \u00b6 the scaled up/down screen size. Parameters \u00b6 Android screen_size point object containing information about the width and the height of the screen height the requested height of the screen","title":"Get screen size scaled"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/get-screen-size-scaled/#getscreensizescaled","text":"[Android] @ NonNull open fun getScreenSizeScaled (@ NonNull screen_size: Point , height: Int ): Point Provides the scaled width, based on the provided screen size information and the requested screen height.","title":"getScreenSizeScaled"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/get-screen-size-scaled/#return","text":"the scaled up/down screen size.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/get-screen-size-scaled/#parameters","text":"Android screen_size point object containing information about the width and the height of the screen height the requested height of the screen","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/get-screen-size/","text":"// sdk / com.voxeet.sdk.services / ScreenShareService / getScreenSize getScreenSize \u00b6 [Android] @ NonNull open fun getScreenSize (@ NonNull context: Context ): Point Gets the current screen size information. Return \u00b6 the valid point information. Parameters \u00b6 Android context context that is a source of screen size information","title":"Get screen size"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/get-screen-size/#getscreensize","text":"[Android] @ NonNull open fun getScreenSize (@ NonNull context: Context ): Point Gets the current screen size information.","title":"getScreenSize"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/get-screen-size/#return","text":"the valid point information.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/get-screen-size/#parameters","text":"Android context context that is a source of screen size information","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/on-activity-result/","text":"// sdk / com.voxeet.sdk.services / ScreenShareService / onActivityResult onActivityResult \u00b6 [Android] open fun onActivityResult (requestCode: Int , resultCode: Int , @ NonNull data: Intent ): Boolean Manages the activity results in the context of sharing the screen. Return \u00b6 true if the logic is managed, false otherwise. Parameters \u00b6 Android requestCode the obtained requestCode resultCode the obtained resultCode data incoming data","title":"On activity result"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/on-activity-result/#onactivityresult","text":"[Android] open fun onActivityResult (requestCode: Int , resultCode: Int , @ NonNull data: Intent ): Boolean Manages the activity results in the context of sharing the screen.","title":"onActivityResult"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/on-activity-result/#return","text":"true if the logic is managed, false otherwise.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/on-activity-result/#parameters","text":"Android requestCode the obtained requestCode resultCode the obtained resultCode data incoming data","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/send-request-start-screen-share/","text":"// sdk / com.voxeet.sdk.services / ScreenShareService / sendRequestStartScreenShare sendRequestStartScreenShare \u00b6 [Android] open fun sendRequestStartScreenShare () Sends a request to share the screen to the VoxeetAppCompatActivity instance which presents the permission request modal to the participant. After granting permission, the VoxeetAppCompatActivity requests the start call.","title":"Send request start screen share"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/send-request-start-screen-share/#sendrequeststartscreenshare","text":"[Android] open fun sendRequestStartScreenShare () Sends a request to share the screen to the VoxeetAppCompatActivity instance which presents the permission request modal to the participant. After granting permission, the VoxeetAppCompatActivity requests the start call.","title":"sendRequestStartScreenShare"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/send-user-permission-request/","text":"// sdk / com.voxeet.sdk.services / ScreenShareService / sendUserPermissionRequest sendUserPermissionRequest \u00b6 [Android] open fun sendUserPermissionRequest (@ NonNull activity: Activity ): Boolean Enables the proper permission dialog to the given Activity instance. Return \u00b6 the compatibility result. Parameters \u00b6 Android activity valid activity used to start the system and get the callback result [Android] open fun sendUserPermissionRequest (@ NonNull activity: Activity , full_quality: Boolean ): Boolean Permits the provided activity instance to share the screen. Return \u00b6 the compatibility result. Parameters \u00b6 Android activity valid activity used to start the system and get the callback result full_quality flag indicating if the screen-share forces the maximum dimensions (in pixels) displayed by the user.","title":"Send user permission request"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/send-user-permission-request/#senduserpermissionrequest","text":"[Android] open fun sendUserPermissionRequest (@ NonNull activity: Activity ): Boolean Enables the proper permission dialog to the given Activity instance.","title":"sendUserPermissionRequest"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/send-user-permission-request/#return","text":"the compatibility result.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/send-user-permission-request/#parameters","text":"Android activity valid activity used to start the system and get the callback result [Android] open fun sendUserPermissionRequest (@ NonNull activity: Activity , full_quality: Boolean ): Boolean Permits the provided activity instance to share the screen.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/send-user-permission-request/#return_1","text":"the compatibility result.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/send-user-permission-request/#parameters_1","text":"Android activity valid activity used to start the system and get the callback result full_quality flag indicating if the screen-share forces the maximum dimensions (in pixels) displayed by the user.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/set-screen-size-information/","text":"// sdk / com.voxeet.sdk.services / ScreenShareService / setScreenSizeInformation setScreenSizeInformation \u00b6 [Android] open fun setScreenSizeInformation (@ NonNull point: Point ): ScreenShareService Changes the size of the shared screen. Return \u00b6 the current service instance. Parameters \u00b6 Android point point representing the width and height of the shared screen","title":"Set screen size information"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/set-screen-size-information/#setscreensizeinformation","text":"[Android] open fun setScreenSizeInformation (@ NonNull point: Point ): ScreenShareService Changes the size of the shared screen.","title":"setScreenSizeInformation"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/set-screen-size-information/#return","text":"the current service instance.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/set-screen-size-information/#parameters","text":"Android point point representing the width and height of the shared screen","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/start-custom-screen-share/","text":"// sdk / com.voxeet.sdk.services / ScreenShareService / startCustomScreenShare startCustomScreenShare \u00b6 [Android] @ NonNull open fun startCustomScreenShare (@ NonNull provider: VideoCapturerProvider ): Promise< Boolean > Starts sharing the screen of an external device during a conference. Return \u00b6 the promise to resolve. Parameters \u00b6 Android provider provider of VideoCapturer","title":"Start custom screen share"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/start-custom-screen-share/#startcustomscreenshare","text":"[Android] @ NonNull open fun startCustomScreenShare (@ NonNull provider: VideoCapturerProvider ): Promise< Boolean > Starts sharing the screen of an external device during a conference.","title":"startCustomScreenShare"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/start-custom-screen-share/#return","text":"the promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/start-custom-screen-share/#parameters","text":"Android provider provider of VideoCapturer","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/start-screen-share/","text":"// sdk / com.voxeet.sdk.services / ScreenShareService / startScreenShare startScreenShare \u00b6 [Android] @ NonNull open fun startScreenShare (@ NonNull intent: Intent ): Promise< Boolean > Starts sharing the screen. Return \u00b6 the promise to resolve. Parameters \u00b6 Android intent intent information obtained when the participant receives a permission to share a screen","title":"Start screen share"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/start-screen-share/#startscreenshare","text":"[Android] @ NonNull open fun startScreenShare (@ NonNull intent: Intent ): Promise< Boolean > Starts sharing the screen.","title":"startScreenShare"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/start-screen-share/#return","text":"the promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/start-screen-share/#parameters","text":"Android intent intent information obtained when the participant receives a permission to share a screen","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/stop-screen-share/","text":"// sdk / com.voxeet.sdk.services / ScreenShareService / stopScreenShare stopScreenShare \u00b6 [Android] @ NonNull open fun stopScreenShare (): Promise< Boolean > Stops sharing the screen. Return \u00b6 the promise to resolve.","title":"Stop screen share"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/stop-screen-share/#stopscreenshare","text":"[Android] @ NonNull open fun stopScreenShare (): Promise< Boolean > Stops sharing the screen.","title":"stopScreenShare"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-screen-share-service/stop-screen-share/#return","text":"the promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-sensors-service/","text":"// sdk / com.voxeet.sdk.services / SensorsService SensorsService \u00b6 [Android] open class SensorsService : AbstractVoxeetService The SensorService allows an application to get access to basic and default sensors and to manage them. In this service the application can acquire or release the system locks of the sensors through the acquireLocks and releaseLocks methods. Functions \u00b6 Name Summary release [Android] @ NonNull open fun release (): SensorsService Safely Releases the sensors. tryAcquire [Android] @ NonNull open fun tryAcquire (): SensorsService Attempt to acquire the sensors.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-sensors-service/#sensorsservice","text":"[Android] open class SensorsService : AbstractVoxeetService The SensorService allows an application to get access to basic and default sensors and to manage them. In this service the application can acquire or release the system locks of the sensors through the acquireLocks and releaseLocks methods.","title":"SensorsService"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-sensors-service/#functions","text":"Name Summary release [Android] @ NonNull open fun release (): SensorsService Safely Releases the sensors. tryAcquire [Android] @ NonNull open fun tryAcquire (): SensorsService Attempt to acquire the sensors.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-sensors-service/release/","text":"// sdk / com.voxeet.sdk.services / SensorsService / release release \u00b6 [Android] @ NonNull open fun release (): SensorsService Safely Releases the sensors.","title":"Release"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-sensors-service/release/#release","text":"[Android] @ NonNull open fun release (): SensorsService Safely Releases the sensors.","title":"release"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-sensors-service/try-acquire/","text":"// sdk / com.voxeet.sdk.services / SensorsService / tryAcquire tryAcquire \u00b6 [Android] @ NonNull open fun tryAcquire (): SensorsService Attempt to acquire the sensors. It will only acquire the sensors if a conference is in progress (or attempted to be) Return \u00b6 the current instance.","title":"Try acquire"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-sensors-service/try-acquire/#tryacquire","text":"[Android] @ NonNull open fun tryAcquire (): SensorsService Attempt to acquire the sensors. It will only acquire the sensors if a conference is in progress (or attempted to be)","title":"tryAcquire"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-sensors-service/try-acquire/#return","text":"the current instance.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-session-service/","text":"// sdk / com.voxeet.sdk.services / SessionService SessionService \u00b6 [Android] open class SessionService : AbstractVoxeetService The SessionService allows an application to register participants' information in the Voxeet service. The application needs to open a session before it can interact with the service further. The application may open and close sessions multiple times. Typical application workflow: The application opens a session using the open method. The application can check state of the WebSocket by monitoring the SocketStateChangeEvent or using the isOpen method. The application closes the session using the close method. Using the SessionService the application can also check whether the specific participant is a local participant or an external participant. Functions \u00b6 Name Summary close [Android] @ NonNull open fun close (): Promise< Boolean > Logs out from the current session. isLocalParticipant [Android] open fun isLocalParticipant (@ NonNull participant: Participant ): Boolean Checks if the specific participant is a local participant or an external participant. isOpen [Android] open fun isOpen (): Boolean Checks whether there is an open session that connects SDK with backend. open [Android] @ NonNull open fun open (): Promise< Boolean > Opens a session using information from the previously closed session. [Android] @ NonNull open fun open (@ NonNull participantInfo: ParticipantInfo ): Promise< Boolean > Opens a session using information from the ParticipantInfo model.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-session-service/#sessionservice","text":"[Android] open class SessionService : AbstractVoxeetService The SessionService allows an application to register participants' information in the Voxeet service. The application needs to open a session before it can interact with the service further. The application may open and close sessions multiple times. Typical application workflow: The application opens a session using the open method. The application can check state of the WebSocket by monitoring the SocketStateChangeEvent or using the isOpen method. The application closes the session using the close method. Using the SessionService the application can also check whether the specific participant is a local participant or an external participant.","title":"SessionService"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-session-service/#functions","text":"Name Summary close [Android] @ NonNull open fun close (): Promise< Boolean > Logs out from the current session. isLocalParticipant [Android] open fun isLocalParticipant (@ NonNull participant: Participant ): Boolean Checks if the specific participant is a local participant or an external participant. isOpen [Android] open fun isOpen (): Boolean Checks whether there is an open session that connects SDK with backend. open [Android] @ NonNull open fun open (): Promise< Boolean > Opens a session using information from the previously closed session. [Android] @ NonNull open fun open (@ NonNull participantInfo: ParticipantInfo ): Promise< Boolean > Opens a session using information from the ParticipantInfo model.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-session-service/close/","text":"// sdk / com.voxeet.sdk.services / SessionService / close close \u00b6 [Android] @ NonNull open fun close (): Promise< Boolean > Logs out from the current session. Logging out cancels all logging processes and leaves the conference. Return \u00b6 the promise to resolve.","title":"Close"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-session-service/close/#close","text":"[Android] @ NonNull open fun close (): Promise< Boolean > Logs out from the current session. Logging out cancels all logging processes and leaves the conference.","title":"close"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-session-service/close/#return","text":"the promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-session-service/is-local-participant/","text":"// sdk / com.voxeet.sdk.services / SessionService / isLocalParticipant isLocalParticipant \u00b6 [Android] open fun isLocalParticipant (@ NonNull participant: Participant ): Boolean Checks if the specific participant is a local participant or an external participant. Return \u00b6 in the case of local participants, the application receives the same Voxeet IDs. Parameters \u00b6 Android participant valid participant's ID","title":"Is local participant"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-session-service/is-local-participant/#islocalparticipant","text":"[Android] open fun isLocalParticipant (@ NonNull participant: Participant ): Boolean Checks if the specific participant is a local participant or an external participant.","title":"isLocalParticipant"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-session-service/is-local-participant/#return","text":"in the case of local participants, the application receives the same Voxeet IDs.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-session-service/is-local-participant/#parameters","text":"Android participant valid participant's ID","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-session-service/is-open/","text":"// sdk / com.voxeet.sdk.services / SessionService / isOpen isOpen \u00b6 [Android] open fun isOpen (): Boolean Checks whether there is an open session that connects SDK with backend. Return \u00b6 Information if a session is open.","title":"Is open"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-session-service/is-open/#isopen","text":"[Android] open fun isOpen (): Boolean Checks whether there is an open session that connects SDK with backend.","title":"isOpen"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-session-service/is-open/#return","text":"Information if a session is open.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-session-service/open/","text":"// sdk / com.voxeet.sdk.services / SessionService / open open \u00b6 [Android] @ NonNull open fun open (@ NonNull participantInfo: ParticipantInfo ): Promise< Boolean > Opens a session using information from the ParticipantInfo model. Return \u00b6 the promise to resolve. Parameters \u00b6 Android participantInfo ParticipantInfo which should contain at least one ParticipantName [Android] @ NonNull open fun open (): Promise< Boolean > Opens a session using information from the previously closed session. It can also create a temporary \"ghost\" session. Return \u00b6 the promise to resolve.","title":"Open"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-session-service/open/#open","text":"[Android] @ NonNull open fun open (@ NonNull participantInfo: ParticipantInfo ): Promise< Boolean > Opens a session using information from the ParticipantInfo model.","title":"open"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-session-service/open/#return","text":"the promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-session-service/open/#parameters","text":"Android participantInfo ParticipantInfo which should contain at least one ParticipantName [Android] @ NonNull open fun open (): Promise< Boolean > Opens a session using information from the previously closed session. It can also create a temporary \"ghost\" session.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-session-service/open/#return_1","text":"the promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-telemetry-service/","text":"// sdk / com.voxeet.sdk.services / TelemetryService TelemetryService \u00b6 [Android] open class TelemetryService : AbstractVoxeetService Telemetry service used by the Voxeet SDK. Provides information about the environment. Functions \u00b6 Name Summary deviceInformation [Android] open fun deviceInformation (): Promise<DeviceInformation> Gets the device information.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-telemetry-service/#telemetryservice","text":"[Android] open class TelemetryService : AbstractVoxeetService Telemetry service used by the Voxeet SDK. Provides information about the environment.","title":"TelemetryService"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-telemetry-service/#functions","text":"Name Summary deviceInformation [Android] open fun deviceInformation (): Promise<DeviceInformation> Gets the device information.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-telemetry-service/device-information/","text":"// sdk / com.voxeet.sdk.services / TelemetryService / deviceInformation deviceInformation \u00b6 [Android] open fun deviceInformation (): Promise<DeviceInformation> Gets the device information. Return \u00b6 the promise to resolve.","title":"Device information"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-telemetry-service/device-information/#deviceinformation","text":"[Android] open fun deviceInformation (): Promise<DeviceInformation> Gets the device information.","title":"deviceInformation"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-telemetry-service/device-information/#return","text":"the promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-video-presentation-service/","text":"// sdk / com.voxeet.sdk.services / VideoPresentationService VideoPresentationService \u00b6 [Android] open class VideoPresentationService : AbstractPresentationService<CONSUME_EVENT_TYPE, API_CLASS> The VideoPresentationService allows an application to share a hosted video file with conference participants and synchronously control the playback for all participants. The video file location, specified by the url parameter of the start method, needs to be accessible by all participants. We recommend using the MPEG-4 Part 14 or MP4 file formats for the hosted video file. Typical application workflow for the presenter: The application prepares the file and uploads it to the network location that is accessible by all participants through the url . The application calls the start method to supply other conference participants with the url as a parameter. This method starts sharing the video file during the conference. The application can call the pause method to pause the video and play to resume it. While sharing the video with other conference participants, the application coordinates the timestamp in the local and presented video. It uses the seek method to inform other participants about the current video position (timestamp). The application calls the stop method to end the video presentation. Typical application workflow for other participants: The application receives the VideoPresentationStarted event informing that the presenter shares the video with other conference participants and it extracts the url of the video. The application receives the VideoPresentationPaused event informing that the video is paused. When it is resumed, the application receives the VideoPresentationPlay event. If the timestamp of the video changed, the application is informed about the current video position via VideoPresentationSeek event. When the presentation is ended, the application receives the VideoPresentationStopped event. Functions \u00b6 Name Summary getCurrentPresentation [Android] @ Nullable open fun getCurrentPresentation (): VideoPresentation Provides information about a specific video presentation, such as the key holder, state, and URL. pause [Android] @ NonNull open fun pause (timestamp: Long ): Promise< VideoPresentation > Pauses a video presentation. play [Android] @ NonNull open fun play (): Promise< VideoPresentation > Resumes a video presentation. seek [Android] @ NonNull open fun seek (timestamp: Long ): Promise< VideoPresentation > Informs other conference participants about the current video position (timestamp). start [Android] @ NonNull open fun start (@ NonNull url: String ): Promise< VideoPresentation > Starts sharing a video file with other conference participants. stop [Android] @ NonNull open fun stop (): Promise< VideoPresentation > Stops sharing a video file with other conference participants.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-video-presentation-service/#videopresentationservice","text":"[Android] open class VideoPresentationService : AbstractPresentationService<CONSUME_EVENT_TYPE, API_CLASS> The VideoPresentationService allows an application to share a hosted video file with conference participants and synchronously control the playback for all participants. The video file location, specified by the url parameter of the start method, needs to be accessible by all participants. We recommend using the MPEG-4 Part 14 or MP4 file formats for the hosted video file. Typical application workflow for the presenter: The application prepares the file and uploads it to the network location that is accessible by all participants through the url . The application calls the start method to supply other conference participants with the url as a parameter. This method starts sharing the video file during the conference. The application can call the pause method to pause the video and play to resume it. While sharing the video with other conference participants, the application coordinates the timestamp in the local and presented video. It uses the seek method to inform other participants about the current video position (timestamp). The application calls the stop method to end the video presentation. Typical application workflow for other participants: The application receives the VideoPresentationStarted event informing that the presenter shares the video with other conference participants and it extracts the url of the video. The application receives the VideoPresentationPaused event informing that the video is paused. When it is resumed, the application receives the VideoPresentationPlay event. If the timestamp of the video changed, the application is informed about the current video position via VideoPresentationSeek event. When the presentation is ended, the application receives the VideoPresentationStopped event.","title":"VideoPresentationService"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-video-presentation-service/#functions","text":"Name Summary getCurrentPresentation [Android] @ Nullable open fun getCurrentPresentation (): VideoPresentation Provides information about a specific video presentation, such as the key holder, state, and URL. pause [Android] @ NonNull open fun pause (timestamp: Long ): Promise< VideoPresentation > Pauses a video presentation. play [Android] @ NonNull open fun play (): Promise< VideoPresentation > Resumes a video presentation. seek [Android] @ NonNull open fun seek (timestamp: Long ): Promise< VideoPresentation > Informs other conference participants about the current video position (timestamp). start [Android] @ NonNull open fun start (@ NonNull url: String ): Promise< VideoPresentation > Starts sharing a video file with other conference participants. stop [Android] @ NonNull open fun stop (): Promise< VideoPresentation > Stops sharing a video file with other conference participants.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-video-presentation-service/get-current-presentation/","text":"// sdk / com.voxeet.sdk.services / VideoPresentationService / getCurrentPresentation getCurrentPresentation \u00b6 [Android] @ Nullable open fun getCurrentPresentation (): VideoPresentation Provides information about a specific video presentation, such as the key holder, state, and URL. Return \u00b6 the clone of the key holder, URL, and the state. A null value indicates that a specified video presentation does not exist at the moment.","title":"Get current presentation"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-video-presentation-service/get-current-presentation/#getcurrentpresentation","text":"[Android] @ Nullable open fun getCurrentPresentation (): VideoPresentation Provides information about a specific video presentation, such as the key holder, state, and URL.","title":"getCurrentPresentation"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-video-presentation-service/get-current-presentation/#return","text":"the clone of the key holder, URL, and the state. A null value indicates that a specified video presentation does not exist at the moment.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-video-presentation-service/pause/","text":"// sdk / com.voxeet.sdk.services / VideoPresentationService / pause pause \u00b6 [Android] @ NonNull open fun pause (timestamp: Long ): Promise< VideoPresentation > Pauses a video presentation. Return \u00b6 the promise to resolve. Parameters \u00b6 Android timestamp the timestamp of the paused video","title":"Pause"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-video-presentation-service/pause/#pause","text":"[Android] @ NonNull open fun pause (timestamp: Long ): Promise< VideoPresentation > Pauses a video presentation.","title":"pause"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-video-presentation-service/pause/#return","text":"the promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-video-presentation-service/pause/#parameters","text":"Android timestamp the timestamp of the paused video","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-video-presentation-service/play/","text":"// sdk / com.voxeet.sdk.services / VideoPresentationService / play play \u00b6 [Android] @ NonNull open fun play (): Promise< VideoPresentation > Resumes a video presentation. Return \u00b6 the promise to resolve.","title":"Play"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-video-presentation-service/play/#play","text":"[Android] @ NonNull open fun play (): Promise< VideoPresentation > Resumes a video presentation.","title":"play"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-video-presentation-service/play/#return","text":"the promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-video-presentation-service/seek/","text":"// sdk / com.voxeet.sdk.services / VideoPresentationService / seek seek \u00b6 [Android] @ NonNull open fun seek (timestamp: Long ): Promise< VideoPresentation > Informs other conference participants about the current video position (timestamp). Return \u00b6 the promise to resolve. Parameters \u00b6 Android timestamp the new timestamp","title":"Seek"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-video-presentation-service/seek/#seek","text":"[Android] @ NonNull open fun seek (timestamp: Long ): Promise< VideoPresentation > Informs other conference participants about the current video position (timestamp).","title":"seek"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-video-presentation-service/seek/#return","text":"the promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-video-presentation-service/seek/#parameters","text":"Android timestamp the new timestamp","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-video-presentation-service/start/","text":"// sdk / com.voxeet.sdk.services / VideoPresentationService / start start \u00b6 [Android] @ NonNull open fun start (@ NonNull url: String ): Promise< VideoPresentation > Starts sharing a video file with other conference participants. Return \u00b6 the promise to resolve. Parameters \u00b6 Android url location of a video file","title":"Start"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-video-presentation-service/start/#start","text":"[Android] @ NonNull open fun start (@ NonNull url: String ): Promise< VideoPresentation > Starts sharing a video file with other conference participants.","title":"start"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-video-presentation-service/start/#return","text":"the promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-video-presentation-service/start/#parameters","text":"Android url location of a video file","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-video-presentation-service/stop/","text":"// sdk / com.voxeet.sdk.services / VideoPresentationService / stop stop \u00b6 [Android] @ NonNull open fun stop (): Promise< VideoPresentation > Stops sharing a video file with other conference participants. Return \u00b6 the promise to resolve.","title":"Stop"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-video-presentation-service/stop/#stop","text":"[Android] @ NonNull open fun stop (): Promise< VideoPresentation > Stops sharing a video file with other conference participants.","title":"stop"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-video-presentation-service/stop/#return","text":"the promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-video-service/","text":"// sdk / com.voxeet.sdk.services / VideoService VideoService \u00b6 [Android] open class VideoService : AbstractVoxeetService The VideoService allows enabling and disabling video for the local and remote participants. This service is supported only in SDK 3.7 and later. Properties \u00b6 Name Summary local [Android] @ NonNull @get: NonNull val local : LocalVideo remote [Android] @ NonNull @get: NonNull val remote : RemoteVideo","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-video-service/#videoservice","text":"[Android] open class VideoService : AbstractVoxeetService The VideoService allows enabling and disabling video for the local and remote participants. This service is supported only in SDK 3.7 and later.","title":"VideoService"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-video-service/#properties","text":"Name Summary local [Android] @ NonNull @get: NonNull val local : LocalVideo remote [Android] @ NonNull @get: NonNull val remote : RemoteVideo","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-video-service/local/","text":"// sdk / com.voxeet.sdk.services / VideoService / local local \u00b6 [Android] @ NonNull @get: NonNull val local : LocalVideo","title":"Local"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-video-service/local/#local","text":"[Android] @ NonNull @get: NonNull val local : LocalVideo","title":"local"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-video-service/remote/","text":"// sdk / com.voxeet.sdk.services / VideoService / remote remote \u00b6 [Android] @ NonNull @get: NonNull val remote : RemoteVideo","title":"Remote"},{"location":"android-reference/sdk/com.voxeet.sdk.services/-video-service/remote/#remote","text":"[Android] @ NonNull @get: NonNull val remote : RemoteVideo","title":"remote"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/","text":"// sdk / com.voxeet.sdk.services.audio Package-level declarations \u00b6 Types \u00b6 Name Summary LocalAudio [Android] interface LocalAudio The LocalAudio model allows managing the local participant's audio settings. RemoteAudio [Android] interface RemoteAudio The RemoteAudio model allows the local participant to locally mute and unmute remote participants.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/#types","text":"Name Summary LocalAudio [Android] interface LocalAudio The LocalAudio model allows managing the local participant's audio settings. RemoteAudio [Android] interface RemoteAudio The RemoteAudio model allows the local participant to locally mute and unmute remote participants.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/","text":"// sdk / com.voxeet.sdk.services.audio / LocalAudio LocalAudio \u00b6 [Android] interface LocalAudio The LocalAudio model allows managing the local participant's audio settings. This model is supported only in SDK 3.7 and later. Functions \u00b6 Name Summary connect [Android] @ NonNull abstract fun connect (@ NonNull device: MediaDevice): Promise< Boolean > Connects a specific device to the SDK. connectInitialMediaDevice [Android] abstract fun connectInitialMediaDevice () Connects initial media device. currentMediaDevice [Android] @ NonNull abstract fun currentMediaDevice (): Promise<MediaDevice> Gets a media device that is currently connected. disconnect [Android] @ NonNull abstract fun disconnect (@ NonNull device: MediaDevice): Promise< Boolean > Disconnect a specific device from the SDK. enumerateDevices [Android] @ NonNull abstract fun enumerateDevices (): Promise< List <MediaDevice>> Enumerates all connected audio devices that are available for the local participant. getCaptureMode [Android] @ NonNull abstract fun getCaptureMode (): AudioCaptureMode Gets the local participant's audio capture mode in Dolby Voice conferences. getComfortNoiseLevel [Android] @ NonNull abstract fun getComfortNoiseLevel (): ComfortNoiseLevel Retrieves the comfort noise level setting for output devices in Dolby Voice conferences. getSoundManager [Android] @ NonNull abstract fun getSoundManager (): SoundManager Gets the SoundManager instance. isDefaultSpeakerMode [Android] abstract fun isDefaultSpeakerMode (): Boolean Checks if the default mode when entering the conference will be using the external speaker. isIncompatible [Android] abstract fun isIncompatible (@ NonNull device: MediaDevice): Boolean Searches for devices that are registered but not compatible (for example smart watches). registerLocalInputAudioCallback [Android] abstract fun registerLocalInputAudioCallback (callback: LocalInputAudioCallback ): Boolean Registers a callback that allows getting the local audio input. registerUpdateDevices [Android] abstract fun registerUpdateDevices (callback: SoundManager.Call< List <MediaDevice>>): Boolean Registers external listeners to update the MediaDevice platform. setCaptureMode [Android] abstract fun setCaptureMode (@ NonNull audioCaptureMode: AudioCaptureMode ) Sets the local participant's audio capture mode in Dolby Voice conferences. setComfortNoiseLevel [Android] abstract fun setComfortNoiseLevel (@ NonNull level: ComfortNoiseLevel ) Configures the comfort noise level for output devices in Dolby Voice conferences. setDefaultSpeakerMode [Android] abstract fun setDefaultSpeakerMode (isSpeaker: Boolean ) Sets the default speaker mode. setLocalInputAudioProcessor [Android] abstract fun setLocalInputAudioProcessor (@ Nullable callback: LocalInputAudioProcessor ) Allows setting the processor responsible for pre-processing the local audio stream before sending the stream through an open session. start [Android] @ NonNull abstract fun start (): Promise< Boolean > Starts sending the local participant\u2019s audio streams from the local client to the conference. stop [Android] @ NonNull abstract fun stop (): Promise< Boolean > Stops sending local participant\u2019s audio from the local client to the conference. unregisterLocalInputAudioCallback [Android] abstract fun unregisterLocalInputAudioCallback (callback: LocalInputAudioCallback ): Boolean Unregisters a callback that allows getting the local audio input. unregisterUpdateDevices [Android] abstract fun unregisterUpdateDevices (callback: SoundManager.Call< List <MediaDevice>>) Unregisters external listeners to update the MediaDevice platform.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/#localaudio","text":"[Android] interface LocalAudio The LocalAudio model allows managing the local participant's audio settings. This model is supported only in SDK 3.7 and later.","title":"LocalAudio"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/#functions","text":"Name Summary connect [Android] @ NonNull abstract fun connect (@ NonNull device: MediaDevice): Promise< Boolean > Connects a specific device to the SDK. connectInitialMediaDevice [Android] abstract fun connectInitialMediaDevice () Connects initial media device. currentMediaDevice [Android] @ NonNull abstract fun currentMediaDevice (): Promise<MediaDevice> Gets a media device that is currently connected. disconnect [Android] @ NonNull abstract fun disconnect (@ NonNull device: MediaDevice): Promise< Boolean > Disconnect a specific device from the SDK. enumerateDevices [Android] @ NonNull abstract fun enumerateDevices (): Promise< List <MediaDevice>> Enumerates all connected audio devices that are available for the local participant. getCaptureMode [Android] @ NonNull abstract fun getCaptureMode (): AudioCaptureMode Gets the local participant's audio capture mode in Dolby Voice conferences. getComfortNoiseLevel [Android] @ NonNull abstract fun getComfortNoiseLevel (): ComfortNoiseLevel Retrieves the comfort noise level setting for output devices in Dolby Voice conferences. getSoundManager [Android] @ NonNull abstract fun getSoundManager (): SoundManager Gets the SoundManager instance. isDefaultSpeakerMode [Android] abstract fun isDefaultSpeakerMode (): Boolean Checks if the default mode when entering the conference will be using the external speaker. isIncompatible [Android] abstract fun isIncompatible (@ NonNull device: MediaDevice): Boolean Searches for devices that are registered but not compatible (for example smart watches). registerLocalInputAudioCallback [Android] abstract fun registerLocalInputAudioCallback (callback: LocalInputAudioCallback ): Boolean Registers a callback that allows getting the local audio input. registerUpdateDevices [Android] abstract fun registerUpdateDevices (callback: SoundManager.Call< List <MediaDevice>>): Boolean Registers external listeners to update the MediaDevice platform. setCaptureMode [Android] abstract fun setCaptureMode (@ NonNull audioCaptureMode: AudioCaptureMode ) Sets the local participant's audio capture mode in Dolby Voice conferences. setComfortNoiseLevel [Android] abstract fun setComfortNoiseLevel (@ NonNull level: ComfortNoiseLevel ) Configures the comfort noise level for output devices in Dolby Voice conferences. setDefaultSpeakerMode [Android] abstract fun setDefaultSpeakerMode (isSpeaker: Boolean ) Sets the default speaker mode. setLocalInputAudioProcessor [Android] abstract fun setLocalInputAudioProcessor (@ Nullable callback: LocalInputAudioProcessor ) Allows setting the processor responsible for pre-processing the local audio stream before sending the stream through an open session. start [Android] @ NonNull abstract fun start (): Promise< Boolean > Starts sending the local participant\u2019s audio streams from the local client to the conference. stop [Android] @ NonNull abstract fun stop (): Promise< Boolean > Stops sending local participant\u2019s audio from the local client to the conference. unregisterLocalInputAudioCallback [Android] abstract fun unregisterLocalInputAudioCallback (callback: LocalInputAudioCallback ): Boolean Unregisters a callback that allows getting the local audio input. unregisterUpdateDevices [Android] abstract fun unregisterUpdateDevices (callback: SoundManager.Call< List <MediaDevice>>) Unregisters external listeners to update the MediaDevice platform.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/connect-initial-media-device/","text":"// sdk / com.voxeet.sdk.services.audio / LocalAudio / connectInitialMediaDevice connectInitialMediaDevice \u00b6 [Android] abstract fun connectInitialMediaDevice () Connects initial media device.","title":"Connect initial media device"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/connect-initial-media-device/#connectinitialmediadevice","text":"[Android] abstract fun connectInitialMediaDevice () Connects initial media device.","title":"connectInitialMediaDevice"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/connect/","text":"// sdk / com.voxeet.sdk.services.audio / LocalAudio / connect connect \u00b6 [Android] @ NonNull abstract fun connect (@ NonNull device: MediaDevice): Promise< Boolean > Connects a specific device to the SDK. Return \u00b6 The promise to resolve. Parameters \u00b6 Android device The device to connect.","title":"Connect"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/connect/#connect","text":"[Android] @ NonNull abstract fun connect (@ NonNull device: MediaDevice): Promise< Boolean > Connects a specific device to the SDK.","title":"connect"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/connect/#return","text":"The promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/connect/#parameters","text":"Android device The device to connect.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/current-media-device/","text":"// sdk / com.voxeet.sdk.services.audio / LocalAudio / currentMediaDevice currentMediaDevice \u00b6 [Android] @ NonNull abstract fun currentMediaDevice (): Promise<MediaDevice> Gets a media device that is currently connected. Return \u00b6 The promise to resolve.","title":"Current media device"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/current-media-device/#currentmediadevice","text":"[Android] @ NonNull abstract fun currentMediaDevice (): Promise<MediaDevice> Gets a media device that is currently connected.","title":"currentMediaDevice"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/current-media-device/#return","text":"The promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/disconnect/","text":"// sdk / com.voxeet.sdk.services.audio / LocalAudio / disconnect disconnect \u00b6 [Android] @ NonNull abstract fun disconnect (@ NonNull device: MediaDevice): Promise< Boolean > Disconnect a specific device from the SDK. Return \u00b6 The promise to resolve. Parameters \u00b6 Android device The device to disconnect.","title":"Disconnect"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/disconnect/#disconnect","text":"[Android] @ NonNull abstract fun disconnect (@ NonNull device: MediaDevice): Promise< Boolean > Disconnect a specific device from the SDK.","title":"disconnect"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/disconnect/#return","text":"The promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/disconnect/#parameters","text":"Android device The device to disconnect.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/enumerate-devices/","text":"// sdk / com.voxeet.sdk.services.audio / LocalAudio / enumerateDevices enumerateDevices \u00b6 [Android] @ NonNull abstract fun enumerateDevices (): Promise< List <MediaDevice>> Enumerates all connected audio devices that are available for the local participant. Return \u00b6 The promise to resolve.","title":"Enumerate devices"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/enumerate-devices/#enumeratedevices","text":"[Android] @ NonNull abstract fun enumerateDevices (): Promise< List <MediaDevice>> Enumerates all connected audio devices that are available for the local participant.","title":"enumerateDevices"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/enumerate-devices/#return","text":"The promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/get-capture-mode/","text":"// sdk / com.voxeet.sdk.services.audio / LocalAudio / getCaptureMode getCaptureMode \u00b6 [Android] @ NonNull abstract fun getCaptureMode (): AudioCaptureMode Gets the local participant's audio capture mode in Dolby Voice conferences.","title":"Get capture mode"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/get-capture-mode/#getcapturemode","text":"[Android] @ NonNull abstract fun getCaptureMode (): AudioCaptureMode Gets the local participant's audio capture mode in Dolby Voice conferences.","title":"getCaptureMode"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/get-comfort-noise-level/","text":"// sdk / com.voxeet.sdk.services.audio / LocalAudio / getComfortNoiseLevel getComfortNoiseLevel \u00b6 [Android] @ NonNull abstract fun getComfortNoiseLevel (): ComfortNoiseLevel Retrieves the comfort noise level setting for output devices in Dolby Voice conferences. Return \u00b6 The comfort noise level.","title":"Get comfort noise level"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/get-comfort-noise-level/#getcomfortnoiselevel","text":"[Android] @ NonNull abstract fun getComfortNoiseLevel (): ComfortNoiseLevel Retrieves the comfort noise level setting for output devices in Dolby Voice conferences.","title":"getComfortNoiseLevel"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/get-comfort-noise-level/#return","text":"The comfort noise level.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/get-sound-manager/","text":"// sdk / com.voxeet.sdk.services.audio / LocalAudio / getSoundManager getSoundManager \u00b6 [Android] @ NonNull abstract fun getSoundManager (): SoundManager Gets the SoundManager instance.","title":"Get sound manager"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/get-sound-manager/#getsoundmanager","text":"[Android] @ NonNull abstract fun getSoundManager (): SoundManager Gets the SoundManager instance.","title":"getSoundManager"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/is-default-speaker-mode/","text":"// sdk / com.voxeet.sdk.services.audio / LocalAudio / isDefaultSpeakerMode isDefaultSpeakerMode \u00b6 [Android] abstract fun isDefaultSpeakerMode (): Boolean Checks if the default mode when entering the conference will be using the external speaker. Return \u00b6 gives the expected audio device used in case of internal / external speaker only","title":"Is default speaker mode"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/is-default-speaker-mode/#isdefaultspeakermode","text":"[Android] abstract fun isDefaultSpeakerMode (): Boolean Checks if the default mode when entering the conference will be using the external speaker.","title":"isDefaultSpeakerMode"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/is-default-speaker-mode/#return","text":"gives the expected audio device used in case of internal / external speaker only","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/is-incompatible/","text":"// sdk / com.voxeet.sdk.services.audio / LocalAudio / isIncompatible isIncompatible \u00b6 [Android] abstract fun isIncompatible (@ NonNull device: MediaDevice): Boolean Searches for devices that are registered but not compatible (for example smart watches). Return \u00b6 Information whether the device is compatible. Parameters \u00b6 Android device The selected device.","title":"Is incompatible"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/is-incompatible/#isincompatible","text":"[Android] abstract fun isIncompatible (@ NonNull device: MediaDevice): Boolean Searches for devices that are registered but not compatible (for example smart watches).","title":"isIncompatible"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/is-incompatible/#return","text":"Information whether the device is compatible.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/is-incompatible/#parameters","text":"Android device The selected device.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/register-local-input-audio-callback/","text":"// sdk / com.voxeet.sdk.services.audio / LocalAudio / registerLocalInputAudioCallback registerLocalInputAudioCallback \u00b6 [Android] abstract fun registerLocalInputAudioCallback (callback: LocalInputAudioCallback ): Boolean Registers a callback that allows getting the local audio input. Return \u00b6 the flag telling it the registration could go through. Parameters \u00b6 Android callback The callback to register.","title":"Register local input audio callback"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/register-local-input-audio-callback/#registerlocalinputaudiocallback","text":"[Android] abstract fun registerLocalInputAudioCallback (callback: LocalInputAudioCallback ): Boolean Registers a callback that allows getting the local audio input.","title":"registerLocalInputAudioCallback"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/register-local-input-audio-callback/#return","text":"the flag telling it the registration could go through.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/register-local-input-audio-callback/#parameters","text":"Android callback The callback to register.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/register-update-devices/","text":"// sdk / com.voxeet.sdk.services.audio / LocalAudio / registerUpdateDevices registerUpdateDevices \u00b6 [Android] abstract fun registerUpdateDevices (callback: SoundManager.Call< List <MediaDevice>>): Boolean Registers external listeners to update the MediaDevice platform. Return \u00b6 Information whether the registered call is successful. Parameters \u00b6 Android callback The callback to register.","title":"Register update devices"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/register-update-devices/#registerupdatedevices","text":"[Android] abstract fun registerUpdateDevices (callback: SoundManager.Call< List <MediaDevice>>): Boolean Registers external listeners to update the MediaDevice platform.","title":"registerUpdateDevices"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/register-update-devices/#return","text":"Information whether the registered call is successful.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/register-update-devices/#parameters","text":"Android callback The callback to register.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/set-capture-mode/","text":"// sdk / com.voxeet.sdk.services.audio / LocalAudio / setCaptureMode setCaptureMode \u00b6 [Android] abstract fun setCaptureMode (@ NonNull audioCaptureMode: AudioCaptureMode ) Sets the local participant's audio capture mode in Dolby Voice conferences.","title":"Set capture mode"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/set-capture-mode/#setcapturemode","text":"[Android] abstract fun setCaptureMode (@ NonNull audioCaptureMode: AudioCaptureMode ) Sets the local participant's audio capture mode in Dolby Voice conferences.","title":"setCaptureMode"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/set-comfort-noise-level/","text":"// sdk / com.voxeet.sdk.services.audio / LocalAudio / setComfortNoiseLevel setComfortNoiseLevel \u00b6 [Android] abstract fun setComfortNoiseLevel (@ NonNull level: ComfortNoiseLevel ) Configures the comfort noise level for output devices in Dolby Voice conferences. Parameters \u00b6 Android level The selected comfort noise level.","title":"Set comfort noise level"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/set-comfort-noise-level/#setcomfortnoiselevel","text":"[Android] abstract fun setComfortNoiseLevel (@ NonNull level: ComfortNoiseLevel ) Configures the comfort noise level for output devices in Dolby Voice conferences.","title":"setComfortNoiseLevel"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/set-comfort-noise-level/#parameters","text":"Android level The selected comfort noise level.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/set-default-speaker-mode/","text":"// sdk / com.voxeet.sdk.services.audio / LocalAudio / setDefaultSpeakerMode setDefaultSpeakerMode \u00b6 [Android] abstract fun setDefaultSpeakerMode (isSpeaker: Boolean ) Sets the default speaker mode. Parameters \u00b6 Android isSpeaker The default value of the speaker mode.","title":"Set default speaker mode"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/set-default-speaker-mode/#setdefaultspeakermode","text":"[Android] abstract fun setDefaultSpeakerMode (isSpeaker: Boolean ) Sets the default speaker mode.","title":"setDefaultSpeakerMode"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/set-default-speaker-mode/#parameters","text":"Android isSpeaker The default value of the speaker mode.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/set-local-input-audio-processor/","text":"// sdk / com.voxeet.sdk.services.audio / LocalAudio / setLocalInputAudioProcessor setLocalInputAudioProcessor \u00b6 [Android] abstract fun setLocalInputAudioProcessor (@ Nullable callback: LocalInputAudioProcessor ) Allows setting the processor responsible for pre-processing the local audio stream before sending the stream through an open session. You may use it to, for example, implement your own voice effects or build speech recognition and remove or bleep out curse words from the sent audio. Parameters \u00b6 Android callback The callback to register.","title":"Set local input audio processor"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/set-local-input-audio-processor/#setlocalinputaudioprocessor","text":"[Android] abstract fun setLocalInputAudioProcessor (@ Nullable callback: LocalInputAudioProcessor ) Allows setting the processor responsible for pre-processing the local audio stream before sending the stream through an open session. You may use it to, for example, implement your own voice effects or build speech recognition and remove or bleep out curse words from the sent audio.","title":"setLocalInputAudioProcessor"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/set-local-input-audio-processor/#parameters","text":"Android callback The callback to register.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/start/","text":"// sdk / com.voxeet.sdk.services.audio / LocalAudio / start start \u00b6 [Android] @ NonNull abstract fun start (): Promise< Boolean > Starts sending the local participant\u2019s audio streams from the local client to the conference. This method is not available for listeners in Dolby Voice conferences. The method requires up to a few seconds to become effective.","title":"Start"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/start/#start","text":"[Android] @ NonNull abstract fun start (): Promise< Boolean > Starts sending the local participant\u2019s audio streams from the local client to the conference. This method is not available for listeners in Dolby Voice conferences. The method requires up to a few seconds to become effective.","title":"start"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/stop/","text":"// sdk / com.voxeet.sdk.services.audio / LocalAudio / stop stop \u00b6 [Android] @ NonNull abstract fun stop (): Promise< Boolean > Stops sending local participant\u2019s audio from the local client to the conference. This method is not available for listeners in Dolby Voice conferences. The method requires up to a few seconds to become effective.","title":"Stop"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/stop/#stop","text":"[Android] @ NonNull abstract fun stop (): Promise< Boolean > Stops sending local participant\u2019s audio from the local client to the conference. This method is not available for listeners in Dolby Voice conferences. The method requires up to a few seconds to become effective.","title":"stop"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/unregister-local-input-audio-callback/","text":"// sdk / com.voxeet.sdk.services.audio / LocalAudio / unregisterLocalInputAudioCallback unregisterLocalInputAudioCallback \u00b6 [Android] abstract fun unregisterLocalInputAudioCallback (callback: LocalInputAudioCallback ): Boolean Unregisters a callback that allows getting the local audio input. Return \u00b6 the flag telling it the callback removal could go through. Parameters \u00b6 Android callback The callback to unregister.","title":"Unregister local input audio callback"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/unregister-local-input-audio-callback/#unregisterlocalinputaudiocallback","text":"[Android] abstract fun unregisterLocalInputAudioCallback (callback: LocalInputAudioCallback ): Boolean Unregisters a callback that allows getting the local audio input.","title":"unregisterLocalInputAudioCallback"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/unregister-local-input-audio-callback/#return","text":"the flag telling it the callback removal could go through.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/unregister-local-input-audio-callback/#parameters","text":"Android callback The callback to unregister.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/unregister-update-devices/","text":"// sdk / com.voxeet.sdk.services.audio / LocalAudio / unregisterUpdateDevices unregisterUpdateDevices \u00b6 [Android] abstract fun unregisterUpdateDevices (callback: SoundManager.Call< List <MediaDevice>>) Unregisters external listeners to update the MediaDevice platform. Parameters \u00b6 Android callback The callback to unregister.","title":"Unregister update devices"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/unregister-update-devices/#unregisterupdatedevices","text":"[Android] abstract fun unregisterUpdateDevices (callback: SoundManager.Call< List <MediaDevice>>) Unregisters external listeners to update the MediaDevice platform.","title":"unregisterUpdateDevices"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-local-audio/unregister-update-devices/#parameters","text":"Android callback The callback to unregister.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-remote-audio/","text":"// sdk / com.voxeet.sdk.services.audio / RemoteAudio RemoteAudio \u00b6 [Android] interface RemoteAudio The RemoteAudio model allows the local participant to locally mute and unmute remote participants. This model is supported only in SDK 3.7 and later. Functions \u00b6 Name Summary start [Android] @ NonNull abstract fun start (@ NonNull participant: Participant ): Promise< Boolean > Allows the local participant to unmute a specific remote participant who is locally muted through the stop method. stop [Android] @ NonNull abstract fun stop (@ NonNull participant: Participant ): Promise< Boolean > Allows the local participant to locally mute specific remote participants.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-remote-audio/#remoteaudio","text":"[Android] interface RemoteAudio The RemoteAudio model allows the local participant to locally mute and unmute remote participants. This model is supported only in SDK 3.7 and later.","title":"RemoteAudio"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-remote-audio/#functions","text":"Name Summary start [Android] @ NonNull abstract fun start (@ NonNull participant: Participant ): Promise< Boolean > Allows the local participant to unmute a specific remote participant who is locally muted through the stop method. stop [Android] @ NonNull abstract fun stop (@ NonNull participant: Participant ): Promise< Boolean > Allows the local participant to locally mute specific remote participants.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-remote-audio/start/","text":"// sdk / com.voxeet.sdk.services.audio / RemoteAudio / start start \u00b6 [Android] @ NonNull abstract fun start (@ NonNull participant: Participant ): Promise< Boolean > Allows the local participant to unmute a specific remote participant who is locally muted through the stop method. The start method does not impact audio transmission between remote participants and a conference and does not allow the local participant to force sending remote participants\u2019 streams to the conference or to the local participant. This method is not available for listeners in Dolby Voice conferences. The start method requires up to a few seconds to become effective. Parameters \u00b6 Android participant The selected remote participant who is locally muted through the stop method.","title":"Start"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-remote-audio/start/#start","text":"[Android] @ NonNull abstract fun start (@ NonNull participant: Participant ): Promise< Boolean > Allows the local participant to unmute a specific remote participant who is locally muted through the stop method. The start method does not impact audio transmission between remote participants and a conference and does not allow the local participant to force sending remote participants\u2019 streams to the conference or to the local participant. This method is not available for listeners in Dolby Voice conferences. The start method requires up to a few seconds to become effective.","title":"start"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-remote-audio/start/#parameters","text":"Android participant The selected remote participant who is locally muted through the stop method.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-remote-audio/stop/","text":"// sdk / com.voxeet.sdk.services.audio / RemoteAudio / stop stop \u00b6 [Android] @ NonNull abstract fun stop (@ NonNull participant: Participant ): Promise< Boolean > Allows the local participant to locally mute specific remote participants. This method does not impact audio transmission between remote participants and a conference and does not allow the local participant to stop sending remote participants\u2019 streams to the conference. This method is not available for listeners in Dolby Voice conferences. The stop method requires up to a few seconds to become effective. Parameters \u00b6 Android participant The selected remote participant who should be locally muted.","title":"Stop"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-remote-audio/stop/#stop","text":"[Android] @ NonNull abstract fun stop (@ NonNull participant: Participant ): Promise< Boolean > Allows the local participant to locally mute specific remote participants. This method does not impact audio transmission between remote participants and a conference and does not allow the local participant to stop sending remote participants\u2019 streams to the conference. This method is not available for listeners in Dolby Voice conferences. The stop method requires up to a few seconds to become effective.","title":"stop"},{"location":"android-reference/sdk/com.voxeet.sdk.services.audio/-remote-audio/stop/#parameters","text":"Android participant The selected remote participant who should be locally muted.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/","text":"// sdk / com.voxeet.sdk.services.builders Package-level declarations \u00b6 Types \u00b6 Name Summary ConferenceCreateOptions [Android] open class ConferenceCreateOptions The ConferenceCreateOptions model gathers information about a conference to create, such as the conference alias and parameters. ConferenceJoinOptions [Android] open class ConferenceJoinOptions The ConferenceJoinOptions model defines how the application expects to join a conference. ConferenceListenOptions [Android] open class ConferenceListenOptions The ConferenceListenOptions model defines how the application expects to join a conference using the listen method. VideoForwardingOptions [Android] open class VideoForwardingOptions The VideoForwardingOptions model allows configuring the Video Forwarding functionality that allows: - Setting the maximum number of video streams that may be transmitted to the local participant - Prioritizing specific participants' video streams that need to be transmitted to the local participant - Changing the video forwarding strategy that defines how the SDK should select conference participants whose videos will be received by the local participant","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/#types","text":"Name Summary ConferenceCreateOptions [Android] open class ConferenceCreateOptions The ConferenceCreateOptions model gathers information about a conference to create, such as the conference alias and parameters. ConferenceJoinOptions [Android] open class ConferenceJoinOptions The ConferenceJoinOptions model defines how the application expects to join a conference. ConferenceListenOptions [Android] open class ConferenceListenOptions The ConferenceListenOptions model defines how the application expects to join a conference using the listen method. VideoForwardingOptions [Android] open class VideoForwardingOptions The VideoForwardingOptions model allows configuring the Video Forwarding functionality that allows: - Setting the maximum number of video streams that may be transmitted to the local participant - Prioritizing specific participants' video streams that need to be transmitted to the local participant - Changing the video forwarding strategy that defines how the SDK should select conference participants whose videos will be received by the local participant","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-create-options/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceCreateOptions ConferenceCreateOptions \u00b6 [Android] open class ConferenceCreateOptions The ConferenceCreateOptions model gathers information about a conference to create, such as the conference alias and parameters. Types \u00b6 Name Summary Builder [Android] open class Builder The ConferenceCreateOptions. Properties \u00b6 Name Summary conferenceAlias [Android] @get: Nullable open val conferenceAlias : String metadataHolder [Android] open val metadataHolder : MetadataHolder paramsHolder [Android] @get: Nullable open val paramsHolder : ParamsHolder","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-create-options/#conferencecreateoptions","text":"[Android] open class ConferenceCreateOptions The ConferenceCreateOptions model gathers information about a conference to create, such as the conference alias and parameters.","title":"ConferenceCreateOptions"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-create-options/#types","text":"Name Summary Builder [Android] open class Builder The ConferenceCreateOptions.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-create-options/#properties","text":"Name Summary conferenceAlias [Android] @get: Nullable open val conferenceAlias : String metadataHolder [Android] open val metadataHolder : MetadataHolder paramsHolder [Android] @get: Nullable open val paramsHolder : ParamsHolder","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-create-options/conference-alias/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceCreateOptions / conferenceAlias conferenceAlias \u00b6 [Android] @get: Nullable open val conferenceAlias : String","title":"Conference alias"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-create-options/conference-alias/#conferencealias","text":"[Android] @get: Nullable open val conferenceAlias : String","title":"conferenceAlias"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-create-options/metadata-holder/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceCreateOptions / metadataHolder metadataHolder \u00b6 [Android] open val metadataHolder : MetadataHolder","title":"Metadata holder"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-create-options/metadata-holder/#metadataholder","text":"[Android] open val metadataHolder : MetadataHolder","title":"metadataHolder"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-create-options/params-holder/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceCreateOptions / paramsHolder paramsHolder \u00b6 [Android] @get: Nullable open val paramsHolder : ParamsHolder","title":"Params holder"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-create-options/params-holder/#paramsholder","text":"[Android] @get: Nullable open val paramsHolder : ParamsHolder","title":"paramsHolder"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-create-options/-builder/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceCreateOptions / Builder Builder \u00b6 [Android] open class Builder The ConferenceCreateOptions.Builder model allows the application to: Create a new builder . Create the ConferenceCreateOptions instance . Set the conference alias and parameters . Create Dolby Voice conferences. Constructors \u00b6 Builder [Android] open fun Builder () Creates a new builder. Functions \u00b6 Name Summary addParam [Android] open fun addParam (@ NonNull key: String , @ Nullable value: Any ): ConferenceCreateOptions.Builder Adds a parameter value to the builder. build [Android] @ NonNull open fun build (): ConferenceCreateOptions Constructs the ConferenceCreateOptions instance for creating conferences. setConferenceAlias [Android] open fun setConferenceAlias (@ Nullable conferenceAlias: String ): ConferenceCreateOptions.Builder Sets the conference alias. setParamsHolder [Android] open fun setParamsHolder (@ Nullable paramsHolder: ParamsHolder ): ConferenceCreateOptions.Builder Adds parameters to the conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-create-options/-builder/#builder","text":"[Android] open class Builder The ConferenceCreateOptions.Builder model allows the application to: Create a new builder . Create the ConferenceCreateOptions instance . Set the conference alias and parameters . Create Dolby Voice conferences.","title":"Builder"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-create-options/-builder/#constructors","text":"Builder [Android] open fun Builder () Creates a new builder.","title":"Constructors"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-create-options/-builder/#functions","text":"Name Summary addParam [Android] open fun addParam (@ NonNull key: String , @ Nullable value: Any ): ConferenceCreateOptions.Builder Adds a parameter value to the builder. build [Android] @ NonNull open fun build (): ConferenceCreateOptions Constructs the ConferenceCreateOptions instance for creating conferences. setConferenceAlias [Android] open fun setConferenceAlias (@ Nullable conferenceAlias: String ): ConferenceCreateOptions.Builder Sets the conference alias. setParamsHolder [Android] open fun setParamsHolder (@ Nullable paramsHolder: ParamsHolder ): ConferenceCreateOptions.Builder Adds parameters to the conference.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-create-options/-builder/-builder/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceCreateOptions / Builder / Builder Builder \u00b6 [Android] open fun Builder () Creates a new builder.","title":" builder"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-create-options/-builder/-builder/#builder","text":"[Android] open fun Builder () Creates a new builder.","title":"Builder"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-create-options/-builder/add-param/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceCreateOptions / Builder / addParam addParam \u00b6 [Android] open fun addParam (@ NonNull key: String , @ Nullable value: Any ): ConferenceCreateOptions.Builder Adds a parameter value to the builder. This method automatically integrates the Conference Parameter object and inserts the provided dolbyVoice parameter to the object. For more information about Dolby Voice, see this article . The following example presents how to use the addParam method to create the Dolby Voice conference. VoxeetSDK . conference (). create ( new ConferenceCreateOptions . Builder () . setConferenceAlias ( conference_alias ) . addParam ( \"dolbyVoice\" , true ). build () ). then ( createConferenceresult -> { //manage the success here }). error ( error -> { //manage the error here }); Note: To create the Dolby Voice conference, you can also use the setDolbyVoice method.","title":"Add param"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-create-options/-builder/add-param/#addparam","text":"[Android] open fun addParam (@ NonNull key: String , @ Nullable value: Any ): ConferenceCreateOptions.Builder Adds a parameter value to the builder. This method automatically integrates the Conference Parameter object and inserts the provided dolbyVoice parameter to the object. For more information about Dolby Voice, see this article . The following example presents how to use the addParam method to create the Dolby Voice conference. VoxeetSDK . conference (). create ( new ConferenceCreateOptions . Builder () . setConferenceAlias ( conference_alias ) . addParam ( \"dolbyVoice\" , true ). build () ). then ( createConferenceresult -> { //manage the success here }). error ( error -> { //manage the error here }); Note: To create the Dolby Voice conference, you can also use the setDolbyVoice method.","title":"addParam"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-create-options/-builder/build/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceCreateOptions / Builder / build build \u00b6 [Android] @ NonNull open fun build (): ConferenceCreateOptions Constructs the ConferenceCreateOptions instance for creating conferences. Return \u00b6 the builder instance.","title":"Build"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-create-options/-builder/build/#build","text":"[Android] @ NonNull open fun build (): ConferenceCreateOptions Constructs the ConferenceCreateOptions instance for creating conferences.","title":"build"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-create-options/-builder/build/#return","text":"the builder instance.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-create-options/-builder/set-conference-alias/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceCreateOptions / Builder / setConferenceAlias setConferenceAlias \u00b6 [Android] open fun setConferenceAlias (@ Nullable conferenceAlias: String ): ConferenceCreateOptions.Builder Sets the conference alias. The alias needs to be a logical and unique string that consists of up to 250 characters, such as letters, digits, and symbols other than #. The alias is case insensitive, which means that using \"foobar\" and \"FOObar\" aliases refers to the same conference. Return \u00b6 the builder instance. Parameters \u00b6 Android conferenceAlias conference name, preferably non-null","title":"Set conference alias"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-create-options/-builder/set-conference-alias/#setconferencealias","text":"[Android] open fun setConferenceAlias (@ Nullable conferenceAlias: String ): ConferenceCreateOptions.Builder Sets the conference alias. The alias needs to be a logical and unique string that consists of up to 250 characters, such as letters, digits, and symbols other than #. The alias is case insensitive, which means that using \"foobar\" and \"FOObar\" aliases refers to the same conference.","title":"setConferenceAlias"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-create-options/-builder/set-conference-alias/#return","text":"the builder instance.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-create-options/-builder/set-conference-alias/#parameters","text":"Android conferenceAlias conference name, preferably non-null","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-create-options/-builder/set-params-holder/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceCreateOptions / Builder / setParamsHolder setParamsHolder \u00b6 [Android] open fun setParamsHolder (@ Nullable paramsHolder: ParamsHolder ): ConferenceCreateOptions.Builder Adds parameters to the conference. Return \u00b6 the builder instance. Parameters \u00b6 Android paramsHolder reference to parameters","title":"Set params holder"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-create-options/-builder/set-params-holder/#setparamsholder","text":"[Android] open fun setParamsHolder (@ Nullable paramsHolder: ParamsHolder ): ConferenceCreateOptions.Builder Adds parameters to the conference.","title":"setParamsHolder"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-create-options/-builder/set-params-holder/#return","text":"the builder instance.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-create-options/-builder/set-params-holder/#parameters","text":"Android paramsHolder reference to parameters","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceJoinOptions ConferenceJoinOptions \u00b6 [Android] open class ConferenceJoinOptions The ConferenceJoinOptions model defines how the application expects to join a conference. The ConferenceJoinOptions model is used in the join function and can be constructed using the ConferenceJoinOptions.Builder model. Types \u00b6 Name Summary Builder [Android] open class Builder The ConferenceJoinOptions.Builder model constructs the ConferenceJoinOptions model that defines how the application expects to join a conference. Functions \u00b6 Name Summary isSpatialAudio [Android] open fun isSpatialAudio (): Boolean Returns true if spatial audio will be enabled for this conference. Properties \u00b6 Name Summary accessToken [Android] @get: Nullable open val accessToken : String conferenceId [Android] @get: Nullable open val conferenceId : String conferenceParticipantType [Android] @get: NonNull open val conferenceParticipantType : ConferenceParticipantType constraints [Android] @get: NonNull open val constraints : Constraints maxVideoForwarding [Android] @get: Nullable open val maxVideoForwarding : Integer paramsHolder [Android] @get: Nullable open val paramsHolder : ParamsHolder videoForwardingStrategy [Android] @get: NonNull open val videoForwardingStrategy : VideoForwardingStrategy","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/#conferencejoinoptions","text":"[Android] open class ConferenceJoinOptions The ConferenceJoinOptions model defines how the application expects to join a conference. The ConferenceJoinOptions model is used in the join function and can be constructed using the ConferenceJoinOptions.Builder model.","title":"ConferenceJoinOptions"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/#types","text":"Name Summary Builder [Android] open class Builder The ConferenceJoinOptions.Builder model constructs the ConferenceJoinOptions model that defines how the application expects to join a conference.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/#functions","text":"Name Summary isSpatialAudio [Android] open fun isSpatialAudio (): Boolean Returns true if spatial audio will be enabled for this conference.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/#properties","text":"Name Summary accessToken [Android] @get: Nullable open val accessToken : String conferenceId [Android] @get: Nullable open val conferenceId : String conferenceParticipantType [Android] @get: NonNull open val conferenceParticipantType : ConferenceParticipantType constraints [Android] @get: NonNull open val constraints : Constraints maxVideoForwarding [Android] @get: Nullable open val maxVideoForwarding : Integer paramsHolder [Android] @get: Nullable open val paramsHolder : ParamsHolder videoForwardingStrategy [Android] @get: NonNull open val videoForwardingStrategy : VideoForwardingStrategy","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/access-token/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceJoinOptions / accessToken accessToken \u00b6 [Android] @get: Nullable open val accessToken : String","title":"Access token"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/access-token/#accesstoken","text":"[Android] @get: Nullable open val accessToken : String","title":"accessToken"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/conference-id/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceJoinOptions / conferenceId conferenceId \u00b6 [Android] @get: Nullable open val conferenceId : String","title":"Conference id"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/conference-id/#conferenceid","text":"[Android] @get: Nullable open val conferenceId : String","title":"conferenceId"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/conference-participant-type/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceJoinOptions / conferenceParticipantType conferenceParticipantType \u00b6 [Android] @get: NonNull open val conferenceParticipantType : ConferenceParticipantType","title":"Conference participant type"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/conference-participant-type/#conferenceparticipanttype","text":"[Android] @get: NonNull open val conferenceParticipantType : ConferenceParticipantType","title":"conferenceParticipantType"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/constraints/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceJoinOptions / constraints constraints \u00b6 [Android] @get: NonNull open val constraints : Constraints","title":"Constraints"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/constraints/#constraints","text":"[Android] @get: NonNull open val constraints : Constraints","title":"constraints"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/is-spatial-audio/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceJoinOptions / isSpatialAudio isSpatialAudio \u00b6 [Android] open fun isSpatialAudio (): Boolean Returns true if spatial audio will be enabled for this conference. For more information, see the setSpatialAudio method. Return \u00b6 The spatial audio flag.","title":"Is spatial audio"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/is-spatial-audio/#isspatialaudio","text":"[Android] open fun isSpatialAudio (): Boolean Returns true if spatial audio will be enabled for this conference. For more information, see the setSpatialAudio method.","title":"isSpatialAudio"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/is-spatial-audio/#return","text":"The spatial audio flag.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/max-video-forwarding/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceJoinOptions / maxVideoForwarding maxVideoForwarding \u00b6 [Android] @get: Nullable open val maxVideoForwarding : Integer","title":"Max video forwarding"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/max-video-forwarding/#maxvideoforwarding","text":"[Android] @get: Nullable open val maxVideoForwarding : Integer","title":"maxVideoForwarding"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/params-holder/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceJoinOptions / paramsHolder paramsHolder \u00b6 [Android] @get: Nullable open val paramsHolder : ParamsHolder","title":"Params holder"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/params-holder/#paramsholder","text":"[Android] @get: Nullable open val paramsHolder : ParamsHolder","title":"paramsHolder"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/video-forwarding-strategy/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceJoinOptions / videoForwardingStrategy videoForwardingStrategy \u00b6 [Android] @get: NonNull open val videoForwardingStrategy : VideoForwardingStrategy","title":"Video forwarding strategy"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/video-forwarding-strategy/#videoforwardingstrategy","text":"[Android] @get: NonNull open val videoForwardingStrategy : VideoForwardingStrategy","title":"videoForwardingStrategy"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceJoinOptions / Builder Builder \u00b6 [Android] open class Builder The ConferenceJoinOptions.Builder model constructs the ConferenceJoinOptions model that defines how the application expects to join a conference. Constructors \u00b6 Builder [Android] open fun Builder (@ NonNull conference: Conference ) Creates a new builder. Functions \u00b6 Name Summary build [Android] @ NonNull open fun build (): ConferenceJoinOptions Constructs the corresponding ConferenceJoinOptions from the data set. setConferenceAccessToken [Android] open fun setConferenceAccessToken (@ NonNull conferenceAccessToken: String ): ConferenceJoinOptions.Builder The conference access token received from the create or invite REST API. setConferenceParticipantType [Android] open fun setConferenceParticipantType (@ NonNull conferenceParticipantType: ConferenceParticipantType ): ConferenceJoinOptions.Builder Sets the type of the joining participant, from a local point of view. setMaxVideoForwarding [Android] open fun setMaxVideoForwarding (max: Int ): ConferenceJoinOptions.Builder Sets the maximum number of video streams that may be transmitted to the joining participant. setParamsHolder [Android] @DeprecatedSince(value = \"3.6\") open fun setParamsHolder (@ Nullable paramsHolder: ParamsHolder ): ConferenceJoinOptions.Builder Adds parameters into the conference. setSpatialAudio [Android] open fun setSpatialAudio (@ NonNull spatialAudio: Boolean ): ConferenceJoinOptions.Builder Enables spatial audio for the local participant who joins a Dolby Voice conference. setVideoForwardingStrategy [Android] open fun setVideoForwardingStrategy (@ NonNull videoForwardingStrategy: VideoForwardingStrategy ): ConferenceJoinOptions.Builder Changes the VideoForwardingStrategy for the local participant.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/#builder","text":"[Android] open class Builder The ConferenceJoinOptions.Builder model constructs the ConferenceJoinOptions model that defines how the application expects to join a conference.","title":"Builder"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/#constructors","text":"Builder [Android] open fun Builder (@ NonNull conference: Conference ) Creates a new builder.","title":"Constructors"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/#functions","text":"Name Summary build [Android] @ NonNull open fun build (): ConferenceJoinOptions Constructs the corresponding ConferenceJoinOptions from the data set. setConferenceAccessToken [Android] open fun setConferenceAccessToken (@ NonNull conferenceAccessToken: String ): ConferenceJoinOptions.Builder The conference access token received from the create or invite REST API. setConferenceParticipantType [Android] open fun setConferenceParticipantType (@ NonNull conferenceParticipantType: ConferenceParticipantType ): ConferenceJoinOptions.Builder Sets the type of the joining participant, from a local point of view. setMaxVideoForwarding [Android] open fun setMaxVideoForwarding (max: Int ): ConferenceJoinOptions.Builder Sets the maximum number of video streams that may be transmitted to the joining participant. setParamsHolder [Android] @DeprecatedSince(value = \"3.6\") open fun setParamsHolder (@ Nullable paramsHolder: ParamsHolder ): ConferenceJoinOptions.Builder Adds parameters into the conference. setSpatialAudio [Android] open fun setSpatialAudio (@ NonNull spatialAudio: Boolean ): ConferenceJoinOptions.Builder Enables spatial audio for the local participant who joins a Dolby Voice conference. setVideoForwardingStrategy [Android] open fun setVideoForwardingStrategy (@ NonNull videoForwardingStrategy: VideoForwardingStrategy ): ConferenceJoinOptions.Builder Changes the VideoForwardingStrategy for the local participant.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/-builder/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceJoinOptions / Builder / Builder Builder \u00b6 [Android] open fun Builder (@ NonNull conference: Conference ) Creates a new builder. Parameters \u00b6 Android conference valid conference.","title":" builder"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/-builder/#builder","text":"[Android] open fun Builder (@ NonNull conference: Conference ) Creates a new builder.","title":"Builder"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/-builder/#parameters","text":"Android conference valid conference.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/build/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceJoinOptions / Builder / build build \u00b6 [Android] @ NonNull open fun build (): ConferenceJoinOptions Constructs the corresponding ConferenceJoinOptions from the data set. Return \u00b6 a new valid instance of the conference join representation.","title":"Build"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/build/#build","text":"[Android] @ NonNull open fun build (): ConferenceJoinOptions Constructs the corresponding ConferenceJoinOptions from the data set.","title":"build"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/build/#return","text":"a new valid instance of the conference join representation.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/set-conference-access-token/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceJoinOptions / Builder / setConferenceAccessToken setConferenceAccessToken \u00b6 [Android] open fun setConferenceAccessToken (@ NonNull conferenceAccessToken: String ): ConferenceJoinOptions.Builder The conference access token received from the create or invite REST API. The conference access token is required to join a protected conference. For more information, see the Enhanced Conference Access Control article. Return \u00b6 the builder instance. Parameters \u00b6 Android conferenceAccessToken the Conference Access Token","title":"Set conference access token"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/set-conference-access-token/#setconferenceaccesstoken","text":"[Android] open fun setConferenceAccessToken (@ NonNull conferenceAccessToken: String ): ConferenceJoinOptions.Builder The conference access token received from the create or invite REST API. The conference access token is required to join a protected conference. For more information, see the Enhanced Conference Access Control article.","title":"setConferenceAccessToken"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/set-conference-access-token/#return","text":"the builder instance.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/set-conference-access-token/#parameters","text":"Android conferenceAccessToken the Conference Access Token","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/set-conference-participant-type/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceJoinOptions / Builder / setConferenceParticipantType setConferenceParticipantType \u00b6 [Android] open fun setConferenceParticipantType (@ NonNull conferenceParticipantType: ConferenceParticipantType ): ConferenceJoinOptions.Builder Sets the type of the joining participant, from a local point of view. There are the following participant types: normal - the default value broadcaster - a participant can actively participate in a conference and transmit media to the rest of conference participants listener - a participant can only listen to a conference and cannot actively participate Return \u00b6 the builder instance. Parameters \u00b6 Android conferenceParticipantType specified type of the conference participant","title":"Set conference participant type"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/set-conference-participant-type/#setconferenceparticipanttype","text":"[Android] open fun setConferenceParticipantType (@ NonNull conferenceParticipantType: ConferenceParticipantType ): ConferenceJoinOptions.Builder Sets the type of the joining participant, from a local point of view. There are the following participant types: normal - the default value broadcaster - a participant can actively participate in a conference and transmit media to the rest of conference participants listener - a participant can only listen to a conference and cannot actively participate","title":"setConferenceParticipantType"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/set-conference-participant-type/#return","text":"the builder instance.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/set-conference-participant-type/#parameters","text":"Android conferenceParticipantType specified type of the conference participant","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/set-max-video-forwarding/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceJoinOptions / Builder / setMaxVideoForwarding setMaxVideoForwarding \u00b6 [Android] open fun setMaxVideoForwarding (max: Int ): ConferenceJoinOptions.Builder Sets the maximum number of video streams that may be transmitted to the joining participant. The valid values are between 0 and 25. This property is available in SDK 3.1 and later. Return \u00b6 the builder instance. Parameters \u00b6 Android max The maximum number of video streams that may be transmitted to the local participant. The valid values are between 0 and 25. The default value is 4. In the case of providing a value smaller than 0, SDK triggers the IllegalStateException error. In the case of providing a value greater than 25, the Dolby.io server triggers an error.","title":"Set max video forwarding"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/set-max-video-forwarding/#setmaxvideoforwarding","text":"[Android] open fun setMaxVideoForwarding (max: Int ): ConferenceJoinOptions.Builder Sets the maximum number of video streams that may be transmitted to the joining participant. The valid values are between 0 and 25. This property is available in SDK 3.1 and later.","title":"setMaxVideoForwarding"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/set-max-video-forwarding/#return","text":"the builder instance.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/set-max-video-forwarding/#parameters","text":"Android max The maximum number of video streams that may be transmitted to the local participant. The valid values are between 0 and 25. The default value is 4. In the case of providing a value smaller than 0, SDK triggers the IllegalStateException error. In the case of providing a value greater than 25, the Dolby.io server triggers an error.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/set-params-holder/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceJoinOptions / Builder / setParamsHolder setParamsHolder \u00b6 [Android] @DeprecatedSince(value = \"3.6\") open fun setParamsHolder (@ Nullable paramsHolder: ParamsHolder ): ConferenceJoinOptions.Builder Deprecated \u00b6 Adds parameters into the conference. Return \u00b6 the builder instance. Deprecated \u00b6 Parameters \u00b6 Android paramsHolder reference to parameters.","title":"Set params holder"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/set-params-holder/#setparamsholder","text":"[Android] @DeprecatedSince(value = \"3.6\") open fun setParamsHolder (@ Nullable paramsHolder: ParamsHolder ): ConferenceJoinOptions.Builder","title":"setParamsHolder"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/set-params-holder/#deprecated","text":"Adds parameters into the conference.","title":"Deprecated"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/set-params-holder/#return","text":"the builder instance.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/set-params-holder/#deprecated_1","text":"","title":"Deprecated"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/set-params-holder/#parameters","text":"Android paramsHolder reference to parameters.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/set-spatial-audio/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceJoinOptions / Builder / setSpatialAudio setSpatialAudio \u00b6 [Android] open fun setSpatialAudio (@ NonNull spatialAudio: Boolean ): ConferenceJoinOptions.Builder Enables spatial audio for the local participant who joins a Dolby Voice conference. By default, this parameter is set to false. When set to true in a conference that uses the individual spatial audio style , the application must place remote participants in a 3D space using the setSpatialPosition method. ***Warning:****In the individual spatial audio style, remote participants' audio is disabled until the participants are assigned to specific locations. We recommend calling* setSpatialPosition from participantAddedEvent event to ensure that all participants are assigned to specific positions. Return \u00b6 The builder instance. Parameters \u00b6 Android spatialAudio A flag indicating if the local participant wants to join a conference with spatial audio enabled.","title":"Set spatial audio"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/set-spatial-audio/#setspatialaudio","text":"[Android] open fun setSpatialAudio (@ NonNull spatialAudio: Boolean ): ConferenceJoinOptions.Builder Enables spatial audio for the local participant who joins a Dolby Voice conference. By default, this parameter is set to false. When set to true in a conference that uses the individual spatial audio style , the application must place remote participants in a 3D space using the setSpatialPosition method. ***Warning:****In the individual spatial audio style, remote participants' audio is disabled until the participants are assigned to specific locations. We recommend calling* setSpatialPosition from participantAddedEvent event to ensure that all participants are assigned to specific positions.","title":"setSpatialAudio"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/set-spatial-audio/#return","text":"The builder instance.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/set-spatial-audio/#parameters","text":"Android spatialAudio A flag indicating if the local participant wants to join a conference with spatial audio enabled.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/set-video-forwarding-strategy/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceJoinOptions / Builder / setVideoForwardingStrategy setVideoForwardingStrategy \u00b6 [Android] open fun setVideoForwardingStrategy (@ NonNull videoForwardingStrategy: VideoForwardingStrategy ): ConferenceJoinOptions.Builder Changes the VideoForwardingStrategy for the local participant. This method is available only in SDK 3.6 and later. Parameters \u00b6 Android videoForwardingStrategy The strategy that defines how the SDK should select conference participants whose videos will be received by the local participant. The selection can be either based on the participants' audio volume or the distance from the local participant.","title":"Set video forwarding strategy"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/set-video-forwarding-strategy/#setvideoforwardingstrategy","text":"[Android] open fun setVideoForwardingStrategy (@ NonNull videoForwardingStrategy: VideoForwardingStrategy ): ConferenceJoinOptions.Builder Changes the VideoForwardingStrategy for the local participant. This method is available only in SDK 3.6 and later.","title":"setVideoForwardingStrategy"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-join-options/-builder/set-video-forwarding-strategy/#parameters","text":"Android videoForwardingStrategy The strategy that defines how the SDK should select conference participants whose videos will be received by the local participant. The selection can be either based on the participants' audio volume or the distance from the local participant.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceListenOptions ConferenceListenOptions \u00b6 [Android] open class ConferenceListenOptions The ConferenceListenOptions model defines how the application expects to join a conference using the listen method. Types \u00b6 Name Summary Builder [Android] open class Builder The ConferenceListenOptions. Functions \u00b6 Name Summary isSpatialAudio [Android] open fun isSpatialAudio (): Boolean Gets the flag indicating whether the local participant uses spatial audio. Properties \u00b6 Name Summary accessToken [Android] @get: Nullable open val accessToken : String conference [Android] @get: Nullable open val conference : Conference maxVideoForwarding [Android] @get: Nullable open val maxVideoForwarding : Integer videoForwardingStrategy [Android] @get: NonNull open val videoForwardingStrategy : VideoForwardingStrategy","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/#conferencelistenoptions","text":"[Android] open class ConferenceListenOptions The ConferenceListenOptions model defines how the application expects to join a conference using the listen method.","title":"ConferenceListenOptions"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/#types","text":"Name Summary Builder [Android] open class Builder The ConferenceListenOptions.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/#functions","text":"Name Summary isSpatialAudio [Android] open fun isSpatialAudio (): Boolean Gets the flag indicating whether the local participant uses spatial audio.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/#properties","text":"Name Summary accessToken [Android] @get: Nullable open val accessToken : String conference [Android] @get: Nullable open val conference : Conference maxVideoForwarding [Android] @get: Nullable open val maxVideoForwarding : Integer videoForwardingStrategy [Android] @get: NonNull open val videoForwardingStrategy : VideoForwardingStrategy","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/access-token/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceListenOptions / accessToken accessToken \u00b6 [Android] @get: Nullable open val accessToken : String","title":"Access token"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/access-token/#accesstoken","text":"[Android] @get: Nullable open val accessToken : String","title":"accessToken"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/conference/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceListenOptions / conference conference \u00b6 [Android] @get: Nullable open val conference : Conference","title":"Conference"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/conference/#conference","text":"[Android] @get: Nullable open val conference : Conference","title":"conference"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/is-spatial-audio/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceListenOptions / isSpatialAudio isSpatialAudio \u00b6 [Android] open fun isSpatialAudio (): Boolean Gets the flag indicating whether the local participant uses spatial audio. Return \u00b6 The spatial audio flag.","title":"Is spatial audio"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/is-spatial-audio/#isspatialaudio","text":"[Android] open fun isSpatialAudio (): Boolean Gets the flag indicating whether the local participant uses spatial audio.","title":"isSpatialAudio"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/is-spatial-audio/#return","text":"The spatial audio flag.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/max-video-forwarding/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceListenOptions / maxVideoForwarding maxVideoForwarding \u00b6 [Android] @get: Nullable open val maxVideoForwarding : Integer","title":"Max video forwarding"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/max-video-forwarding/#maxvideoforwarding","text":"[Android] @get: Nullable open val maxVideoForwarding : Integer","title":"maxVideoForwarding"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/video-forwarding-strategy/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceListenOptions / videoForwardingStrategy videoForwardingStrategy \u00b6 [Android] @get: NonNull open val videoForwardingStrategy : VideoForwardingStrategy","title":"Video forwarding strategy"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/video-forwarding-strategy/#videoforwardingstrategy","text":"[Android] @get: NonNull open val videoForwardingStrategy : VideoForwardingStrategy","title":"videoForwardingStrategy"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/-builder/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceListenOptions / Builder Builder \u00b6 [Android] open class Builder The ConferenceListenOptions.Builder model is responsible for creating the ConferenceListenOptions instance. Functions \u00b6 Name Summary build [Android] @ NonNull open fun build (): ConferenceListenOptions Constructs the corresponding ConferenceListenOptions from the data set. setConferenceAccessToken [Android] open fun setConferenceAccessToken (@ NonNull conferenceAccessToken: String ): ConferenceListenOptions.Builder The conference access token received from the create or invite REST API. setMaxVideoForwarding [Android] open fun setMaxVideoForwarding (max: Int ): ConferenceListenOptions.Builder Sets the maximum number of video streams that may be transmitted to the joining participant. setSpatialAudio [Android] open fun setSpatialAudio (@ NonNull spatialAudio: Boolean ): ConferenceListenOptions.Builder Enables spatial audio for the local participant who joins a Dolby Voice conference. setVideoForwardingStrategy [Android] open fun setVideoForwardingStrategy (@ NonNull videoForwardingStrategy: VideoForwardingStrategy ): ConferenceListenOptions.Builder Changes the video forwarding strategy for the local participant.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/-builder/#builder","text":"[Android] open class Builder The ConferenceListenOptions.Builder model is responsible for creating the ConferenceListenOptions instance.","title":"Builder"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/-builder/#functions","text":"Name Summary build [Android] @ NonNull open fun build (): ConferenceListenOptions Constructs the corresponding ConferenceListenOptions from the data set. setConferenceAccessToken [Android] open fun setConferenceAccessToken (@ NonNull conferenceAccessToken: String ): ConferenceListenOptions.Builder The conference access token received from the create or invite REST API. setMaxVideoForwarding [Android] open fun setMaxVideoForwarding (max: Int ): ConferenceListenOptions.Builder Sets the maximum number of video streams that may be transmitted to the joining participant. setSpatialAudio [Android] open fun setSpatialAudio (@ NonNull spatialAudio: Boolean ): ConferenceListenOptions.Builder Enables spatial audio for the local participant who joins a Dolby Voice conference. setVideoForwardingStrategy [Android] open fun setVideoForwardingStrategy (@ NonNull videoForwardingStrategy: VideoForwardingStrategy ): ConferenceListenOptions.Builder Changes the video forwarding strategy for the local participant.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/-builder/build/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceListenOptions / Builder / build build \u00b6 [Android] @ NonNull open fun build (): ConferenceListenOptions Constructs the corresponding ConferenceListenOptions from the data set. Return \u00b6 a new valid instance of the conference listen representation.","title":"Build"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/-builder/build/#build","text":"[Android] @ NonNull open fun build (): ConferenceListenOptions Constructs the corresponding ConferenceListenOptions from the data set.","title":"build"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/-builder/build/#return","text":"a new valid instance of the conference listen representation.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/-builder/set-conference-access-token/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceListenOptions / Builder / setConferenceAccessToken setConferenceAccessToken \u00b6 [Android] open fun setConferenceAccessToken (@ NonNull conferenceAccessToken: String ): ConferenceListenOptions.Builder The conference access token received from the create or invite REST API. The conference access token is required to join a protected conference. For more information, see the Enhanced Conference Access Control article. Return \u00b6 the builder instance. Parameters \u00b6 Android conferenceAccessToken The conference access token.","title":"Set conference access token"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/-builder/set-conference-access-token/#setconferenceaccesstoken","text":"[Android] open fun setConferenceAccessToken (@ NonNull conferenceAccessToken: String ): ConferenceListenOptions.Builder The conference access token received from the create or invite REST API. The conference access token is required to join a protected conference. For more information, see the Enhanced Conference Access Control article.","title":"setConferenceAccessToken"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/-builder/set-conference-access-token/#return","text":"the builder instance.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/-builder/set-conference-access-token/#parameters","text":"Android conferenceAccessToken The conference access token.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/-builder/set-max-video-forwarding/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceListenOptions / Builder / setMaxVideoForwarding setMaxVideoForwarding \u00b6 [Android] open fun setMaxVideoForwarding (max: Int ): ConferenceListenOptions.Builder Sets the maximum number of video streams that may be transmitted to the joining participant. The valid values are between 0 and 25. This property is available in SDK 3.1 and later. Return \u00b6 the builder instance. Parameters \u00b6 Android max The maximum number of video streams that may be transmitted to the local participant. The valid values are between 0 and 25. The default value is 4. In the case of providing a value smaller than 0, SDK triggers the IllegalStateException error. In the case of providing a value greater than 25, the Dolby.io server triggers an error.","title":"Set max video forwarding"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/-builder/set-max-video-forwarding/#setmaxvideoforwarding","text":"[Android] open fun setMaxVideoForwarding (max: Int ): ConferenceListenOptions.Builder Sets the maximum number of video streams that may be transmitted to the joining participant. The valid values are between 0 and 25. This property is available in SDK 3.1 and later.","title":"setMaxVideoForwarding"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/-builder/set-max-video-forwarding/#return","text":"the builder instance.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/-builder/set-max-video-forwarding/#parameters","text":"Android max The maximum number of video streams that may be transmitted to the local participant. The valid values are between 0 and 25. The default value is 4. In the case of providing a value smaller than 0, SDK triggers the IllegalStateException error. In the case of providing a value greater than 25, the Dolby.io server triggers an error.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/-builder/set-spatial-audio/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceListenOptions / Builder / setSpatialAudio setSpatialAudio \u00b6 [Android] open fun setSpatialAudio (@ NonNull spatialAudio: Boolean ): ConferenceListenOptions.Builder Enables spatial audio for the local participant who joins a Dolby Voice conference. By default, this parameter is set to false. Return \u00b6 the builder instance. Parameters \u00b6 Android spatialAudio A flag indicating if spatial audio should be enabled.","title":"Set spatial audio"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/-builder/set-spatial-audio/#setspatialaudio","text":"[Android] open fun setSpatialAudio (@ NonNull spatialAudio: Boolean ): ConferenceListenOptions.Builder Enables spatial audio for the local participant who joins a Dolby Voice conference. By default, this parameter is set to false.","title":"setSpatialAudio"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/-builder/set-spatial-audio/#return","text":"the builder instance.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/-builder/set-spatial-audio/#parameters","text":"Android spatialAudio A flag indicating if spatial audio should be enabled.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/-builder/set-video-forwarding-strategy/","text":"// sdk / com.voxeet.sdk.services.builders / ConferenceListenOptions / Builder / setVideoForwardingStrategy setVideoForwardingStrategy \u00b6 [Android] open fun setVideoForwardingStrategy (@ NonNull videoForwardingStrategy: VideoForwardingStrategy ): ConferenceListenOptions.Builder Changes the video forwarding strategy for the local participant. This method is available only in SDK 3.6 and later. Parameters \u00b6 Android videoForwardingStrategy The strategy that defines how the SDK should select conference participants whose videos will be received by the local participant. The selection can be either based on the participants' audio volume or the distance from the local participant.","title":"Set video forwarding strategy"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/-builder/set-video-forwarding-strategy/#setvideoforwardingstrategy","text":"[Android] open fun setVideoForwardingStrategy (@ NonNull videoForwardingStrategy: VideoForwardingStrategy ): ConferenceListenOptions.Builder Changes the video forwarding strategy for the local participant. This method is available only in SDK 3.6 and later.","title":"setVideoForwardingStrategy"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-conference-listen-options/-builder/set-video-forwarding-strategy/#parameters","text":"Android videoForwardingStrategy The strategy that defines how the SDK should select conference participants whose videos will be received by the local participant. The selection can be either based on the participants' audio volume or the distance from the local participant.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-video-forwarding-options/","text":"// sdk / com.voxeet.sdk.services.builders / VideoForwardingOptions VideoForwardingOptions \u00b6 [Android] open class VideoForwardingOptions The VideoForwardingOptions model allows configuring the Video Forwarding functionality that allows: Setting the maximum number of video streams that may be transmitted to the local participant Prioritizing specific participants' video streams that need to be transmitted to the local participant Changing the video forwarding strategy that defines how the SDK should select conference participants whose videos will be received by the local participant Types \u00b6 Name Summary Builder [Android] class Builder The VideoForwardingOptions. Functions \u00b6 Name Summary getMaxVideoForwarding [Android] @ Nullable open fun getMaxVideoForwarding (): Integer Gets the maximum number of video streams that may be transmitted to the local participant. getVideoForwardingStrategy [Android] @ Nullable open fun getVideoForwardingStrategy (): VideoForwardingStrategy Gets the video forwarding strategy that the local participant uses in the current conference. Properties \u00b6 Name Summary participants [Android] @ Nullable @get: Nullable open val participants : List < String >","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-video-forwarding-options/#videoforwardingoptions","text":"[Android] open class VideoForwardingOptions The VideoForwardingOptions model allows configuring the Video Forwarding functionality that allows: Setting the maximum number of video streams that may be transmitted to the local participant Prioritizing specific participants' video streams that need to be transmitted to the local participant Changing the video forwarding strategy that defines how the SDK should select conference participants whose videos will be received by the local participant","title":"VideoForwardingOptions"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-video-forwarding-options/#types","text":"Name Summary Builder [Android] class Builder The VideoForwardingOptions.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-video-forwarding-options/#functions","text":"Name Summary getMaxVideoForwarding [Android] @ Nullable open fun getMaxVideoForwarding (): Integer Gets the maximum number of video streams that may be transmitted to the local participant. getVideoForwardingStrategy [Android] @ Nullable open fun getVideoForwardingStrategy (): VideoForwardingStrategy Gets the video forwarding strategy that the local participant uses in the current conference.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-video-forwarding-options/#properties","text":"Name Summary participants [Android] @ Nullable @get: Nullable open val participants : List < String >","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-video-forwarding-options/get-max-video-forwarding/","text":"// sdk / com.voxeet.sdk.services.builders / VideoForwardingOptions / getMaxVideoForwarding getMaxVideoForwarding \u00b6 [Android] @ Nullable open fun getMaxVideoForwarding (): Integer Gets the maximum number of video streams that may be transmitted to the local participant.","title":"Get max video forwarding"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-video-forwarding-options/get-max-video-forwarding/#getmaxvideoforwarding","text":"[Android] @ Nullable open fun getMaxVideoForwarding (): Integer Gets the maximum number of video streams that may be transmitted to the local participant.","title":"getMaxVideoForwarding"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-video-forwarding-options/get-video-forwarding-strategy/","text":"// sdk / com.voxeet.sdk.services.builders / VideoForwardingOptions / getVideoForwardingStrategy getVideoForwardingStrategy \u00b6 [Android] @ Nullable open fun getVideoForwardingStrategy (): VideoForwardingStrategy Gets the video forwarding strategy that the local participant uses in the current conference.","title":"Get video forwarding strategy"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-video-forwarding-options/get-video-forwarding-strategy/#getvideoforwardingstrategy","text":"[Android] @ Nullable open fun getVideoForwardingStrategy (): VideoForwardingStrategy Gets the video forwarding strategy that the local participant uses in the current conference.","title":"getVideoForwardingStrategy"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-video-forwarding-options/participants/","text":"// sdk / com.voxeet.sdk.services.builders / VideoForwardingOptions / participants participants \u00b6 [Android] @ Nullable @get: Nullable open val participants : List < String >","title":"Participants"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-video-forwarding-options/participants/#participants","text":"[Android] @ Nullable @get: Nullable open val participants : List < String >","title":"participants"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-video-forwarding-options/-builder/","text":"// sdk / com.voxeet.sdk.services.builders / VideoForwardingOptions / Builder Builder \u00b6 [Android] class Builder The VideoForwardingOptions.Builder model is responsible for creating the VideoForwardingOptions instance. Constructors \u00b6 Builder [Android] open fun Builder () Creates a builder object. Functions \u00b6 Name Summary build [Android] open fun build (): VideoForwardingOptions Constructs the VideoForwardingOptions instance. setMaxVideoForwarding [Android] open fun setMaxVideoForwarding (max: Int ): VideoForwardingOptions.Builder Sets the maximum number of video streams that may be transmitted to the local participant. setParticipants [Android] open fun setParticipants (@ NonNull participants: List < String >): VideoForwardingOptions.Builder Sets a list of participants whose video streams should be always transmitted to the local participant. setVideoForwardingStrategy [Android] open fun setVideoForwardingStrategy (@ NonNull strategy: VideoForwardingStrategy ): VideoForwardingOptions.Builder Sets the video forwarding strategy for the local participant.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-video-forwarding-options/-builder/#builder","text":"[Android] class Builder The VideoForwardingOptions.Builder model is responsible for creating the VideoForwardingOptions instance.","title":"Builder"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-video-forwarding-options/-builder/#constructors","text":"Builder [Android] open fun Builder () Creates a builder object.","title":"Constructors"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-video-forwarding-options/-builder/#functions","text":"Name Summary build [Android] open fun build (): VideoForwardingOptions Constructs the VideoForwardingOptions instance. setMaxVideoForwarding [Android] open fun setMaxVideoForwarding (max: Int ): VideoForwardingOptions.Builder Sets the maximum number of video streams that may be transmitted to the local participant. setParticipants [Android] open fun setParticipants (@ NonNull participants: List < String >): VideoForwardingOptions.Builder Sets a list of participants whose video streams should be always transmitted to the local participant. setVideoForwardingStrategy [Android] open fun setVideoForwardingStrategy (@ NonNull strategy: VideoForwardingStrategy ): VideoForwardingOptions.Builder Sets the video forwarding strategy for the local participant.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-video-forwarding-options/-builder/-builder/","text":"// sdk / com.voxeet.sdk.services.builders / VideoForwardingOptions / Builder / Builder Builder \u00b6 [Android] open fun Builder () Creates a builder object.","title":" builder"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-video-forwarding-options/-builder/-builder/#builder","text":"[Android] open fun Builder () Creates a builder object.","title":"Builder"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-video-forwarding-options/-builder/build/","text":"// sdk / com.voxeet.sdk.services.builders / VideoForwardingOptions / Builder / build build \u00b6 [Android] open fun build (): VideoForwardingOptions Constructs the VideoForwardingOptions instance.","title":"Build"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-video-forwarding-options/-builder/build/#build","text":"[Android] open fun build (): VideoForwardingOptions Constructs the VideoForwardingOptions instance.","title":"build"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-video-forwarding-options/-builder/set-max-video-forwarding/","text":"// sdk / com.voxeet.sdk.services.builders / VideoForwardingOptions / Builder / setMaxVideoForwarding setMaxVideoForwarding \u00b6 [Android] open fun setMaxVideoForwarding (max: Int ): VideoForwardingOptions.Builder Sets the maximum number of video streams that may be transmitted to the local participant. Parameters \u00b6 Android max The maximum number of video streams that may be transmitted to the local participant. The valid values are between 0 and 25. The default value is 4. In the case of providing a value smaller than 0, SDK triggers the IllegalStateException error. In the case of providing a value greater than 25, the Dolby.io server triggers an error.","title":"Set max video forwarding"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-video-forwarding-options/-builder/set-max-video-forwarding/#setmaxvideoforwarding","text":"[Android] open fun setMaxVideoForwarding (max: Int ): VideoForwardingOptions.Builder Sets the maximum number of video streams that may be transmitted to the local participant.","title":"setMaxVideoForwarding"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-video-forwarding-options/-builder/set-max-video-forwarding/#parameters","text":"Android max The maximum number of video streams that may be transmitted to the local participant. The valid values are between 0 and 25. The default value is 4. In the case of providing a value smaller than 0, SDK triggers the IllegalStateException error. In the case of providing a value greater than 25, the Dolby.io server triggers an error.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-video-forwarding-options/-builder/set-participants/","text":"// sdk / com.voxeet.sdk.services.builders / VideoForwardingOptions / Builder / setParticipants setParticipants \u00b6 [Android] open fun setParticipants (@ NonNull participants: List < String >): VideoForwardingOptions.Builder Sets a list of participants whose video streams should be always transmitted to the local participant. Parameters \u00b6 Android participants The list of participants.","title":"Set participants"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-video-forwarding-options/-builder/set-participants/#setparticipants","text":"[Android] open fun setParticipants (@ NonNull participants: List < String >): VideoForwardingOptions.Builder Sets a list of participants whose video streams should be always transmitted to the local participant.","title":"setParticipants"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-video-forwarding-options/-builder/set-participants/#parameters","text":"Android participants The list of participants.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-video-forwarding-options/-builder/set-video-forwarding-strategy/","text":"// sdk / com.voxeet.sdk.services.builders / VideoForwardingOptions / Builder / setVideoForwardingStrategy setVideoForwardingStrategy \u00b6 [Android] open fun setVideoForwardingStrategy (@ NonNull strategy: VideoForwardingStrategy ): VideoForwardingOptions.Builder Sets the video forwarding strategy for the local participant. Parameters \u00b6 Android strategy The video forwarding strategy.","title":"Set video forwarding strategy"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-video-forwarding-options/-builder/set-video-forwarding-strategy/#setvideoforwardingstrategy","text":"[Android] open fun setVideoForwardingStrategy (@ NonNull strategy: VideoForwardingStrategy ): VideoForwardingOptions.Builder Sets the video forwarding strategy for the local participant.","title":"setVideoForwardingStrategy"},{"location":"android-reference/sdk/com.voxeet.sdk.services.builders/-video-forwarding-options/-builder/set-video-forwarding-strategy/#parameters","text":"Android strategy The video forwarding strategy.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services.chat/","text":"// sdk / com.voxeet.sdk.services.chat Package-level declarations \u00b6 Types \u00b6 Name Summary ChatMessageEvent [Android] open class ChatMessageEvent Emitted when the application receives the chat message.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.chat/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.services.chat/#types","text":"Name Summary ChatMessageEvent [Android] open class ChatMessageEvent Emitted when the application receives the chat message.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.services.chat/-chat-message-event/","text":"// sdk / com.voxeet.sdk.services.chat / ChatMessageEvent ChatMessageEvent \u00b6 [Android] open class ChatMessageEvent Emitted when the application receives the chat message. Properties \u00b6 Name Summary message [Android] @ NonNull open var message : ChatMessage The instance of the sent message. participant [Android] @ Nullable open var participant : Participant The instance of the participant who has sent the message.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.chat/-chat-message-event/#chatmessageevent","text":"[Android] open class ChatMessageEvent Emitted when the application receives the chat message.","title":"ChatMessageEvent"},{"location":"android-reference/sdk/com.voxeet.sdk.services.chat/-chat-message-event/#properties","text":"Name Summary message [Android] @ NonNull open var message : ChatMessage The instance of the sent message. participant [Android] @ Nullable open var participant : Participant The instance of the participant who has sent the message.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.services.chat/-chat-message-event/message/","text":"// sdk / com.voxeet.sdk.services.chat / ChatMessageEvent / message message \u00b6 [Android] @ NonNull open var message : ChatMessage The instance of the sent message.","title":"Message"},{"location":"android-reference/sdk/com.voxeet.sdk.services.chat/-chat-message-event/message/#message","text":"[Android] @ NonNull open var message : ChatMessage The instance of the sent message.","title":"message"},{"location":"android-reference/sdk/com.voxeet.sdk.services.chat/-chat-message-event/participant/","text":"// sdk / com.voxeet.sdk.services.chat / ChatMessageEvent / participant participant \u00b6 [Android] @ Nullable open var participant : Participant The instance of the participant who has sent the message.","title":"Participant"},{"location":"android-reference/sdk/com.voxeet.sdk.services.chat/-chat-message-event/participant/#participant","text":"[Android] @ Nullable open var participant : Participant The instance of the participant who has sent the message.","title":"participant"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference/","text":"// sdk / com.voxeet.sdk.services.conference Package-level declarations \u00b6 Types \u00b6 Name Summary AudioProcessing [Android] enum AudioProcessing The AudioProcessing model allows enabling and disabling audio processing. ConferenceConfigurations [Android] open class ConferenceConfigurations The ConferenceConfigurations model enables checking the default values established for conferences, such as the value of audio route , video settings , microphone status , and time after which the conference without any participants is ended.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference/#types","text":"Name Summary AudioProcessing [Android] enum AudioProcessing The AudioProcessing model allows enabling and disabling audio processing. ConferenceConfigurations [Android] open class ConferenceConfigurations The ConferenceConfigurations model enables checking the default values established for conferences, such as the value of audio route , video settings , microphone status , and time after which the conference without any participants is ended.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference/-audio-processing/","text":"// sdk / com.voxeet.sdk.services.conference / AudioProcessing AudioProcessing \u00b6 [Android] enum AudioProcessing The AudioProcessing model allows enabling and disabling audio processing. By default, Dolby Voice conferences offer audio processing to reduce background sounds and improve voice clarity. However, if you wish to send background sounds to a conference, for example, to play music, you can disable audio processing. The AudioProcessing model offers two values: VOICE enables audio processing to offer a high-quality voice communication ENVIRONMENT disables audio processing to transmit background sounds, such as music Functions \u00b6 Name Summary valueOf [Android] open fun valueOf (name: String ): AudioProcessing Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < AudioProcessing > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference/-audio-processing/#audioprocessing","text":"[Android] enum AudioProcessing The AudioProcessing model allows enabling and disabling audio processing. By default, Dolby Voice conferences offer audio processing to reduce background sounds and improve voice clarity. However, if you wish to send background sounds to a conference, for example, to play music, you can disable audio processing. The AudioProcessing model offers two values: VOICE enables audio processing to offer a high-quality voice communication ENVIRONMENT disables audio processing to transmit background sounds, such as music","title":"AudioProcessing"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference/-audio-processing/#functions","text":"Name Summary valueOf [Android] open fun valueOf (name: String ): AudioProcessing Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < AudioProcessing > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference/-audio-processing/value-of/","text":"// sdk / com.voxeet.sdk.services.conference / AudioProcessing / valueOf valueOf \u00b6 [Android] open fun valueOf (name: String ): AudioProcessing Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) Return \u00b6 the enum constant with the specified name Throws \u00b6 IllegalArgumentException if this enum type has no constant with the specified name","title":"Value of"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference/-audio-processing/value-of/#valueof","text":"[Android] open fun valueOf (name: String ): AudioProcessing Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)","title":"valueOf"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference/-audio-processing/value-of/#return","text":"the enum constant with the specified name","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference/-audio-processing/value-of/#throws","text":"IllegalArgumentException if this enum type has no constant with the specified name","title":"Throws"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference/-audio-processing/values/","text":"// sdk / com.voxeet.sdk.services.conference / AudioProcessing / values values \u00b6 [Android] open fun values (): Array < AudioProcessing > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants. Return \u00b6 an array containing the constants of this enum type, in the order they're declared","title":"Values"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference/-audio-processing/values/#values","text":"[Android] open fun values (): Array < AudioProcessing > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants.","title":"values"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference/-audio-processing/values/#return","text":"an array containing the constants of this enum type, in the order they're declared","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference/-conference-configurations/","text":"// sdk / com.voxeet.sdk.services.conference / ConferenceConfigurations ConferenceConfigurations \u00b6 [Android] open class ConferenceConfigurations The ConferenceConfigurations model enables checking the default values established for conferences, such as the value of audio route , video settings , microphone status , and time after which the conference without any participants is ended. Properties \u00b6 Name Summary isDefaultMute [Android] open var isDefaultMute : Boolean Informs about the requested default mute and unmuted microphone state. isDefaultOnSpeaker [Android] open var isDefaultOnSpeaker : Boolean Informs about the requested default audio route. isDefaultVideo [Android] open var isDefaultVideo : Boolean Informs about the requested default video. TelecomWaitingForParticipantTimeout [Android] open var TelecomWaitingForParticipantTimeout : Long An optional feature that ends a conference if during a certain time nobody joins it.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference/-conference-configurations/#conferenceconfigurations","text":"[Android] open class ConferenceConfigurations The ConferenceConfigurations model enables checking the default values established for conferences, such as the value of audio route , video settings , microphone status , and time after which the conference without any participants is ended.","title":"ConferenceConfigurations"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference/-conference-configurations/#properties","text":"Name Summary isDefaultMute [Android] open var isDefaultMute : Boolean Informs about the requested default mute and unmuted microphone state. isDefaultOnSpeaker [Android] open var isDefaultOnSpeaker : Boolean Informs about the requested default audio route. isDefaultVideo [Android] open var isDefaultVideo : Boolean Informs about the requested default video. TelecomWaitingForParticipantTimeout [Android] open var TelecomWaitingForParticipantTimeout : Long An optional feature that ends a conference if during a certain time nobody joins it.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference/-conference-configurations/-telecom-waiting-for-participant-timeout/","text":"// sdk / com.voxeet.sdk.services.conference / ConferenceConfigurations / TelecomWaitingForParticipantTimeout TelecomWaitingForParticipantTimeout \u00b6 [Android] open var TelecomWaitingForParticipantTimeout : Long An optional feature that ends a conference if during a certain time nobody joins it.","title":" telecom waiting for participant timeout"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference/-conference-configurations/-telecom-waiting-for-participant-timeout/#telecomwaitingforparticipanttimeout","text":"[Android] open var TelecomWaitingForParticipantTimeout : Long An optional feature that ends a conference if during a certain time nobody joins it.","title":"TelecomWaitingForParticipantTimeout"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference/-conference-configurations/is-default-mute/","text":"// sdk / com.voxeet.sdk.services.conference / ConferenceConfigurations / isDefaultMute isDefaultMute \u00b6 [Android] open var isDefaultMute : Boolean Informs about the requested default mute and unmuted microphone state.","title":"Is default mute"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference/-conference-configurations/is-default-mute/#isdefaultmute","text":"[Android] open var isDefaultMute : Boolean Informs about the requested default mute and unmuted microphone state.","title":"isDefaultMute"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference/-conference-configurations/is-default-on-speaker/","text":"// sdk / com.voxeet.sdk.services.conference / ConferenceConfigurations / isDefaultOnSpeaker isDefaultOnSpeaker \u00b6 [Android] open var isDefaultOnSpeaker : Boolean Informs about the requested default audio route.","title":"Is default on speaker"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference/-conference-configurations/is-default-on-speaker/#isdefaultonspeaker","text":"[Android] open var isDefaultOnSpeaker : Boolean Informs about the requested default audio route.","title":"isDefaultOnSpeaker"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference/-conference-configurations/is-default-video/","text":"// sdk / com.voxeet.sdk.services.conference / ConferenceConfigurations / isDefaultVideo isDefaultVideo \u00b6 [Android] open var isDefaultVideo : Boolean Informs about the requested default video.","title":"Is default video"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference/-conference-configurations/is-default-video/#isdefaultvideo","text":"[Android] open var isDefaultVideo : Boolean Informs about the requested default video.","title":"isDefaultVideo"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/","text":"// sdk / com.voxeet.sdk.services.conference.information Package-level declarations \u00b6 Types \u00b6 Name Summary ConferenceInformation [Android] open class ConferenceInformation The ConferenceInformation model gathers conference information, such as: - The conference instance - The conference type - The conference status - Information whether spatial audio is enabled for the local participant - The type of the local participant - Information whether the local participant is a broadcaster or a listener - Information whether the local participant's video is enabled - Information whether the local participant's audio is enabled - Information whether the local participant shares screen - The local participant's conference permissions - The maximum number of video streams that may be transmitted to the local participant. ConferenceParticipantType [Android] enum ConferenceParticipantType The ConferenceParticipantType model represents the following types of conference participants: - Normal participant - Listener - a participant who only listens to a conference and does not transmit any audio - Broadcaster - an active speaker who transmits audio to other conference participants ConferenceStatus [Android] enum ConferenceStatus The ConferenceStatus model represents the following conference states: - Uninitialized - Creating - Created - Joining - Joined - Leaving - Left - Error - Destroyed - Ended The isValid method checks if the state is valid. LocalConferenceType [Android] enum LocalConferenceType The LocalConferenceType model represents the locally known conference types such as none, conference, and replay.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/#types","text":"Name Summary ConferenceInformation [Android] open class ConferenceInformation The ConferenceInformation model gathers conference information, such as: - The conference instance - The conference type - The conference status - Information whether spatial audio is enabled for the local participant - The type of the local participant - Information whether the local participant is a broadcaster or a listener - Information whether the local participant's video is enabled - Information whether the local participant's audio is enabled - Information whether the local participant shares screen - The local participant's conference permissions - The maximum number of video streams that may be transmitted to the local participant. ConferenceParticipantType [Android] enum ConferenceParticipantType The ConferenceParticipantType model represents the following types of conference participants: - Normal participant - Listener - a participant who only listens to a conference and does not transmit any audio - Broadcaster - an active speaker who transmits audio to other conference participants ConferenceStatus [Android] enum ConferenceStatus The ConferenceStatus model represents the following conference states: - Uninitialized - Creating - Created - Joining - Joined - Leaving - Left - Error - Destroyed - Ended The isValid method checks if the state is valid. LocalConferenceType [Android] enum LocalConferenceType The LocalConferenceType model represents the locally known conference types such as none, conference, and replay.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/","text":"// sdk / com.voxeet.sdk.services.conference.information / ConferenceInformation ConferenceInformation \u00b6 [Android] open class ConferenceInformation The ConferenceInformation model gathers conference information, such as: The conference instance The conference type The conference status Information whether spatial audio is enabled for the local participant The type of the local participant Information whether the local participant is a broadcaster or a listener Information whether the local participant's video is enabled Information whether the local participant's audio is enabled Information whether the local participant shares screen The local participant's conference permissions The maximum number of video streams that may be transmitted to the local participant. Functions \u00b6 Name Summary getConference [Android] @ NonNull open fun getConference (): Conference Gets the Conference instance from the information holder. getConferenceParticipantType [Android] open fun getConferenceParticipantType (): ConferenceParticipantType Retrieves the type of the local participant, either listener, normal, or broadcaster. getConferencePermissions [Android] @ NonNull open fun getConferencePermissions (): Set < ConferencePermission > Provides the conference permissions. getConferenceState [Android] @ NonNull open fun getConferenceState (): ConferenceStatus Gets the current conference state. getConferenceType [Android] @ NonNull open fun getConferenceType (): LocalConferenceType Gets the current local conference type (none, conference, or replay). getVideoForwarding [Android] open fun getVideoForwarding (): VideoForwarding Provides the maximum number of video streams that may be transmitted to the local participant. isBroadcaster [Android] open fun isBroadcaster (): Boolean Informs if the currently logged in participant is in the broadcaster mode. isListener [Android] open fun isListener (): Boolean Informs if the currently logged in participant is in a listening mode. isOwnVideoStarted [Android] open fun isOwnVideoStarted (): Boolean Gets information whether th local participant's video is enabled. isScreenShareOn [Android] open fun isScreenShareOn (): Boolean Checks if the screen is currently shared from a perspective of a screen share lifecycle. isSpatialAudio [Android] open fun isSpatialAudio (): Boolean Get the spatial audio flag for the current participant Properties \u00b6 Name Summary audioState [Android] @ NonNull @get: NonNull open val audioState : MediaState participantIdsCached [Android] @ NonNull open val participantIdsCached : Map < String , String > videoState [Android] @ NonNull @get: NonNull open val videoState : MediaState","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/#conferenceinformation","text":"[Android] open class ConferenceInformation The ConferenceInformation model gathers conference information, such as: The conference instance The conference type The conference status Information whether spatial audio is enabled for the local participant The type of the local participant Information whether the local participant is a broadcaster or a listener Information whether the local participant's video is enabled Information whether the local participant's audio is enabled Information whether the local participant shares screen The local participant's conference permissions The maximum number of video streams that may be transmitted to the local participant.","title":"ConferenceInformation"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/#functions","text":"Name Summary getConference [Android] @ NonNull open fun getConference (): Conference Gets the Conference instance from the information holder. getConferenceParticipantType [Android] open fun getConferenceParticipantType (): ConferenceParticipantType Retrieves the type of the local participant, either listener, normal, or broadcaster. getConferencePermissions [Android] @ NonNull open fun getConferencePermissions (): Set < ConferencePermission > Provides the conference permissions. getConferenceState [Android] @ NonNull open fun getConferenceState (): ConferenceStatus Gets the current conference state. getConferenceType [Android] @ NonNull open fun getConferenceType (): LocalConferenceType Gets the current local conference type (none, conference, or replay). getVideoForwarding [Android] open fun getVideoForwarding (): VideoForwarding Provides the maximum number of video streams that may be transmitted to the local participant. isBroadcaster [Android] open fun isBroadcaster (): Boolean Informs if the currently logged in participant is in the broadcaster mode. isListener [Android] open fun isListener (): Boolean Informs if the currently logged in participant is in a listening mode. isOwnVideoStarted [Android] open fun isOwnVideoStarted (): Boolean Gets information whether th local participant's video is enabled. isScreenShareOn [Android] open fun isScreenShareOn (): Boolean Checks if the screen is currently shared from a perspective of a screen share lifecycle. isSpatialAudio [Android] open fun isSpatialAudio (): Boolean Get the spatial audio flag for the current participant","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/#properties","text":"Name Summary audioState [Android] @ NonNull @get: NonNull open val audioState : MediaState participantIdsCached [Android] @ NonNull open val participantIdsCached : Map < String , String > videoState [Android] @ NonNull @get: NonNull open val videoState : MediaState","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/audio-state/","text":"// sdk / com.voxeet.sdk.services.conference.information / ConferenceInformation / audioState audioState \u00b6 [Android] @ NonNull @get: NonNull open val audioState : MediaState","title":"Audio state"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/audio-state/#audiostate","text":"[Android] @ NonNull @get: NonNull open val audioState : MediaState","title":"audioState"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/get-conference-participant-type/","text":"// sdk / com.voxeet.sdk.services.conference.information / ConferenceInformation / getConferenceParticipantType getConferenceParticipantType \u00b6 [Android] open fun getConferenceParticipantType (): ConferenceParticipantType Retrieves the type of the local participant, either listener, normal, or broadcaster. Return \u00b6 The current type of the local participant.","title":"Get conference participant type"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/get-conference-participant-type/#getconferenceparticipanttype","text":"[Android] open fun getConferenceParticipantType (): ConferenceParticipantType Retrieves the type of the local participant, either listener, normal, or broadcaster.","title":"getConferenceParticipantType"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/get-conference-participant-type/#return","text":"The current type of the local participant.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/get-conference-permissions/","text":"// sdk / com.voxeet.sdk.services.conference.information / ConferenceInformation / getConferencePermissions getConferencePermissions \u00b6 [Android] @ NonNull open fun getConferencePermissions (): Set < ConferencePermission > Provides the conference permissions. Return \u00b6","title":"Get conference permissions"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/get-conference-permissions/#getconferencepermissions","text":"[Android] @ NonNull open fun getConferencePermissions (): Set < ConferencePermission > Provides the conference permissions.","title":"getConferencePermissions"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/get-conference-permissions/#return","text":"","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/get-conference-state/","text":"// sdk / com.voxeet.sdk.services.conference.information / ConferenceInformation / getConferenceState getConferenceState \u00b6 [Android] @ NonNull open fun getConferenceState (): ConferenceStatus Gets the current conference state. All possible states are sufficient to manage a pure conference UX and UI. Return \u00b6 the conference state.","title":"Get conference state"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/get-conference-state/#getconferencestate","text":"[Android] @ NonNull open fun getConferenceState (): ConferenceStatus Gets the current conference state. All possible states are sufficient to manage a pure conference UX and UI.","title":"getConferenceState"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/get-conference-state/#return","text":"the conference state.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/get-conference-type/","text":"// sdk / com.voxeet.sdk.services.conference.information / ConferenceInformation / getConferenceType getConferenceType \u00b6 [Android] @ NonNull open fun getConferenceType (): LocalConferenceType Gets the current local conference type (none, conference, or replay). It is not a conference presentation from the server point of view.v Return \u00b6 the current conference type.","title":"Get conference type"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/get-conference-type/#getconferencetype","text":"[Android] @ NonNull open fun getConferenceType (): LocalConferenceType Gets the current local conference type (none, conference, or replay). It is not a conference presentation from the server point of view.v","title":"getConferenceType"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/get-conference-type/#return","text":"the current conference type.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/get-conference/","text":"// sdk / com.voxeet.sdk.services.conference.information / ConferenceInformation / getConference getConference \u00b6 [Android] @ NonNull open fun getConference (): Conference Gets the Conference instance from the information holder. Return \u00b6 the valid instance.","title":"Get conference"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/get-conference/#getconference","text":"[Android] @ NonNull open fun getConference (): Conference Gets the Conference instance from the information holder.","title":"getConference"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/get-conference/#return","text":"the valid instance.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/get-video-forwarding/","text":"// sdk / com.voxeet.sdk.services.conference.information / ConferenceInformation / getVideoForwarding getVideoForwarding \u00b6 [Android] open fun getVideoForwarding (): VideoForwarding Provides the maximum number of video streams that may be transmitted to the local participant. Return \u00b6","title":"Get video forwarding"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/get-video-forwarding/#getvideoforwarding","text":"[Android] open fun getVideoForwarding (): VideoForwarding Provides the maximum number of video streams that may be transmitted to the local participant.","title":"getVideoForwarding"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/get-video-forwarding/#return","text":"","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/is-broadcaster/","text":"// sdk / com.voxeet.sdk.services.conference.information / ConferenceInformation / isBroadcaster isBroadcaster \u00b6 [Android] open fun isBroadcaster (): Boolean Informs if the currently logged in participant is in the broadcaster mode. This method is useful for webinars. Return \u00b6 informs if there is a broadcaster in the current session.","title":"Is broadcaster"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/is-broadcaster/#isbroadcaster","text":"[Android] open fun isBroadcaster (): Boolean Informs if the currently logged in participant is in the broadcaster mode. This method is useful for webinars.","title":"isBroadcaster"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/is-broadcaster/#return","text":"informs if there is a broadcaster in the current session.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/is-listener/","text":"// sdk / com.voxeet.sdk.services.conference.information / ConferenceInformation / isListener isListener \u00b6 [Android] open fun isListener (): Boolean Informs if the currently logged in participant is in a listening mode. Return \u00b6 informs if there is a listener in the current session.","title":"Is listener"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/is-listener/#islistener","text":"[Android] open fun isListener (): Boolean Informs if the currently logged in participant is in a listening mode.","title":"isListener"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/is-listener/#return","text":"informs if there is a listener in the current session.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/is-own-video-started/","text":"// sdk / com.voxeet.sdk.services.conference.information / ConferenceInformation / isOwnVideoStarted isOwnVideoStarted \u00b6 [Android] open fun isOwnVideoStarted (): Boolean Gets information whether th local participant's video is enabled. This method is helpful in dealing with new privacy features in Android P+. Return \u00b6 a boolean indicating the proper state.","title":"Is own video started"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/is-own-video-started/#isownvideostarted","text":"[Android] open fun isOwnVideoStarted (): Boolean Gets information whether th local participant's video is enabled. This method is helpful in dealing with new privacy features in Android P+.","title":"isOwnVideoStarted"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/is-own-video-started/#return","text":"a boolean indicating the proper state.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/is-screen-share-on/","text":"// sdk / com.voxeet.sdk.services.conference.information / ConferenceInformation / isScreenShareOn isScreenShareOn \u00b6 [Android] open fun isScreenShareOn (): Boolean Checks if the screen is currently shared from a perspective of a screen share lifecycle. Return \u00b6 the screen share state.","title":"Is screen share on"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/is-screen-share-on/#isscreenshareon","text":"[Android] open fun isScreenShareOn (): Boolean Checks if the screen is currently shared from a perspective of a screen share lifecycle.","title":"isScreenShareOn"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/is-screen-share-on/#return","text":"the screen share state.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/is-spatial-audio/","text":"// sdk / com.voxeet.sdk.services.conference.information / ConferenceInformation / isSpatialAudio isSpatialAudio \u00b6 [Android] open fun isSpatialAudio (): Boolean Get the spatial audio flag for the current participant Return \u00b6 the flag indicating if the spatial audio will be used","title":"Is spatial audio"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/is-spatial-audio/#isspatialaudio","text":"[Android] open fun isSpatialAudio (): Boolean Get the spatial audio flag for the current participant","title":"isSpatialAudio"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/is-spatial-audio/#return","text":"the flag indicating if the spatial audio will be used","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/participant-ids-cached/","text":"// sdk / com.voxeet.sdk.services.conference.information / ConferenceInformation / participantIdsCached participantIdsCached \u00b6 [Android] @ NonNull open val participantIdsCached : Map < String , String >","title":"Participant ids cached"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/participant-ids-cached/#participantidscached","text":"[Android] @ NonNull open val participantIdsCached : Map < String , String >","title":"participantIdsCached"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/video-state/","text":"// sdk / com.voxeet.sdk.services.conference.information / ConferenceInformation / videoState videoState \u00b6 [Android] @ NonNull @get: NonNull open val videoState : MediaState","title":"Video state"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-information/video-state/#videostate","text":"[Android] @ NonNull @get: NonNull open val videoState : MediaState","title":"videoState"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-participant-type/","text":"// sdk / com.voxeet.sdk.services.conference.information / ConferenceParticipantType ConferenceParticipantType \u00b6 [Android] enum ConferenceParticipantType The ConferenceParticipantType model represents the following types of conference participants: Normal participant Listener - a participant who only listens to a conference and does not transmit any audio Broadcaster - an active speaker who transmits audio to other conference participants Functions \u00b6 Name Summary valueOf [Android] open fun valueOf (name: String ): ConferenceParticipantType Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < ConferenceParticipantType > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-participant-type/#conferenceparticipanttype","text":"[Android] enum ConferenceParticipantType The ConferenceParticipantType model represents the following types of conference participants: Normal participant Listener - a participant who only listens to a conference and does not transmit any audio Broadcaster - an active speaker who transmits audio to other conference participants","title":"ConferenceParticipantType"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-participant-type/#functions","text":"Name Summary valueOf [Android] open fun valueOf (name: String ): ConferenceParticipantType Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < ConferenceParticipantType > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-participant-type/value-of/","text":"// sdk / com.voxeet.sdk.services.conference.information / ConferenceParticipantType / valueOf valueOf \u00b6 [Android] open fun valueOf (name: String ): ConferenceParticipantType Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) Return \u00b6 the enum constant with the specified name Throws \u00b6 IllegalArgumentException if this enum type has no constant with the specified name","title":"Value of"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-participant-type/value-of/#valueof","text":"[Android] open fun valueOf (name: String ): ConferenceParticipantType Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)","title":"valueOf"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-participant-type/value-of/#return","text":"the enum constant with the specified name","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-participant-type/value-of/#throws","text":"IllegalArgumentException if this enum type has no constant with the specified name","title":"Throws"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-participant-type/values/","text":"// sdk / com.voxeet.sdk.services.conference.information / ConferenceParticipantType / values values \u00b6 [Android] open fun values (): Array < ConferenceParticipantType > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants. Return \u00b6 an array containing the constants of this enum type, in the order they're declared","title":"Values"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-participant-type/values/#values","text":"[Android] open fun values (): Array < ConferenceParticipantType > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants.","title":"values"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-participant-type/values/#return","text":"an array containing the constants of this enum type, in the order they're declared","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-status/","text":"// sdk / com.voxeet.sdk.services.conference.information / ConferenceStatus ConferenceStatus \u00b6 [Android] enum ConferenceStatus The ConferenceStatus model represents the following conference states: Uninitialized Creating Created Joining Joined Leaving Left Error Destroyed Ended The isValid method checks if the state is valid. Functions \u00b6 Name Summary isValid [Android] open fun isValid (): Boolean Checks if the current state is valid. valueOf [Android] open fun valueOf (name: String ): ConferenceStatus Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < ConferenceStatus > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-status/#conferencestatus","text":"[Android] enum ConferenceStatus The ConferenceStatus model represents the following conference states: Uninitialized Creating Created Joining Joined Leaving Left Error Destroyed Ended The isValid method checks if the state is valid.","title":"ConferenceStatus"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-status/#functions","text":"Name Summary isValid [Android] open fun isValid (): Boolean Checks if the current state is valid. valueOf [Android] open fun valueOf (name: String ): ConferenceStatus Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < ConferenceStatus > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-status/is-valid/","text":"// sdk / com.voxeet.sdk.services.conference.information / ConferenceStatus / isValid isValid \u00b6 [Android] open fun isValid (): Boolean Checks if the current state is valid. It corresponds to the attended conference. Return \u00b6 a boolean indicating if a conference is valid.","title":"Is valid"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-status/is-valid/#isvalid","text":"[Android] open fun isValid (): Boolean Checks if the current state is valid. It corresponds to the attended conference.","title":"isValid"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-status/is-valid/#return","text":"a boolean indicating if a conference is valid.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-status/value-of/","text":"// sdk / com.voxeet.sdk.services.conference.information / ConferenceStatus / valueOf valueOf \u00b6 [Android] open fun valueOf (name: String ): ConferenceStatus Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) Return \u00b6 the enum constant with the specified name Throws \u00b6 IllegalArgumentException if this enum type has no constant with the specified name","title":"Value of"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-status/value-of/#valueof","text":"[Android] open fun valueOf (name: String ): ConferenceStatus Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)","title":"valueOf"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-status/value-of/#return","text":"the enum constant with the specified name","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-status/value-of/#throws","text":"IllegalArgumentException if this enum type has no constant with the specified name","title":"Throws"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-status/values/","text":"// sdk / com.voxeet.sdk.services.conference.information / ConferenceStatus / values values \u00b6 [Android] open fun values (): Array < ConferenceStatus > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants. Return \u00b6 an array containing the constants of this enum type, in the order they're declared","title":"Values"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-status/values/#values","text":"[Android] open fun values (): Array < ConferenceStatus > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants.","title":"values"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-conference-status/values/#return","text":"an array containing the constants of this enum type, in the order they're declared","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-local-conference-type/","text":"// sdk / com.voxeet.sdk.services.conference.information / LocalConferenceType LocalConferenceType \u00b6 [Android] enum LocalConferenceType The LocalConferenceType model represents the locally known conference types such as none, conference, and replay. Functions \u00b6 Name Summary valueOf [Android] open fun valueOf (name: String ): LocalConferenceType Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < LocalConferenceType > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-local-conference-type/#localconferencetype","text":"[Android] enum LocalConferenceType The LocalConferenceType model represents the locally known conference types such as none, conference, and replay.","title":"LocalConferenceType"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-local-conference-type/#functions","text":"Name Summary valueOf [Android] open fun valueOf (name: String ): LocalConferenceType Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < LocalConferenceType > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-local-conference-type/value-of/","text":"// sdk / com.voxeet.sdk.services.conference.information / LocalConferenceType / valueOf valueOf \u00b6 [Android] open fun valueOf (name: String ): LocalConferenceType Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) Return \u00b6 the enum constant with the specified name Throws \u00b6 IllegalArgumentException if this enum type has no constant with the specified name","title":"Value of"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-local-conference-type/value-of/#valueof","text":"[Android] open fun valueOf (name: String ): LocalConferenceType Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)","title":"valueOf"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-local-conference-type/value-of/#return","text":"the enum constant with the specified name","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-local-conference-type/value-of/#throws","text":"IllegalArgumentException if this enum type has no constant with the specified name","title":"Throws"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-local-conference-type/values/","text":"// sdk / com.voxeet.sdk.services.conference.information / LocalConferenceType / values values \u00b6 [Android] open fun values (): Array < LocalConferenceType > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants. Return \u00b6 an array containing the constants of this enum type, in the order they're declared","title":"Values"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-local-conference-type/values/#values","text":"[Android] open fun values (): Array < LocalConferenceType > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants.","title":"values"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.information/-local-conference-type/values/#return","text":"an array containing the constants of this enum type, in the order they're declared","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.spatialisation/","text":"// sdk / com.voxeet.sdk.services.conference.spatialisation Package-level declarations \u00b6 Types \u00b6 Name Summary SpatialAudioStyle [Android] enum SpatialAudioStyle The SpatialAudioStyle model defines how the spatial location is communicated between SDK and the Dolby.io server.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.spatialisation/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.spatialisation/#types","text":"Name Summary SpatialAudioStyle [Android] enum SpatialAudioStyle The SpatialAudioStyle model defines how the spatial location is communicated between SDK and the Dolby.io server.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.spatialisation/-spatial-audio-style/","text":"// sdk / com.voxeet.sdk.services.conference.spatialisation / SpatialAudioStyle SpatialAudioStyle \u00b6 [Android] enum SpatialAudioStyle The SpatialAudioStyle model defines how the spatial location is communicated between SDK and the Dolby.io server. The style can be defined during a conference creation, although its value for each participant depends on the participant's spatial audio setting. The shared spatial audio style is only available for participants who joined a conference with spatial audio enabled. Setting the spatial audio style is supported only on SDK 3.6 and later. The earlier SDK versions support only the individual mode and do not allow participants to join conferences created with the spatial audio style set to shared. The following table lists the possible spatial audio style settings for the local participant: | Create: SpatialAudioStyle | Join: SpatialAudio | Result | |---------------------------|--------------------|-----------------------------------| | Individual | True | Success | | Individual | False | Success | | Shared | True | Success only on SDK 3.6 and later | | Shared | False | Rejected | | Disabled | True | Rejected | | Disabled | False | Success | Entries \u00b6 INDIVIDUAL [Android] INDIVIDUAL Sets the spatial location that is based on the spatial scene, local participant's position, and remote participants' positions. This allows a client to control the position using the local, self-contained logic. However, the client has to communicate a large set of requests constantly to the server, which increases network traffic, log subsystem pressure, and complexity of the client-side application. This option is selected by default. We recommend this mode for A/V congruence scenarios in video conferencing and similar applications. SHARED [Android] SHARED Sets the spatial location that is based on the spatial scene and the local participant's position, while the relative positions among participants are calculated by the Dolby.io server. This way, the spatial scene is shared by all participants, so that each client can set a position and participate in the shared scene. This approach simplifies communication between the client and the server and decreases network traffic. We recommend this mode for 2D virtual space scenarios, such as 2D games, trade shows, water cooler scenarios, etc. DISABLED [Android] DISABLED Disables spatial audio in a conference. Functions \u00b6 Name Summary valueOf [Android] open fun valueOf (name: String ): SpatialAudioStyle Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < SpatialAudioStyle > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.spatialisation/-spatial-audio-style/#spatialaudiostyle","text":"[Android] enum SpatialAudioStyle The SpatialAudioStyle model defines how the spatial location is communicated between SDK and the Dolby.io server. The style can be defined during a conference creation, although its value for each participant depends on the participant's spatial audio setting. The shared spatial audio style is only available for participants who joined a conference with spatial audio enabled. Setting the spatial audio style is supported only on SDK 3.6 and later. The earlier SDK versions support only the individual mode and do not allow participants to join conferences created with the spatial audio style set to shared. The following table lists the possible spatial audio style settings for the local participant: | Create: SpatialAudioStyle | Join: SpatialAudio | Result | |---------------------------|--------------------|-----------------------------------| | Individual | True | Success | | Individual | False | Success | | Shared | True | Success only on SDK 3.6 and later | | Shared | False | Rejected | | Disabled | True | Rejected | | Disabled | False | Success |","title":"SpatialAudioStyle"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.spatialisation/-spatial-audio-style/#entries","text":"INDIVIDUAL [Android] INDIVIDUAL Sets the spatial location that is based on the spatial scene, local participant's position, and remote participants' positions. This allows a client to control the position using the local, self-contained logic. However, the client has to communicate a large set of requests constantly to the server, which increases network traffic, log subsystem pressure, and complexity of the client-side application. This option is selected by default. We recommend this mode for A/V congruence scenarios in video conferencing and similar applications. SHARED [Android] SHARED Sets the spatial location that is based on the spatial scene and the local participant's position, while the relative positions among participants are calculated by the Dolby.io server. This way, the spatial scene is shared by all participants, so that each client can set a position and participate in the shared scene. This approach simplifies communication between the client and the server and decreases network traffic. We recommend this mode for 2D virtual space scenarios, such as 2D games, trade shows, water cooler scenarios, etc. DISABLED [Android] DISABLED Disables spatial audio in a conference.","title":"Entries"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.spatialisation/-spatial-audio-style/#functions","text":"Name Summary valueOf [Android] open fun valueOf (name: String ): SpatialAudioStyle Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < SpatialAudioStyle > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.spatialisation/-spatial-audio-style/value-of/","text":"// sdk / com.voxeet.sdk.services.conference.spatialisation / SpatialAudioStyle / valueOf valueOf \u00b6 [Android] open fun valueOf (name: String ): SpatialAudioStyle Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) Return \u00b6 the enum constant with the specified name Throws \u00b6 IllegalArgumentException if this enum type has no constant with the specified name","title":"Value of"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.spatialisation/-spatial-audio-style/value-of/#valueof","text":"[Android] open fun valueOf (name: String ): SpatialAudioStyle Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)","title":"valueOf"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.spatialisation/-spatial-audio-style/value-of/#return","text":"the enum constant with the specified name","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.spatialisation/-spatial-audio-style/value-of/#throws","text":"IllegalArgumentException if this enum type has no constant with the specified name","title":"Throws"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.spatialisation/-spatial-audio-style/values/","text":"// sdk / com.voxeet.sdk.services.conference.spatialisation / SpatialAudioStyle / values values \u00b6 [Android] open fun values (): Array < SpatialAudioStyle > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants. Return \u00b6 an array containing the constants of this enum type, in the order they're declared","title":"Values"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.spatialisation/-spatial-audio-style/values/#values","text":"[Android] open fun values (): Array < SpatialAudioStyle > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants.","title":"values"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.spatialisation/-spatial-audio-style/values/#return","text":"an array containing the constants of this enum type, in the order they're declared","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.spatialisation/-spatial-audio-style/-d-i-s-a-b-l-e-d/","text":"// sdk / com.voxeet.sdk.services.conference.spatialisation / SpatialAudioStyle / DISABLED DISABLED \u00b6 [Android] DISABLED Disables spatial audio in a conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.spatialisation/-spatial-audio-style/-d-i-s-a-b-l-e-d/#disabled","text":"[Android] DISABLED Disables spatial audio in a conference.","title":"DISABLED"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.spatialisation/-spatial-audio-style/-i-n-d-i-v-i-d-u-a-l/","text":"// sdk / com.voxeet.sdk.services.conference.spatialisation / SpatialAudioStyle / INDIVIDUAL INDIVIDUAL \u00b6 [Android] INDIVIDUAL Sets the spatial location that is based on the spatial scene, local participant's position, and remote participants' positions. This allows a client to control the position using the local, self-contained logic. However, the client has to communicate a large set of requests constantly to the server, which increases network traffic, log subsystem pressure, and complexity of the client-side application. This option is selected by default. We recommend this mode for A/V congruence scenarios in video conferencing and similar applications.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.spatialisation/-spatial-audio-style/-i-n-d-i-v-i-d-u-a-l/#individual","text":"[Android] INDIVIDUAL Sets the spatial location that is based on the spatial scene, local participant's position, and remote participants' positions. This allows a client to control the position using the local, self-contained logic. However, the client has to communicate a large set of requests constantly to the server, which increases network traffic, log subsystem pressure, and complexity of the client-side application. This option is selected by default. We recommend this mode for A/V congruence scenarios in video conferencing and similar applications.","title":"INDIVIDUAL"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.spatialisation/-spatial-audio-style/-s-h-a-r-e-d/","text":"// sdk / com.voxeet.sdk.services.conference.spatialisation / SpatialAudioStyle / SHARED SHARED \u00b6 [Android] SHARED Sets the spatial location that is based on the spatial scene and the local participant's position, while the relative positions among participants are calculated by the Dolby.io server. This way, the spatial scene is shared by all participants, so that each client can set a position and participate in the shared scene. This approach simplifies communication between the client and the server and decreases network traffic. We recommend this mode for 2D virtual space scenarios, such as 2D games, trade shows, water cooler scenarios, etc.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.conference.spatialisation/-spatial-audio-style/-s-h-a-r-e-d/#shared","text":"[Android] SHARED Sets the spatial location that is based on the spatial scene and the local participant's position, while the relative positions among participants are calculated by the Dolby.io server. This way, the spatial scene is shared by all participants, so that each client can set a position and participate in the shared scene. This approach simplifies communication between the client and the server and decreases network traffic. We recommend this mode for 2D virtual space scenarios, such as 2D games, trade shows, water cooler scenarios, etc.","title":"SHARED"},{"location":"android-reference/sdk/com.voxeet.sdk.services.notification/","text":"// sdk / com.voxeet.sdk.services.notification Package-level declarations \u00b6 Types \u00b6 Name Summary INotificationTokenProvider [Android] interface INotificationTokenProvider The INotificationTokenProvider model provides the firebase push notification token (currently the only one supported by Dolby.io). NotificationTokenHolderFactory [Android] open class NotificationTokenHolderFactory The NotificationTokenHolderFactory model is responsible for implementing notifications and setting providers for managing push notifications.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.notification/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.services.notification/#types","text":"Name Summary INotificationTokenProvider [Android] interface INotificationTokenProvider The INotificationTokenProvider model provides the firebase push notification token (currently the only one supported by Dolby.io). NotificationTokenHolderFactory [Android] open class NotificationTokenHolderFactory The NotificationTokenHolderFactory model is responsible for implementing notifications and setting providers for managing push notifications.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.services.notification/-i-notification-token-provider/","text":"// sdk / com.voxeet.sdk.services.notification / INotificationTokenProvider INotificationTokenProvider \u00b6 [Android] interface INotificationTokenProvider The INotificationTokenProvider model provides the firebase push notification token (currently the only one supported by Dolby.io). It is also responsible for informing if it is allowed to upload the token , and it logs strings related to notifications. Functions \u00b6 Name Summary getToken [Android] @ NonNull abstract fun getToken (): Promise< String > The Firebase token obtained through the SDK Firebase. isTokenUploadAllowed [Android] abstract fun isTokenUploadAllowed (): Boolean Informs whether the SDK can upload the token to Dolby.io. log [Android] abstract fun log (@ NonNull log: String ) Logs strings related to notifications.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.notification/-i-notification-token-provider/#inotificationtokenprovider","text":"[Android] interface INotificationTokenProvider The INotificationTokenProvider model provides the firebase push notification token (currently the only one supported by Dolby.io). It is also responsible for informing if it is allowed to upload the token , and it logs strings related to notifications.","title":"INotificationTokenProvider"},{"location":"android-reference/sdk/com.voxeet.sdk.services.notification/-i-notification-token-provider/#functions","text":"Name Summary getToken [Android] @ NonNull abstract fun getToken (): Promise< String > The Firebase token obtained through the SDK Firebase. isTokenUploadAllowed [Android] abstract fun isTokenUploadAllowed (): Boolean Informs whether the SDK can upload the token to Dolby.io. log [Android] abstract fun log (@ NonNull log: String ) Logs strings related to notifications.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services.notification/-i-notification-token-provider/get-token/","text":"// sdk / com.voxeet.sdk.services.notification / INotificationTokenProvider / getToken getToken \u00b6 [Android] @ NonNull abstract fun getToken (): Promise< String > The Firebase token obtained through the SDK Firebase. Return \u00b6 The promise which resolves with a token or a null value.","title":"Get token"},{"location":"android-reference/sdk/com.voxeet.sdk.services.notification/-i-notification-token-provider/get-token/#gettoken","text":"[Android] @ NonNull abstract fun getToken (): Promise< String > The Firebase token obtained through the SDK Firebase.","title":"getToken"},{"location":"android-reference/sdk/com.voxeet.sdk.services.notification/-i-notification-token-provider/get-token/#return","text":"The promise which resolves with a token or a null value.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.notification/-i-notification-token-provider/is-token-upload-allowed/","text":"// sdk / com.voxeet.sdk.services.notification / INotificationTokenProvider / isTokenUploadAllowed isTokenUploadAllowed \u00b6 [Android] abstract fun isTokenUploadAllowed (): Boolean Informs whether the SDK can upload the token to Dolby.io. Return \u00b6 the permission flag.","title":"Is token upload allowed"},{"location":"android-reference/sdk/com.voxeet.sdk.services.notification/-i-notification-token-provider/is-token-upload-allowed/#istokenuploadallowed","text":"[Android] abstract fun isTokenUploadAllowed (): Boolean Informs whether the SDK can upload the token to Dolby.io.","title":"isTokenUploadAllowed"},{"location":"android-reference/sdk/com.voxeet.sdk.services.notification/-i-notification-token-provider/is-token-upload-allowed/#return","text":"the permission flag.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.notification/-i-notification-token-provider/log/","text":"// sdk / com.voxeet.sdk.services.notification / INotificationTokenProvider / log log \u00b6 [Android] abstract fun log (@ NonNull log: String ) Logs strings related to notifications. Parameters \u00b6 Android log string for logging in to the logcat bridge","title":"Log"},{"location":"android-reference/sdk/com.voxeet.sdk.services.notification/-i-notification-token-provider/log/#log","text":"[Android] abstract fun log (@ NonNull log: String ) Logs strings related to notifications.","title":"log"},{"location":"android-reference/sdk/com.voxeet.sdk.services.notification/-i-notification-token-provider/log/#parameters","text":"Android log string for logging in to the logcat bridge","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services.notification/-notification-token-holder-factory/","text":"// sdk / com.voxeet.sdk.services.notification / NotificationTokenHolderFactory NotificationTokenHolderFactory \u00b6 [Android] open class NotificationTokenHolderFactory The NotificationTokenHolderFactory model is responsible for implementing notifications and setting providers for managing push notifications. This model requires the compile &quot;com.voxeet.sdk:toolkit-firebase:0.0.2&quot; UXKit module and the customization of the development implementation, as in this example: INotificationTokenProvider provider = new MyOwnFirebaseTokenProvider (); NotificationTokenHolderFactory . provider = provider ; Note: Use this model before logging in, preferably in a ComponentProvider or on the application level.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.notification/-notification-token-holder-factory/#notificationtokenholderfactory","text":"[Android] open class NotificationTokenHolderFactory The NotificationTokenHolderFactory model is responsible for implementing notifications and setting providers for managing push notifications. This model requires the compile &quot;com.voxeet.sdk:toolkit-firebase:0.0.2&quot; UXKit module and the customization of the development implementation, as in this example: INotificationTokenProvider provider = new MyOwnFirebaseTokenProvider (); NotificationTokenHolderFactory . provider = provider ; Note: Use this model before logging in, preferably in a ComponentProvider or on the application level.","title":"NotificationTokenHolderFactory"},{"location":"android-reference/sdk/com.voxeet.sdk.services.notification.events/","text":"// sdk / com.voxeet.sdk.services.notification.events Package-level declarations \u00b6 Types \u00b6 Name Summary ConferenceStatusNotificationEvent [Android] open class ConferenceStatusNotificationEvent Informs the application about the status of the subscribed conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.notification.events/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.services.notification.events/#types","text":"Name Summary ConferenceStatusNotificationEvent [Android] open class ConferenceStatusNotificationEvent Informs the application about the status of the subscribed conference.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.services.notification.events/-conference-status-notification-event/","text":"// sdk / com.voxeet.sdk.services.notification.events / ConferenceStatusNotificationEvent ConferenceStatusNotificationEvent \u00b6 [Android] open class ConferenceStatusNotificationEvent Informs the application about the status of the subscribed conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.notification.events/-conference-status-notification-event/#conferencestatusnotificationevent","text":"[Android] open class ConferenceStatusNotificationEvent Informs the application about the status of the subscribed conference.","title":"ConferenceStatusNotificationEvent"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation/","text":"// sdk / com.voxeet.sdk.services.presentation Package-level declarations \u00b6 Types \u00b6 Name Summary PresentationState [Android] enum PresentationState The PresentationState model represents all possible presentation states.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation/#types","text":"Name Summary PresentationState [Android] enum PresentationState The PresentationState model represents all possible presentation states.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation/-presentation-state/","text":"// sdk / com.voxeet.sdk.services.presentation / PresentationState PresentationState \u00b6 [Android] enum PresentationState The PresentationState model represents all possible presentation states. Each presentation has a \"started\" state after the creation. The state changes as presented in the following diagram: started -> play started -> pause started -> seek started -> stop play -> pause play -> seek play -> stop pause -> play pause -> seek pause -> stop seek -> pause seek -> play seek -> seek seek -> stop stop -> terminal Functions \u00b6 Name Summary valueOf [Android] open fun valueOf (name: String ): PresentationState Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < PresentationState > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation/-presentation-state/#presentationstate","text":"[Android] enum PresentationState The PresentationState model represents all possible presentation states. Each presentation has a \"started\" state after the creation. The state changes as presented in the following diagram: started -> play started -> pause started -> seek started -> stop play -> pause play -> seek play -> stop pause -> play pause -> seek pause -> stop seek -> pause seek -> play seek -> seek seek -> stop stop -> terminal","title":"PresentationState"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation/-presentation-state/#functions","text":"Name Summary valueOf [Android] open fun valueOf (name: String ): PresentationState Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < PresentationState > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation/-presentation-state/value-of/","text":"// sdk / com.voxeet.sdk.services.presentation / PresentationState / valueOf valueOf \u00b6 [Android] open fun valueOf (name: String ): PresentationState Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) Return \u00b6 the enum constant with the specified name Throws \u00b6 IllegalArgumentException if this enum type has no constant with the specified name","title":"Value of"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation/-presentation-state/value-of/#valueof","text":"[Android] open fun valueOf (name: String ): PresentationState Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)","title":"valueOf"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation/-presentation-state/value-of/#return","text":"the enum constant with the specified name","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation/-presentation-state/value-of/#throws","text":"IllegalArgumentException if this enum type has no constant with the specified name","title":"Throws"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation/-presentation-state/values/","text":"// sdk / com.voxeet.sdk.services.presentation / PresentationState / values values \u00b6 [Android] open fun values (): Array < PresentationState > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants. Return \u00b6 an array containing the constants of this enum type, in the order they're declared","title":"Values"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation/-presentation-state/values/#values","text":"[Android] open fun values (): Array < PresentationState > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants.","title":"values"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation/-presentation-state/values/#return","text":"an array containing the constants of this enum type, in the order they're declared","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation.file/","text":"// sdk / com.voxeet.sdk.services.presentation.file Package-level declarations \u00b6 Types \u00b6 Name Summary FilePresentation [Android] open class FilePresentation The FilePresentation model gathers information about files presented during conferences.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation.file/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation.file/#types","text":"Name Summary FilePresentation [Android] open class FilePresentation The FilePresentation model gathers information about files presented during conferences.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation.file/-file-presentation/","text":"// sdk / com.voxeet.sdk.services.presentation.file / FilePresentation FilePresentation \u00b6 [Android] open class FilePresentation The FilePresentation model gathers information about files presented during conferences. This model is emitted when the presenter changes the state of the presentation. The model includes information about the current state , currently displayed page , and the total number of pages . Properties \u00b6 Name Summary nbPage [Android] open var nbPage : Int The number of pages inside the corresponding FilePresentation instance. page [Android] open var page : Int The currently displayed page. state [Android] open var state : PresentationState The current state of the presentation.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation.file/-file-presentation/#filepresentation","text":"[Android] open class FilePresentation The FilePresentation model gathers information about files presented during conferences. This model is emitted when the presenter changes the state of the presentation. The model includes information about the current state , currently displayed page , and the total number of pages .","title":"FilePresentation"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation.file/-file-presentation/#properties","text":"Name Summary nbPage [Android] open var nbPage : Int The number of pages inside the corresponding FilePresentation instance. page [Android] open var page : Int The currently displayed page. state [Android] open var state : PresentationState The current state of the presentation.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation.file/-file-presentation/nb-page/","text":"// sdk / com.voxeet.sdk.services.presentation.file / FilePresentation / nbPage nbPage \u00b6 [Android] open var nbPage : Int The number of pages inside the corresponding FilePresentation instance.","title":"Nb page"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation.file/-file-presentation/nb-page/#nbpage","text":"[Android] open var nbPage : Int The number of pages inside the corresponding FilePresentation instance.","title":"nbPage"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation.file/-file-presentation/page/","text":"// sdk / com.voxeet.sdk.services.presentation.file / FilePresentation / page page \u00b6 [Android] open var page : Int The currently displayed page.","title":"Page"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation.file/-file-presentation/page/#page","text":"[Android] open var page : Int The currently displayed page.","title":"page"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation.file/-file-presentation/state/","text":"// sdk / com.voxeet.sdk.services.presentation.file / FilePresentation / state state \u00b6 [Android] open var state : PresentationState The current state of the presentation.","title":"State"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation.file/-file-presentation/state/#state","text":"[Android] open var state : PresentationState The current state of the presentation.","title":"state"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation.video/","text":"// sdk / com.voxeet.sdk.services.presentation.video Package-level declarations \u00b6 Types \u00b6 Name Summary VideoPresentation [Android] open class VideoPresentation The VideoPresentation model gathers information related to video presentations, such as URL informing about the location of the video file, presentation state, and the latest timestamp.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation.video/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation.video/#types","text":"Name Summary VideoPresentation [Android] open class VideoPresentation The VideoPresentation model gathers information related to video presentations, such as URL informing about the location of the video file, presentation state, and the latest timestamp.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation.video/-video-presentation/","text":"// sdk / com.voxeet.sdk.services.presentation.video / VideoPresentation VideoPresentation \u00b6 [Android] open class VideoPresentation The VideoPresentation model gathers information related to video presentations, such as URL informing about the location of the video file, presentation state, and the latest timestamp. Properties \u00b6 Name Summary lastSeekTimestamp [Android] open var lastSeekTimestamp : Long The latest timestamp informing about the current video position. participantId [Android] open var participantId : String The ID of the participant who shares a video. state [Android] open var state : PresentationState The current state of the video presentation. url [Android] open var url : String The URL informing about the location of the presented video.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation.video/-video-presentation/#videopresentation","text":"[Android] open class VideoPresentation The VideoPresentation model gathers information related to video presentations, such as URL informing about the location of the video file, presentation state, and the latest timestamp.","title":"VideoPresentation"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation.video/-video-presentation/#properties","text":"Name Summary lastSeekTimestamp [Android] open var lastSeekTimestamp : Long The latest timestamp informing about the current video position. participantId [Android] open var participantId : String The ID of the participant who shares a video. state [Android] open var state : PresentationState The current state of the video presentation. url [Android] open var url : String The URL informing about the location of the presented video.","title":"Properties"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation.video/-video-presentation/last-seek-timestamp/","text":"// sdk / com.voxeet.sdk.services.presentation.video / VideoPresentation / lastSeekTimestamp lastSeekTimestamp \u00b6 [Android] open var lastSeekTimestamp : Long The latest timestamp informing about the current video position.","title":"Last seek timestamp"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation.video/-video-presentation/last-seek-timestamp/#lastseektimestamp","text":"[Android] open var lastSeekTimestamp : Long The latest timestamp informing about the current video position.","title":"lastSeekTimestamp"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation.video/-video-presentation/participant-id/","text":"// sdk / com.voxeet.sdk.services.presentation.video / VideoPresentation / participantId participantId \u00b6 [Android] open var participantId : String The ID of the participant who shares a video.","title":"Participant id"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation.video/-video-presentation/participant-id/#participantid","text":"[Android] open var participantId : String The ID of the participant who shares a video.","title":"participantId"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation.video/-video-presentation/state/","text":"// sdk / com.voxeet.sdk.services.presentation.video / VideoPresentation / state state \u00b6 [Android] open var state : PresentationState The current state of the video presentation.","title":"State"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation.video/-video-presentation/state/#state","text":"[Android] open var state : PresentationState The current state of the video presentation.","title":"state"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation.video/-video-presentation/url/","text":"// sdk / com.voxeet.sdk.services.presentation.video / VideoPresentation / url url \u00b6 [Android] open var url : String The URL informing about the location of the presented video.","title":"Url"},{"location":"android-reference/sdk/com.voxeet.sdk.services.presentation.video/-video-presentation/url/#url","text":"[Android] open var url : String The URL informing about the location of the presented video.","title":"url"},{"location":"android-reference/sdk/com.voxeet.sdk.services.screenshare/","text":"// sdk / com.voxeet.sdk.services.screenshare Package-level declarations \u00b6 Types \u00b6 Name Summary RequestScreenSharePermissionEvent [Android] open class RequestScreenSharePermissionEvent Emitted when the sendUserPermissionRequest method is received.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.screenshare/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.services.screenshare/#types","text":"Name Summary RequestScreenSharePermissionEvent [Android] open class RequestScreenSharePermissionEvent Emitted when the sendUserPermissionRequest method is received.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.services.screenshare/-request-screen-share-permission-event/","text":"// sdk / com.voxeet.sdk.services.screenshare / RequestScreenSharePermissionEvent RequestScreenSharePermissionEvent \u00b6 [Android] open class RequestScreenSharePermissionEvent Emitted when the sendUserPermissionRequest method is received. It asks the participant for a permission to share the screen.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.screenshare/-request-screen-share-permission-event/#requestscreensharepermissionevent","text":"[Android] open class RequestScreenSharePermissionEvent Emitted when the sendUserPermissionRequest method is received. It asks the participant for a permission to share the screen.","title":"RequestScreenSharePermissionEvent"},{"location":"android-reference/sdk/com.voxeet.sdk.services.simulcast/","text":"// sdk / com.voxeet.sdk.services.simulcast Package-level declarations \u00b6 Types \u00b6 Name Summary ParticipantQuality [Android] open class ParticipantQuality The ParticipantQuality model enables choosing quality of Simulcast video streams received by conference participants. Quality [Android] enum Quality The Quality model represents possible quality options of the received Simulcast video streams, such as: - High Definition (HD) - Medium Definition (MD) - Standard Definition (SD)","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.simulcast/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.services.simulcast/#types","text":"Name Summary ParticipantQuality [Android] open class ParticipantQuality The ParticipantQuality model enables choosing quality of Simulcast video streams received by conference participants. Quality [Android] enum Quality The Quality model represents possible quality options of the received Simulcast video streams, such as: - High Definition (HD) - Medium Definition (MD) - Standard Definition (SD)","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.services.simulcast/-participant-quality/","text":"// sdk / com.voxeet.sdk.services.simulcast / ParticipantQuality ParticipantQuality \u00b6 [Android] open class ParticipantQuality The ParticipantQuality model enables choosing quality of Simulcast video streams received by conference participants. Constructors \u00b6 ParticipantQuality [Android] open fun ParticipantQuality (@ NonNull quality: Quality ) Creates a holder to set the quality of received Simulcast video streams for all conference participants. ParticipantQuality [Android] open fun ParticipantQuality (@ NonNull id: String , @ NonNull quality: Quality ) Creates a holder to set the quality of received Simulcast video streams for specific conference participants.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.simulcast/-participant-quality/#participantquality","text":"[Android] open class ParticipantQuality The ParticipantQuality model enables choosing quality of Simulcast video streams received by conference participants.","title":"ParticipantQuality"},{"location":"android-reference/sdk/com.voxeet.sdk.services.simulcast/-participant-quality/#constructors","text":"ParticipantQuality [Android] open fun ParticipantQuality (@ NonNull quality: Quality ) Creates a holder to set the quality of received Simulcast video streams for all conference participants. ParticipantQuality [Android] open fun ParticipantQuality (@ NonNull id: String , @ NonNull quality: Quality ) Creates a holder to set the quality of received Simulcast video streams for specific conference participants.","title":"Constructors"},{"location":"android-reference/sdk/com.voxeet.sdk.services.simulcast/-participant-quality/-participant-quality/","text":"// sdk / com.voxeet.sdk.services.simulcast / ParticipantQuality / ParticipantQuality ParticipantQuality \u00b6 [Android] open fun ParticipantQuality (@ NonNull quality: Quality ) Creates a holder to set the quality of received Simulcast video streams for all conference participants. Parameters \u00b6 Android quality expected quality for all conference participants that are not set in the same call [Android] open fun ParticipantQuality (@ NonNull id: String , @ NonNull quality: Quality ) Creates a holder to set the quality of received Simulcast video streams for specific conference participants. Parameters \u00b6 Android id participant ID quality expected quality for the specific conference participant","title":" participant quality"},{"location":"android-reference/sdk/com.voxeet.sdk.services.simulcast/-participant-quality/-participant-quality/#participantquality","text":"[Android] open fun ParticipantQuality (@ NonNull quality: Quality ) Creates a holder to set the quality of received Simulcast video streams for all conference participants.","title":"ParticipantQuality"},{"location":"android-reference/sdk/com.voxeet.sdk.services.simulcast/-participant-quality/-participant-quality/#parameters","text":"Android quality expected quality for all conference participants that are not set in the same call [Android] open fun ParticipantQuality (@ NonNull id: String , @ NonNull quality: Quality ) Creates a holder to set the quality of received Simulcast video streams for specific conference participants.","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services.simulcast/-participant-quality/-participant-quality/#parameters_1","text":"Android id participant ID quality expected quality for the specific conference participant","title":"Parameters"},{"location":"android-reference/sdk/com.voxeet.sdk.services.simulcast/-quality/","text":"// sdk / com.voxeet.sdk.services.simulcast / Quality Quality \u00b6 [Android] enum Quality The Quality model represents possible quality options of the received Simulcast video streams, such as: High Definition (HD) Medium Definition (MD) Standard Definition (SD) Functions \u00b6 Name Summary valueOf [Android] open fun valueOf (name: String ): Quality Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < Quality > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.simulcast/-quality/#quality","text":"[Android] enum Quality The Quality model represents possible quality options of the received Simulcast video streams, such as: High Definition (HD) Medium Definition (MD) Standard Definition (SD)","title":"Quality"},{"location":"android-reference/sdk/com.voxeet.sdk.services.simulcast/-quality/#functions","text":"Name Summary valueOf [Android] open fun valueOf (name: String ): Quality Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < Quality > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services.simulcast/-quality/value-of/","text":"// sdk / com.voxeet.sdk.services.simulcast / Quality / valueOf valueOf \u00b6 [Android] open fun valueOf (name: String ): Quality Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) Return \u00b6 the enum constant with the specified name Throws \u00b6 IllegalArgumentException if this enum type has no constant with the specified name","title":"Value of"},{"location":"android-reference/sdk/com.voxeet.sdk.services.simulcast/-quality/value-of/#valueof","text":"[Android] open fun valueOf (name: String ): Quality Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)","title":"valueOf"},{"location":"android-reference/sdk/com.voxeet.sdk.services.simulcast/-quality/value-of/#return","text":"the enum constant with the specified name","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.simulcast/-quality/value-of/#throws","text":"IllegalArgumentException if this enum type has no constant with the specified name","title":"Throws"},{"location":"android-reference/sdk/com.voxeet.sdk.services.simulcast/-quality/values/","text":"// sdk / com.voxeet.sdk.services.simulcast / Quality / values values \u00b6 [Android] open fun values (): Array < Quality > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants. Return \u00b6 an array containing the constants of this enum type, in the order they're declared","title":"Values"},{"location":"android-reference/sdk/com.voxeet.sdk.services.simulcast/-quality/values/#values","text":"[Android] open fun values (): Array < Quality > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants.","title":"values"},{"location":"android-reference/sdk/com.voxeet.sdk.services.simulcast/-quality/values/#return","text":"an array containing the constants of this enum type, in the order they're declared","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.video/","text":"// sdk / com.voxeet.sdk.services.video Package-level declarations \u00b6 Types \u00b6 Name Summary LocalVideo [Android] interface LocalVideo The LocalVideo model allows enabling and disabling the local participant's video. RemoteVideo [Android] interface RemoteVideo The RemoteVideo model allows the local participant to locally start and stop remote participants video transmission.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.video/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.services.video/#types","text":"Name Summary LocalVideo [Android] interface LocalVideo The LocalVideo model allows enabling and disabling the local participant's video. RemoteVideo [Android] interface RemoteVideo The RemoteVideo model allows the local participant to locally start and stop remote participants video transmission.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.services.video/-local-video/","text":"// sdk / com.voxeet.sdk.services.video / LocalVideo LocalVideo \u00b6 [Android] interface LocalVideo The LocalVideo model allows enabling and disabling the local participant's video. This model is supported only in SDK 3.7 and later. Functions \u00b6 Name Summary start [Android] @ NonNull abstract fun start (): Promise< Boolean > Enables the local participant's video and sends the video to a conference. stop [Android] @ NonNull abstract fun stop (): Promise< Boolean > Disables the local participant's video and stops sending the video to a conference.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.video/-local-video/#localvideo","text":"[Android] interface LocalVideo The LocalVideo model allows enabling and disabling the local participant's video. This model is supported only in SDK 3.7 and later.","title":"LocalVideo"},{"location":"android-reference/sdk/com.voxeet.sdk.services.video/-local-video/#functions","text":"Name Summary start [Android] @ NonNull abstract fun start (): Promise< Boolean > Enables the local participant's video and sends the video to a conference. stop [Android] @ NonNull abstract fun stop (): Promise< Boolean > Disables the local participant's video and stops sending the video to a conference.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services.video/-local-video/start/","text":"// sdk / com.voxeet.sdk.services.video / LocalVideo / start start \u00b6 [Android] @ NonNull abstract fun start (): Promise< Boolean > Enables the local participant's video and sends the video to a conference. Rejection may be caused by the PromisePermissionRefusedEventException or MediaException. If the application does not have a permission to start a video stream, it emits PermissionRefusedEvent.","title":"Start"},{"location":"android-reference/sdk/com.voxeet.sdk.services.video/-local-video/start/#start","text":"[Android] @ NonNull abstract fun start (): Promise< Boolean > Enables the local participant's video and sends the video to a conference. Rejection may be caused by the PromisePermissionRefusedEventException or MediaException. If the application does not have a permission to start a video stream, it emits PermissionRefusedEvent.","title":"start"},{"location":"android-reference/sdk/com.voxeet.sdk.services.video/-local-video/stop/","text":"// sdk / com.voxeet.sdk.services.video / LocalVideo / stop stop \u00b6 [Android] @ NonNull abstract fun stop (): Promise< Boolean > Disables the local participant's video and stops sending the video to a conference. Use this method only when the current participant is at the conference. Otherwise, the application emits an exception in the catch block of the promise. Return \u00b6 The promise to resolve.","title":"Stop"},{"location":"android-reference/sdk/com.voxeet.sdk.services.video/-local-video/stop/#stop","text":"[Android] @ NonNull abstract fun stop (): Promise< Boolean > Disables the local participant's video and stops sending the video to a conference. Use this method only when the current participant is at the conference. Otherwise, the application emits an exception in the catch block of the promise.","title":"stop"},{"location":"android-reference/sdk/com.voxeet.sdk.services.video/-local-video/stop/#return","text":"The promise to resolve.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.services.video/-remote-video/","text":"// sdk / com.voxeet.sdk.services.video / RemoteVideo RemoteVideo \u00b6 [Android] interface RemoteVideo The RemoteVideo model allows the local participant to locally start and stop remote participants video transmission. This model is supported only in SDK 3.7 and later. Functions \u00b6 Name Summary start [Android] @ NonNull abstract fun start (@ NonNull participant: Participant ): Promise< Boolean > If the local participant used the stop method to stop receiving video streams from selected remote participants, the start method allows the participant to start receiving video streams from these participants. stop [Android] @ NonNull abstract fun stop (@ NonNull participant: Participant ): Promise< Boolean > Allows the local participant to stop receiving video from specific remote participants.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.services.video/-remote-video/#remotevideo","text":"[Android] interface RemoteVideo The RemoteVideo model allows the local participant to locally start and stop remote participants video transmission. This model is supported only in SDK 3.7 and later.","title":"RemoteVideo"},{"location":"android-reference/sdk/com.voxeet.sdk.services.video/-remote-video/#functions","text":"Name Summary start [Android] @ NonNull abstract fun start (@ NonNull participant: Participant ): Promise< Boolean > If the local participant used the stop method to stop receiving video streams from selected remote participants, the start method allows the participant to start receiving video streams from these participants. stop [Android] @ NonNull abstract fun stop (@ NonNull participant: Participant ): Promise< Boolean > Allows the local participant to stop receiving video from specific remote participants.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.services.video/-remote-video/start/","text":"// sdk / com.voxeet.sdk.services.video / RemoteVideo / start start \u00b6 [Android] @ NonNull abstract fun start (@ NonNull participant: Participant ): Promise< Boolean > If the local participant used the stop method to stop receiving video streams from selected remote participants, the start method allows the participant to start receiving video streams from these participants. The start method does not impact the video transmission between remote participants and a conference and does not allow the local participant to force sending remote participants\u2019 streams to the conference or to the local participant. The start method requires a few seconds to become effective.","title":"Start"},{"location":"android-reference/sdk/com.voxeet.sdk.services.video/-remote-video/start/#start","text":"[Android] @ NonNull abstract fun start (@ NonNull participant: Participant ): Promise< Boolean > If the local participant used the stop method to stop receiving video streams from selected remote participants, the start method allows the participant to start receiving video streams from these participants. The start method does not impact the video transmission between remote participants and a conference and does not allow the local participant to force sending remote participants\u2019 streams to the conference or to the local participant. The start method requires a few seconds to become effective.","title":"start"},{"location":"android-reference/sdk/com.voxeet.sdk.services.video/-remote-video/stop/","text":"// sdk / com.voxeet.sdk.services.video / RemoteVideo / stop stop \u00b6 [Android] @ NonNull abstract fun stop (@ NonNull participant: Participant ): Promise< Boolean > Allows the local participant to stop receiving video from specific remote participants. This method does not impact audio transmission between remote participants and a conference and does not allow the local participant to stop sending remote participants\u2019 streams to the conference. The stop method requires a few seconds to become effective.","title":"Stop"},{"location":"android-reference/sdk/com.voxeet.sdk.services.video/-remote-video/stop/#stop","text":"[Android] @ NonNull abstract fun stop (@ NonNull participant: Participant ): Promise< Boolean > Allows the local participant to stop receiving video from specific remote participants. This method does not impact audio transmission between remote participants and a conference and does not allow the local participant to stop sending remote participants\u2019 streams to the conference. The stop method requires a few seconds to become effective.","title":"stop"},{"location":"android-reference/sdk/com.voxeet.sdk.utils/","text":"// sdk / com.voxeet.sdk.utils Package-level declarations \u00b6 Types \u00b6 Name Summary AudioType [Android] enum AudioType The AudioType model checks if the application uses a specific type of audio in the auto looping mode.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.utils/#package-level-declarations","text":"","title":"Package-level declarations"},{"location":"android-reference/sdk/com.voxeet.sdk.utils/#types","text":"Name Summary AudioType [Android] enum AudioType The AudioType model checks if the application uses a specific type of audio in the auto looping mode.","title":"Types"},{"location":"android-reference/sdk/com.voxeet.sdk.utils/-audio-type/","text":"// sdk / com.voxeet.sdk.utils / AudioType AudioType \u00b6 [Android] enum AudioType The AudioType model checks if the application uses a specific type of audio in the auto looping mode. Functions \u00b6 Name Summary isLoop [Android] open fun isLoop (): Boolean Checks if the specific type of audio is used in a loop. valueOf [Android] open fun valueOf (name: String ): AudioType Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < AudioType > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Index"},{"location":"android-reference/sdk/com.voxeet.sdk.utils/-audio-type/#audiotype","text":"[Android] enum AudioType The AudioType model checks if the application uses a specific type of audio in the auto looping mode.","title":"AudioType"},{"location":"android-reference/sdk/com.voxeet.sdk.utils/-audio-type/#functions","text":"Name Summary isLoop [Android] open fun isLoop (): Boolean Checks if the specific type of audio is used in a loop. valueOf [Android] open fun valueOf (name: String ): AudioType Returns the enum constant of this type with the specified name. values [Android] open fun values (): Array < AudioType > Returns an array containing the constants of this enum type, in the order they're declared.","title":"Functions"},{"location":"android-reference/sdk/com.voxeet.sdk.utils/-audio-type/is-loop/","text":"// sdk / com.voxeet.sdk.utils / AudioType / isLoop isLoop \u00b6 [Android] open fun isLoop (): Boolean Checks if the specific type of audio is used in a loop. Before calling this method, stop it manually. Return \u00b6 the looping state.","title":"Is loop"},{"location":"android-reference/sdk/com.voxeet.sdk.utils/-audio-type/is-loop/#isloop","text":"[Android] open fun isLoop (): Boolean Checks if the specific type of audio is used in a loop. Before calling this method, stop it manually.","title":"isLoop"},{"location":"android-reference/sdk/com.voxeet.sdk.utils/-audio-type/is-loop/#return","text":"the looping state.","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.utils/-audio-type/value-of/","text":"// sdk / com.voxeet.sdk.utils / AudioType / valueOf valueOf \u00b6 [Android] open fun valueOf (name: String ): AudioType Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) Return \u00b6 the enum constant with the specified name Throws \u00b6 IllegalArgumentException if this enum type has no constant with the specified name","title":"Value of"},{"location":"android-reference/sdk/com.voxeet.sdk.utils/-audio-type/value-of/#valueof","text":"[Android] open fun valueOf (name: String ): AudioType Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)","title":"valueOf"},{"location":"android-reference/sdk/com.voxeet.sdk.utils/-audio-type/value-of/#return","text":"the enum constant with the specified name","title":"Return"},{"location":"android-reference/sdk/com.voxeet.sdk.utils/-audio-type/value-of/#throws","text":"IllegalArgumentException if this enum type has no constant with the specified name","title":"Throws"},{"location":"android-reference/sdk/com.voxeet.sdk.utils/-audio-type/values/","text":"// sdk / com.voxeet.sdk.utils / AudioType / values values \u00b6 [Android] open fun values (): Array < AudioType > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants. Return \u00b6 an array containing the constants of this enum type, in the order they're declared","title":"Values"},{"location":"android-reference/sdk/com.voxeet.sdk.utils/-audio-type/values/#values","text":"[Android] open fun values (): Array < AudioType > Returns an array containing the constants of this enum type, in the order they're declared. This method may be used to iterate over the constants.","title":"values"},{"location":"android-reference/sdk/com.voxeet.sdk.utils/-audio-type/values/#return","text":"an array containing the constants of this enum type, in the order they're declared","title":"Return"}]}